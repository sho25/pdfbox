begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|tools
operator|.
name|pdfdebugger
operator|.
name|ui
operator|.
name|textsearcher
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ComponentEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ComponentListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|AbstractAction
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JCheckBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JMenu
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|KeyStroke
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|DocumentEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|DocumentListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|BadLocationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|DefaultHighlighter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|Highlighter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|JTextComponent
import|;
end_import

begin_comment
comment|/**  * @author Khyrul Bashar  */
end_comment

begin_class
specifier|public
class|class
name|Searcher
implements|implements
name|DocumentListener
implements|,
name|ChangeListener
implements|,
name|ComponentListener
block|{
specifier|private
specifier|static
specifier|final
name|Highlighter
operator|.
name|HighlightPainter
name|PAINTER
init|=
operator|new
name|DefaultHighlighter
operator|.
name|DefaultHighlightPainter
argument_list|(
name|Color
operator|.
name|yellow
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Highlighter
operator|.
name|HighlightPainter
name|SELECTION_PAINTER
init|=
operator|new
name|DefaultHighlighter
operator|.
name|DefaultHighlightPainter
argument_list|(
operator|new
name|Color
argument_list|(
literal|109
argument_list|,
literal|216
argument_list|,
literal|26
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|SearchEngine
name|searchEngine
decl_stmt|;
specifier|private
specifier|final
name|SearchPanel
name|searchPanel
decl_stmt|;
specifier|private
specifier|final
name|JTextComponent
name|textComponent
decl_stmt|;
specifier|private
name|int
name|totalMatch
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|currentMatch
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Highlighter
operator|.
name|Highlight
argument_list|>
name|highlights
decl_stmt|;
specifier|private
specifier|final
name|Action
name|previousAction
init|=
operator|new
name|AbstractAction
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|actionEvent
parameter_list|)
block|{
if|if
condition|(
name|totalMatch
operator|!=
literal|0
condition|)
block|{
name|currentMatch
operator|=
name|currentMatch
operator|-
literal|1
expr_stmt|;
name|int
name|offset
init|=
name|highlights
operator|.
name|get
argument_list|(
name|currentMatch
argument_list|)
operator|.
name|getStartOffset
argument_list|()
decl_stmt|;
name|scrollToWord
argument_list|(
name|offset
argument_list|)
expr_stmt|;
name|updateHighLighter
argument_list|(
name|currentMatch
argument_list|,
name|currentMatch
operator|+
literal|1
argument_list|)
expr_stmt|;
name|updateNavigationButtons
argument_list|()
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
specifier|private
specifier|final
name|Action
name|nextAction
init|=
operator|new
name|AbstractAction
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|actionEvent
parameter_list|)
block|{
if|if
condition|(
name|totalMatch
operator|!=
literal|0
condition|)
block|{
name|currentMatch
operator|=
name|currentMatch
operator|+
literal|1
expr_stmt|;
name|int
name|offset
init|=
name|highlights
operator|.
name|get
argument_list|(
name|currentMatch
argument_list|)
operator|.
name|getStartOffset
argument_list|()
decl_stmt|;
name|scrollToWord
argument_list|(
name|offset
argument_list|)
expr_stmt|;
name|updateHighLighter
argument_list|(
name|currentMatch
argument_list|,
name|currentMatch
operator|-
literal|1
argument_list|)
expr_stmt|;
name|updateNavigationButtons
argument_list|()
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
comment|/**      * Constructor.      * @param textComponent JTextComponent instance.      */
specifier|public
name|Searcher
parameter_list|(
name|JTextComponent
name|textComponent
parameter_list|)
block|{
name|this
operator|.
name|textComponent
operator|=
name|textComponent
expr_stmt|;
name|searchPanel
operator|=
operator|new
name|SearchPanel
argument_list|(
name|this
argument_list|,
name|this
argument_list|,
name|this
argument_list|,
name|nextAction
argument_list|,
name|previousAction
argument_list|)
expr_stmt|;
name|searchEngine
operator|=
operator|new
name|SearchEngine
argument_list|(
name|textComponent
argument_list|,
name|PAINTER
argument_list|)
expr_stmt|;
name|nextAction
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|previousAction
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JPanel
name|getSearchPanel
parameter_list|()
block|{
return|return
name|searchPanel
operator|.
name|getPanel
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|insertUpdate
parameter_list|(
name|DocumentEvent
name|documentEvent
parameter_list|)
block|{
name|search
argument_list|(
name|documentEvent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeUpdate
parameter_list|(
name|DocumentEvent
name|documentEvent
parameter_list|)
block|{
name|search
argument_list|(
name|documentEvent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|changedUpdate
parameter_list|(
name|DocumentEvent
name|documentEvent
parameter_list|)
block|{
name|search
argument_list|(
name|documentEvent
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|search
parameter_list|(
name|DocumentEvent
name|documentEvent
parameter_list|)
block|{
try|try
block|{
name|String
name|word
init|=
name|documentEvent
operator|.
name|getDocument
argument_list|()
operator|.
name|getText
argument_list|(
literal|0
argument_list|,
name|documentEvent
operator|.
name|getDocument
argument_list|()
operator|.
name|getLength
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|word
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|nextAction
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|previousAction
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|searchPanel
operator|.
name|reset
argument_list|()
expr_stmt|;
name|textComponent
operator|.
name|getHighlighter
argument_list|()
operator|.
name|removeAllHighlights
argument_list|()
expr_stmt|;
return|return;
block|}
name|search
argument_list|(
name|word
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|search
parameter_list|(
name|String
name|word
parameter_list|)
block|{
name|highlights
operator|=
name|searchEngine
operator|.
name|search
argument_list|(
name|word
argument_list|,
name|searchPanel
operator|.
name|isCaseSensitive
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|highlights
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|totalMatch
operator|=
name|highlights
operator|.
name|size
argument_list|()
expr_stmt|;
name|currentMatch
operator|=
literal|0
expr_stmt|;
name|scrollToWord
argument_list|(
name|highlights
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getStartOffset
argument_list|()
argument_list|)
expr_stmt|;
name|updateHighLighter
argument_list|(
name|currentMatch
argument_list|,
name|currentMatch
operator|-
literal|1
argument_list|)
expr_stmt|;
name|updateNavigationButtons
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|searchPanel
operator|.
name|updateCounterLabel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|updateNavigationButtons
parameter_list|()
block|{
if|if
condition|(
name|currentMatch
operator|==
literal|0
condition|)
block|{
name|previousAction
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|currentMatch
operator|>=
literal|1
operator|&&
name|currentMatch
operator|<=
operator|(
name|totalMatch
operator|-
literal|1
operator|)
condition|)
block|{
name|previousAction
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|currentMatch
operator|==
operator|(
name|totalMatch
operator|-
literal|1
operator|)
condition|)
block|{
name|nextAction
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|currentMatch
operator|<
operator|(
name|totalMatch
operator|-
literal|1
operator|)
condition|)
block|{
name|nextAction
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|searchPanel
operator|.
name|updateCounterLabel
argument_list|(
name|currentMatch
operator|+
literal|1
argument_list|,
name|totalMatch
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|scrollToWord
parameter_list|(
name|int
name|offset
parameter_list|)
block|{
try|try
block|{
name|textComponent
operator|.
name|scrollRectToVisible
argument_list|(
name|textComponent
operator|.
name|modelToView
argument_list|(
name|offset
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|updateHighLighter
parameter_list|(
specifier|final
name|int
name|presentIndex
parameter_list|,
specifier|final
name|int
name|previousIndex
parameter_list|)
block|{
if|if
condition|(
name|previousIndex
operator|!=
operator|-
literal|1
condition|)
block|{
name|changeHighlighter
argument_list|(
name|previousIndex
argument_list|,
name|PAINTER
argument_list|)
expr_stmt|;
block|}
name|changeHighlighter
argument_list|(
name|presentIndex
argument_list|,
name|SELECTION_PAINTER
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|changeHighlighter
parameter_list|(
name|int
name|index
parameter_list|,
name|Highlighter
operator|.
name|HighlightPainter
name|newPainter
parameter_list|)
block|{
name|Highlighter
name|highlighter
init|=
name|textComponent
operator|.
name|getHighlighter
argument_list|()
decl_stmt|;
name|Highlighter
operator|.
name|Highlight
name|highLight
init|=
name|highlights
operator|.
name|get
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|highlighter
operator|.
name|removeHighlight
argument_list|(
name|highLight
argument_list|)
expr_stmt|;
try|try
block|{
name|highlighter
operator|.
name|addHighlight
argument_list|(
name|highLight
operator|.
name|getStartOffset
argument_list|()
argument_list|,
name|highLight
operator|.
name|getEndOffset
argument_list|()
argument_list|,
name|newPainter
argument_list|)
expr_stmt|;
name|highlights
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|highlighter
operator|.
name|getHighlights
argument_list|()
index|[
name|highlighter
operator|.
name|getHighlights
argument_list|()
operator|.
name|length
operator|-
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|stateChanged
parameter_list|(
name|ChangeEvent
name|changeEvent
parameter_list|)
block|{
if|if
condition|(
name|changeEvent
operator|.
name|getSource
argument_list|()
operator|instanceof
name|JCheckBox
condition|)
block|{
name|search
argument_list|(
name|searchPanel
operator|.
name|getSearchWord
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|componentResized
parameter_list|(
name|ComponentEvent
name|componentEvent
parameter_list|)
block|{      }
annotation|@
name|Override
specifier|public
name|void
name|componentMoved
parameter_list|(
name|ComponentEvent
name|componentEvent
parameter_list|)
block|{      }
annotation|@
name|Override
specifier|public
name|void
name|componentShown
parameter_list|(
name|ComponentEvent
name|componentEvent
parameter_list|)
block|{
name|searchPanel
operator|.
name|reFocus
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|componentHidden
parameter_list|(
name|ComponentEvent
name|componentEvent
parameter_list|)
block|{
name|textComponent
operator|.
name|getHighlighter
argument_list|()
operator|.
name|removeAllHighlights
argument_list|()
expr_stmt|;
block|}
specifier|public
name|JMenu
name|getMenu
parameter_list|()
block|{
return|return
name|searchPanel
operator|.
name|getSearchMenu
argument_list|()
return|;
block|}
specifier|public
name|void
name|setFindStroke
parameter_list|(
name|JComponent
name|parent
parameter_list|,
name|KeyStroke
name|keyStroke
parameter_list|)
block|{
name|searchPanel
operator|.
name|setFindStroke
argument_list|(
name|parent
argument_list|,
name|keyStroke
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCloseStroke
parameter_list|(
name|JComponent
name|parent
parameter_list|,
name|KeyStroke
name|keyStroke
parameter_list|)
block|{
name|searchPanel
operator|.
name|setCloseStroke
argument_list|(
name|parent
argument_list|,
name|keyStroke
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

