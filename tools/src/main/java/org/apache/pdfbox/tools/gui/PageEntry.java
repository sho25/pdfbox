begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|tools
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_comment
comment|/**  * Represents an abstract view of a page in the tree view.  *  * @author John Hewson  */
end_comment

begin_class
specifier|public
class|class
name|PageEntry
block|{
specifier|private
specifier|final
name|COSDictionary
name|dict
decl_stmt|;
specifier|private
specifier|final
name|int
name|pageNum
decl_stmt|;
specifier|public
name|PageEntry
parameter_list|(
name|COSDictionary
name|page
parameter_list|,
name|int
name|pageNum
parameter_list|)
block|{
name|dict
operator|=
name|page
expr_stmt|;
name|this
operator|.
name|pageNum
operator|=
name|pageNum
expr_stmt|;
block|}
specifier|public
name|COSDictionary
name|getDict
parameter_list|()
block|{
return|return
name|dict
return|;
block|}
specifier|public
name|int
name|getPageNum
parameter_list|()
block|{
return|return
name|pageNum
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Page: "
operator|+
name|pageNum
return|;
block|}
specifier|public
name|String
name|getPath
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"Root/Pages"
argument_list|)
expr_stmt|;
name|COSDictionary
name|node
init|=
name|dict
decl_stmt|;
while|while
condition|(
name|node
operator|.
name|containsKey
argument_list|(
name|COSName
operator|.
name|PARENT
argument_list|)
condition|)
block|{
name|COSDictionary
name|parent
init|=
operator|(
name|COSDictionary
operator|)
name|node
operator|.
name|getDictionaryObject
argument_list|(
name|COSName
operator|.
name|PARENT
argument_list|)
decl_stmt|;
name|COSArray
name|kids
init|=
operator|(
name|COSArray
operator|)
name|parent
operator|.
name|getDictionaryObject
argument_list|(
name|COSName
operator|.
name|KIDS
argument_list|)
decl_stmt|;
name|int
name|idx
init|=
name|kids
operator|.
name|indexOfObject
argument_list|(
name|node
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"/Kids/["
argument_list|)
operator|.
name|append
argument_list|(
name|idx
argument_list|)
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
name|node
operator|=
name|parent
expr_stmt|;
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

