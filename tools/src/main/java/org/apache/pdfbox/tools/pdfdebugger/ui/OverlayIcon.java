begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|tools
operator|.
name|pdfdebugger
operator|.
name|ui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ImageIcon
import|;
end_import

begin_comment
comment|/**  * An ImageIcon which allows other ImageIcon overlays.  */
end_comment

begin_class
specifier|public
class|class
name|OverlayIcon
extends|extends
name|ImageIcon
block|{
specifier|private
specifier|final
name|ImageIcon
name|base
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|ImageIcon
argument_list|>
name|overlays
decl_stmt|;
specifier|public
name|OverlayIcon
parameter_list|(
name|ImageIcon
name|base
parameter_list|)
block|{
name|super
argument_list|(
name|base
operator|.
name|getImage
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|base
operator|=
name|base
expr_stmt|;
name|this
operator|.
name|overlays
operator|=
operator|new
name|ArrayList
argument_list|<
name|ImageIcon
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|add
parameter_list|(
name|ImageIcon
name|overlay
parameter_list|)
block|{
name|overlays
operator|.
name|add
argument_list|(
name|overlay
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|synchronized
name|void
name|paintIcon
parameter_list|(
name|Component
name|c
parameter_list|,
name|Graphics
name|g
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
block|{
name|base
operator|.
name|paintIcon
argument_list|(
name|c
argument_list|,
name|g
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
for|for
control|(
name|ImageIcon
name|icon
range|:
name|overlays
control|)
block|{
name|icon
operator|.
name|paintIcon
argument_list|(
name|c
argument_list|,
name|g
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

