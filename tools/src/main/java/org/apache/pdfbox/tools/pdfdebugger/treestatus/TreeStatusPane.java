begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|tools
operator|.
name|pdfdebugger
operator|.
name|treestatus
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|AbstractAction
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTree
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|border
operator|.
name|BevelBorder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|border
operator|.
name|Border
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|TreeSelectionEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|TreeSelectionListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|tree
operator|.
name|TreePath
import|;
end_import

begin_comment
comment|/**  * @author Khyrul Bashar  */
end_comment

begin_class
specifier|public
class|class
name|TreeStatusPane
implements|implements
name|TreeSelectionListener
block|{
specifier|private
name|TreeStatus
name|statusObj
decl_stmt|;
specifier|private
name|JTree
name|tree
decl_stmt|;
specifier|private
name|JTextField
name|statusField
decl_stmt|;
specifier|private
name|JPanel
name|panel
decl_stmt|;
specifier|private
name|Border
name|defaultBorder
decl_stmt|;
specifier|private
name|Border
name|errorBorder
decl_stmt|;
specifier|private
specifier|final
name|Action
name|textInputAction
init|=
operator|new
name|AbstractAction
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|actionEvent
parameter_list|)
block|{
name|TreePath
name|path
init|=
name|statusObj
operator|.
name|getPathForString
argument_list|(
name|statusField
operator|.
name|getText
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|path
operator|!=
literal|null
condition|)
block|{
name|tree
operator|.
name|setSelectionPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|tree
operator|.
name|scrollPathToVisible
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|tree
operator|.
name|requestFocusInWindow
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|statusField
operator|.
name|setBorder
argument_list|(
name|errorBorder
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
comment|/**      * Constructor.      * @param targetTree The tree instance that this status pane will correspond.      */
specifier|public
name|TreeStatusPane
parameter_list|(
name|JTree
name|targetTree
parameter_list|)
block|{
name|tree
operator|=
name|targetTree
expr_stmt|;
name|init
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|init
parameter_list|()
block|{
name|panel
operator|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|statusField
operator|=
operator|new
name|JTextField
argument_list|()
expr_stmt|;
name|statusField
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|statusField
argument_list|)
expr_stmt|;
name|defaultBorder
operator|=
operator|new
name|BevelBorder
argument_list|(
name|BevelBorder
operator|.
name|LOWERED
argument_list|)
expr_stmt|;
name|errorBorder
operator|=
operator|new
name|BevelBorder
argument_list|(
name|BevelBorder
operator|.
name|LOWERED
argument_list|,
name|Color
operator|.
name|RED
argument_list|,
name|Color
operator|.
name|RED
argument_list|)
expr_stmt|;
name|statusField
operator|.
name|setAction
argument_list|(
name|textInputAction
argument_list|)
expr_stmt|;
name|tree
operator|.
name|addTreeSelectionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
comment|/**      * Return the panel of this TreeStatusPane.      * @return JPanel instance.      */
specifier|public
name|JPanel
name|getPanel
parameter_list|()
block|{
return|return
name|panel
return|;
block|}
comment|/**      * In case of document changing this should be called to update TreeStatus value of the pane.      * @param statusObj TreeStatus instance.      */
specifier|public
name|void
name|updateTreeStatus
parameter_list|(
name|TreeStatus
name|statusObj
parameter_list|)
block|{
name|statusField
operator|.
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|statusObj
operator|=
name|statusObj
expr_stmt|;
name|updateText
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|updateText
parameter_list|(
name|String
name|statusString
parameter_list|)
block|{
name|statusField
operator|.
name|setText
argument_list|(
name|statusString
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|statusField
operator|.
name|getBorder
argument_list|()
operator|.
name|equals
argument_list|(
name|defaultBorder
argument_list|)
condition|)
block|{
name|statusField
operator|.
name|setBorder
argument_list|(
name|defaultBorder
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Tree selection change listener which updates status string.      * @param treeSelectionEvent      */
annotation|@
name|Override
specifier|public
name|void
name|valueChanged
parameter_list|(
name|TreeSelectionEvent
name|treeSelectionEvent
parameter_list|)
block|{
name|TreePath
name|path
init|=
name|treeSelectionEvent
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|updateText
argument_list|(
name|statusObj
operator|.
name|getStringForPath
argument_list|(
name|path
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

