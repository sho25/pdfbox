begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|tools
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics2D
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdfviewer
operator|.
name|PageDrawer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDPage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|PDRectangle
import|;
end_import

begin_comment
comment|/**  * This is a simple JPanel that can be used to display a PDF page.  *  * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.4 $  */
end_comment

begin_class
specifier|public
class|class
name|PDFPagePanel
extends|extends
name|JPanel
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|4629033339560890669L
decl_stmt|;
specifier|private
name|PDPage
name|page
decl_stmt|;
specifier|private
name|PageDrawer
name|drawer
init|=
literal|null
decl_stmt|;
specifier|private
name|Dimension
name|pageDimension
init|=
literal|null
decl_stmt|;
specifier|private
name|Dimension
name|drawDimension
init|=
literal|null
decl_stmt|;
comment|/**      * Constructor.      *      * @throws IOException If there is an error creating the Page drawing objects.      */
specifier|public
name|PDFPagePanel
parameter_list|()
throws|throws
name|IOException
block|{
name|drawer
operator|=
operator|new
name|PageDrawer
argument_list|()
expr_stmt|;
block|}
comment|/**      * This will set the page that should be displayed in this panel.      *      * @param pdfPage The page to draw.      */
specifier|public
name|void
name|setPage
parameter_list|(
name|PDPage
name|pdfPage
parameter_list|)
block|{
name|page
operator|=
name|pdfPage
expr_stmt|;
name|PDRectangle
name|cropBox
init|=
name|page
operator|.
name|findCropBox
argument_list|()
decl_stmt|;
name|drawDimension
operator|=
name|cropBox
operator|.
name|createDimension
argument_list|()
expr_stmt|;
name|int
name|rotation
init|=
name|page
operator|.
name|findRotation
argument_list|()
decl_stmt|;
if|if
condition|(
name|rotation
operator|==
literal|90
operator|||
name|rotation
operator|==
literal|270
condition|)
block|{
name|pageDimension
operator|=
operator|new
name|Dimension
argument_list|(
name|drawDimension
operator|.
name|height
argument_list|,
name|drawDimension
operator|.
name|width
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|pageDimension
operator|=
name|drawDimension
expr_stmt|;
block|}
name|setSize
argument_list|(
name|pageDimension
argument_list|)
expr_stmt|;
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|white
argument_list|)
expr_stmt|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|void
name|paint
parameter_list|(
name|Graphics
name|g
parameter_list|)
block|{
try|try
block|{
name|g
operator|.
name|setColor
argument_list|(
name|getBackground
argument_list|()
argument_list|)
expr_stmt|;
name|g
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|getWidth
argument_list|()
argument_list|,
name|getHeight
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|rotation
init|=
name|page
operator|.
name|findRotation
argument_list|()
decl_stmt|;
if|if
condition|(
name|rotation
operator|==
literal|90
operator|||
name|rotation
operator|==
literal|270
condition|)
block|{
name|Graphics2D
name|g2D
init|=
operator|(
name|Graphics2D
operator|)
name|g
decl_stmt|;
name|g2D
operator|.
name|translate
argument_list|(
name|pageDimension
operator|.
name|getWidth
argument_list|()
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|g2D
operator|.
name|rotate
argument_list|(
name|Math
operator|.
name|toRadians
argument_list|(
name|rotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|PDRectangle
name|pageSize
init|=
operator|new
name|PDRectangle
argument_list|(
operator|(
name|float
operator|)
name|drawDimension
operator|.
name|getWidth
argument_list|()
argument_list|,
operator|(
name|float
operator|)
name|drawDimension
operator|.
name|getHeight
argument_list|()
argument_list|)
decl_stmt|;
name|drawer
operator|.
name|drawPage
argument_list|(
name|g
argument_list|,
name|page
argument_list|,
name|pageSize
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

