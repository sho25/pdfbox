begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|tools
operator|.
name|pdfdebugger
operator|.
name|hexviewer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|FlowLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Font
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BoxLayout
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|UIManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|tools
operator|.
name|pdfdebugger
operator|.
name|streampane
operator|.
name|Stream
import|;
end_import

begin_comment
comment|/**  * @author Khyrul Bashar  *  * HexView takes a byte array or Stream instance and shows them in Hex viewer.  */
end_comment

begin_class
specifier|public
class|class
name|HexView
implements|implements
name|ActionListener
block|{
specifier|private
name|JComponent
name|mainPane
decl_stmt|;
specifier|private
name|Stream
name|stream
decl_stmt|;
specifier|static
specifier|final
name|Font
name|FONT
init|=
operator|new
name|Font
argument_list|(
literal|"monospaced"
argument_list|,
name|Font
operator|.
name|PLAIN
argument_list|,
literal|13
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|int
name|CHAR_HEIGHT
init|=
literal|20
decl_stmt|;
specifier|static
specifier|final
name|int
name|CHAR_WIDTH
init|=
literal|35
decl_stmt|;
specifier|static
specifier|final
name|int
name|LINE_INSET
init|=
literal|20
decl_stmt|;
specifier|static
specifier|final
name|Color
name|SELECTED_COLOR
init|=
name|UIManager
operator|.
name|getColor
argument_list|(
literal|"textHighlight"
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|Font
name|BOLD_FONT
init|=
operator|new
name|Font
argument_list|(
literal|"monospaced"
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
literal|13
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|int
name|HEX_PANE_WIDTH
init|=
literal|600
decl_stmt|;
specifier|static
specifier|final
name|int
name|ADDRESS_PANE_WIDTH
init|=
literal|120
decl_stmt|;
specifier|static
specifier|final
name|int
name|ASCII_PANE_WIDTH
init|=
literal|270
decl_stmt|;
specifier|static
specifier|final
name|int
name|TOTAL_WIDTH
init|=
name|HEX_PANE_WIDTH
operator|+
name|ADDRESS_PANE_WIDTH
operator|+
name|ASCII_PANE_WIDTH
decl_stmt|;
comment|/**      * Constructor.      * @param bytes takes a byte array.      */
specifier|public
name|HexView
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|)
block|{
name|createView
argument_list|()
expr_stmt|;
name|mainPane
operator|.
name|add
argument_list|(
name|createHexEditor
argument_list|(
name|bytes
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructor.      * @param stream Stream instance.      * @throws IOException      */
specifier|public
name|HexView
parameter_list|(
name|Stream
name|stream
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|stream
operator|=
name|stream
expr_stmt|;
name|createView
argument_list|()
expr_stmt|;
name|JPanel
name|panel
init|=
name|createHeaderPanel
argument_list|(
name|stream
operator|.
name|getFilterList
argument_list|()
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
name|stream
operator|.
name|getStream
argument_list|(
name|stream
operator|.
name|getFilterList
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|mainPane
operator|.
name|add
argument_list|(
name|panel
argument_list|)
expr_stmt|;
name|mainPane
operator|.
name|add
argument_list|(
name|createHexEditor
argument_list|(
name|IOUtils
operator|.
name|toByteArray
argument_list|(
name|is
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createView
parameter_list|()
block|{
name|mainPane
operator|=
operator|new
name|JPanel
argument_list|()
expr_stmt|;
name|mainPane
operator|.
name|setLayout
argument_list|(
operator|new
name|BoxLayout
argument_list|(
name|mainPane
argument_list|,
name|BoxLayout
operator|.
name|PAGE_AXIS
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|HexEditor
name|createHexEditor
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|)
block|{
name|HexModel
name|model
init|=
operator|new
name|HexModel
argument_list|(
name|bytes
argument_list|)
decl_stmt|;
return|return
operator|new
name|HexEditor
argument_list|(
name|model
argument_list|)
return|;
block|}
specifier|public
name|JComponent
name|getPane
parameter_list|()
block|{
return|return
name|mainPane
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|actionEvent
parameter_list|)
block|{
if|if
condition|(
name|actionEvent
operator|.
name|getActionCommand
argument_list|()
operator|.
name|equals
argument_list|(
literal|"comboBoxChanged"
argument_list|)
condition|)
block|{
name|JComboBox
name|comboBox
init|=
operator|(
name|JComboBox
operator|)
name|actionEvent
operator|.
name|getSource
argument_list|()
decl_stmt|;
name|String
name|currentFilter
init|=
operator|(
name|String
operator|)
name|comboBox
operator|.
name|getSelectedItem
argument_list|()
decl_stmt|;
try|try
block|{
name|HexEditor
name|editor
init|=
name|createHexEditor
argument_list|(
name|IOUtils
operator|.
name|toByteArray
argument_list|(
name|stream
operator|.
name|getStream
argument_list|(
name|currentFilter
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|mainPane
operator|.
name|remove
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|mainPane
operator|.
name|add
argument_list|(
name|editor
argument_list|)
expr_stmt|;
name|mainPane
operator|.
name|revalidate
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|JPanel
name|createHeaderPanel
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|availableFilters
parameter_list|)
block|{
if|if
condition|(
name|availableFilters
operator|.
name|contains
argument_list|(
literal|"Image"
argument_list|)
condition|)
block|{
name|availableFilters
operator|.
name|remove
argument_list|(
literal|"Image"
argument_list|)
expr_stmt|;
block|}
name|JComboBox
name|filters
init|=
operator|new
name|JComboBox
argument_list|(
name|availableFilters
operator|.
name|toArray
argument_list|()
argument_list|)
decl_stmt|;
name|filters
operator|.
name|setSelectedItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|filters
operator|.
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|JPanel
name|panel
init|=
operator|new
name|JPanel
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Dimension
name|getMaximumSize
parameter_list|()
block|{
return|return
operator|new
name|Dimension
argument_list|(
name|HexView
operator|.
name|TOTAL_WIDTH
argument_list|,
literal|45
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|panel
operator|.
name|setLayout
argument_list|(
operator|new
name|FlowLayout
argument_list|()
argument_list|)
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|filters
argument_list|)
expr_stmt|;
name|panel
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
name|HexView
operator|.
name|TOTAL_WIDTH
argument_list|,
literal|45
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|panel
return|;
block|}
block|}
end_class

end_unit

