begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|tools
operator|.
name|pdfdebugger
operator|.
name|streampane
operator|.
name|tooltip
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|font
operator|.
name|PDFont
import|;
end_import

begin_comment
comment|/**  * @author Khyrul Bashar  * A class that provieds tooltip text for font. This shows the name of the font.  */
end_comment

begin_class
specifier|final
class|class
name|FontToolTip
implements|implements
name|ToolTip
block|{
specifier|private
name|String
name|markup
decl_stmt|;
comment|/**      * Constructor.      * @param resources PDResources instance. Which corresponds the resource dictionary containing      *                  the concern font.      * @param rowText String instance of the tooltip row.      */
name|FontToolTip
parameter_list|(
name|PDResources
name|resources
parameter_list|,
name|String
name|rowText
parameter_list|)
block|{
name|initUI
argument_list|(
name|extractFontReference
argument_list|(
name|rowText
argument_list|)
argument_list|,
name|resources
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initUI
parameter_list|(
name|String
name|fontReferenceName
parameter_list|,
name|PDResources
name|resources
parameter_list|)
block|{
name|PDFont
name|font
init|=
literal|null
decl_stmt|;
for|for
control|(
name|COSName
name|name
range|:
name|resources
operator|.
name|getFontNames
argument_list|()
control|)
block|{
if|if
condition|(
name|name
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|fontReferenceName
argument_list|)
condition|)
block|{
try|try
block|{
name|font
operator|=
name|resources
operator|.
name|getFont
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|font
operator|!=
literal|null
condition|)
block|{
name|markup
operator|=
literal|"<html>"
operator|+
name|font
operator|.
name|getName
argument_list|()
operator|+
literal|"</html>"
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|extractFontReference
parameter_list|(
name|String
name|rowText
parameter_list|)
block|{
return|return
name|rowText
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
index|[
literal|0
index|]
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getToolTipText
parameter_list|()
block|{
return|return
name|markup
return|;
block|}
block|}
end_class

end_unit

