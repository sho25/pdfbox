begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|tools
operator|.
name|pdfdebugger
operator|.
name|hexviewer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics2D
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Rectangle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|RenderingHints
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_comment
comment|/**  * @author Khyrul Bashar  *  * This class shows corresponding ASCII characters for bytes. For every 16 byte there is one line.  * This paints the only visible contents at one time.  */
end_comment

begin_class
class|class
name|ASCIIPane
extends|extends
name|JComponent
implements|implements
name|HexModelChangeListener
block|{
specifier|private
specifier|final
name|HexModel
name|model
decl_stmt|;
specifier|private
name|int
name|selectedLine
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|int
name|selectedIndexInLine
decl_stmt|;
comment|/**      * Constructor.      * @param model HexModel instance.      */
name|ASCIIPane
parameter_list|(
name|HexModel
name|model
parameter_list|)
block|{
name|this
operator|.
name|model
operator|=
name|model
expr_stmt|;
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
name|HexView
operator|.
name|ASCII_PANE_WIDTH
argument_list|,
name|HexView
operator|.
name|CHAR_HEIGHT
operator|*
operator|(
name|model
operator|.
name|totalLine
argument_list|()
operator|+
literal|1
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|addHexModelChangeListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|setFont
argument_list|(
name|HexView
operator|.
name|FONT
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|paintComponent
parameter_list|(
name|Graphics
name|g
parameter_list|)
block|{
name|super
operator|.
name|paintComponent
argument_list|(
name|g
argument_list|)
expr_stmt|;
name|Graphics2D
name|g2d
init|=
operator|(
name|Graphics2D
operator|)
name|g
decl_stmt|;
name|g2d
operator|.
name|setRenderingHints
argument_list|(
name|HexView
operator|.
name|RENDERING_HINTS
argument_list|)
expr_stmt|;
name|Rectangle
name|bound
init|=
name|getVisibleRect
argument_list|()
decl_stmt|;
name|int
name|x
init|=
name|HexView
operator|.
name|LINE_INSET
decl_stmt|;
name|int
name|y
init|=
name|bound
operator|.
name|y
decl_stmt|;
if|if
condition|(
name|y
operator|==
literal|0
operator|||
name|y
operator|%
name|HexView
operator|.
name|CHAR_HEIGHT
operator|!=
literal|0
condition|)
block|{
name|y
operator|+=
name|HexView
operator|.
name|CHAR_HEIGHT
operator|-
name|y
operator|%
name|HexView
operator|.
name|CHAR_HEIGHT
expr_stmt|;
block|}
name|int
name|firstLine
init|=
name|y
operator|/
name|HexView
operator|.
name|CHAR_HEIGHT
decl_stmt|;
for|for
control|(
name|int
name|line
init|=
name|firstLine
init|;
name|line
operator|<
name|firstLine
operator|+
name|bound
operator|.
name|getHeight
argument_list|()
operator|/
name|HexView
operator|.
name|CHAR_HEIGHT
condition|;
name|line
operator|++
control|)
block|{
if|if
condition|(
name|line
operator|>
name|model
operator|.
name|totalLine
argument_list|()
condition|)
block|{
break|break;
block|}
if|if
condition|(
name|line
operator|==
name|selectedLine
condition|)
block|{
name|paintInSelected
argument_list|(
name|g
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|char
index|[]
name|chars
init|=
name|model
operator|.
name|getLineChars
argument_list|(
name|line
argument_list|)
decl_stmt|;
name|g
operator|.
name|drawChars
argument_list|(
name|chars
argument_list|,
literal|0
argument_list|,
name|chars
operator|.
name|length
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
name|x
operator|=
name|HexView
operator|.
name|LINE_INSET
expr_stmt|;
name|y
operator|+=
name|HexView
operator|.
name|CHAR_HEIGHT
expr_stmt|;
block|}
block|}
comment|/**      * Paint a selected line      * @param g Graphics instance.      * @param x int. x axis value.      * @param y int. y axis value.      */
specifier|private
name|void
name|paintInSelected
parameter_list|(
name|Graphics
name|g
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
block|{
name|g
operator|.
name|setFont
argument_list|(
name|HexView
operator|.
name|BOLD_FONT
argument_list|)
expr_stmt|;
name|char
index|[]
name|content
init|=
name|model
operator|.
name|getLineChars
argument_list|(
name|selectedLine
argument_list|)
decl_stmt|;
name|g
operator|.
name|drawChars
argument_list|(
name|content
argument_list|,
literal|0
argument_list|,
name|selectedIndexInLine
operator|-
literal|0
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|g
operator|.
name|setColor
argument_list|(
name|HexView
operator|.
name|SELECTED_COLOR
argument_list|)
expr_stmt|;
name|x
operator|+=
name|g
operator|.
name|getFontMetrics
argument_list|()
operator|.
name|charsWidth
argument_list|(
name|content
argument_list|,
literal|0
argument_list|,
name|selectedIndexInLine
operator|-
literal|0
argument_list|)
expr_stmt|;
name|g
operator|.
name|drawChars
argument_list|(
name|content
argument_list|,
name|selectedIndexInLine
argument_list|,
literal|1
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|g
operator|.
name|setColor
argument_list|(
name|Color
operator|.
name|black
argument_list|)
expr_stmt|;
name|x
operator|+=
name|g
operator|.
name|getFontMetrics
argument_list|()
operator|.
name|charWidth
argument_list|(
name|content
index|[
name|selectedIndexInLine
index|]
argument_list|)
expr_stmt|;
name|g
operator|.
name|drawChars
argument_list|(
name|content
argument_list|,
name|selectedIndexInLine
operator|+
literal|1
argument_list|,
operator|(
name|content
operator|.
name|length
operator|-
literal|1
operator|)
operator|-
name|selectedIndexInLine
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|g
operator|.
name|setFont
argument_list|(
name|HexView
operator|.
name|FONT
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|hexModelChanged
parameter_list|(
name|HexModelChangedEvent
name|event
parameter_list|)
block|{
name|repaint
argument_list|()
expr_stmt|;
block|}
comment|/**      * Updates the line text for a given index. It is used when a byte is      * selected in hex pane.      * @param index int.      */
name|void
name|setSelected
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|selectedLine
operator|=
name|HexModel
operator|.
name|lineNumber
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|selectedIndexInLine
operator|=
name|HexModel
operator|.
name|elementIndexInLine
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|repaint
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

