begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|annotations
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|DocumentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidationResult
operator|.
name|ValidationError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|annotation
operator|.
name|AnnotationValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|annotation
operator|.
name|PDFAbAnnotationFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_class
specifier|public
class|class
name|MyAnnotationFactory
extends|extends
name|PDFAbAnnotationFactory
block|{
specifier|public
name|MyAnnotationFactory
parameter_list|()
block|{ 	}
specifier|public
name|AnnotationValidator
name|instantiateAnnotationValidator
parameter_list|(
name|COSDictionary
name|annotDic
parameter_list|,
name|DocumentHandler
name|handler
parameter_list|,
name|List
argument_list|<
name|ValidationError
argument_list|>
name|errors
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"AnnotationValidatorFactory is overrided"
argument_list|)
expr_stmt|;
return|return
operator|new
name|MyAnnotationValidator
argument_list|(
name|handler
argument_list|,
name|annotDic
argument_list|)
return|;
block|}
specifier|public
class|class
name|MyAnnotationValidator
extends|extends
name|AnnotationValidator
block|{
specifier|public
specifier|static
specifier|final
name|String
name|ERROR
init|=
literal|"MyAnnotationValidator"
decl_stmt|;
specifier|public
name|MyAnnotationValidator
parameter_list|(
name|DocumentHandler
name|handler
parameter_list|,
name|COSDictionary
name|annotDictionary
parameter_list|)
block|{
name|super
argument_list|(
name|handler
argument_list|,
name|annotDictionary
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc) 		 * @see net.padaf.preflight.annotation.AnnotationValidator#checkMandatoryFields(java.util.List) 		 */
annotation|@
name|Override
specifier|protected
name|boolean
name|checkMandatoryFields
parameter_list|(
name|List
argument_list|<
name|ValidationError
argument_list|>
name|errors
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
comment|/* (non-Javadoc) 		 * @see net.padaf.preflight.annotation.AnnotationValidator#validate(java.util.List) 		 */
annotation|@
name|Override
specifier|public
name|boolean
name|validate
parameter_list|(
name|List
argument_list|<
name|ValidationError
argument_list|>
name|errors
parameter_list|)
throws|throws
name|ValidationException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"A Custom AnnotationValidator "
argument_list|)
expr_stmt|;
name|errors
operator|.
name|add
argument_list|(
operator|new
name|ValidationError
argument_list|(
name|ERROR
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
block|}
end_class

end_unit

