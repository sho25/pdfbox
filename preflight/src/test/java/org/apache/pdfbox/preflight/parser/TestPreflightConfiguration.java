begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|parser
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|exception
operator|.
name|MissingValidationProcessException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|exception
operator|.
name|ValidationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|process
operator|.
name|ValidationProcess
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestPreflightConfiguration
block|{
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MissingValidationProcessException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetValidationProcess_MissingProcess
parameter_list|()
throws|throws
name|Exception
block|{
name|PreflightConfiguration
name|configuration
init|=
name|PreflightConfiguration
operator|.
name|createPdfA1BConfiguration
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|getInstanceOfProcess
argument_list|(
literal|"unknownProcess"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetValidationProcess_MissingProcess_NoError
parameter_list|()
throws|throws
name|Exception
block|{
name|PreflightConfiguration
name|configuration
init|=
name|PreflightConfiguration
operator|.
name|createPdfA1BConfiguration
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|setErrorOnMissingProcess
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|getInstanceOfProcess
argument_list|(
literal|"unknownProcess"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReplaceValidationProcess
parameter_list|()
throws|throws
name|Exception
block|{
name|PreflightConfiguration
name|configuration
init|=
name|PreflightConfiguration
operator|.
name|createPdfA1BConfiguration
argument_list|()
decl_stmt|;
name|String
name|processName
init|=
literal|"mock-process"
decl_stmt|;
name|configuration
operator|.
name|replaceProcess
argument_list|(
name|processName
argument_list|,
name|MockProcess
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MockProcess
operator|.
name|class
argument_list|,
name|configuration
operator|.
name|getInstanceOfProcess
argument_list|(
name|processName
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|replaceProcess
argument_list|(
name|processName
argument_list|,
name|MockProcess2
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MockProcess2
operator|.
name|class
argument_list|,
name|configuration
operator|.
name|getInstanceOfProcess
argument_list|(
name|processName
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|MockProcess
implements|implements
name|ValidationProcess
block|{
specifier|public
name|void
name|validate
parameter_list|(
name|PreflightContext
name|ctx
parameter_list|)
throws|throws
name|ValidationException
block|{ 		}
block|}
specifier|public
specifier|static
class|class
name|MockProcess2
extends|extends
name|MockProcess
block|{
specifier|public
name|void
name|validate
parameter_list|(
name|PreflightContext
name|ctx
parameter_list|)
throws|throws
name|ValidationException
block|{ 		}
block|}
block|}
end_class

end_unit

