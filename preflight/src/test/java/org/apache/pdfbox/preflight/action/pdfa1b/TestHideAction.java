begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|action
operator|.
name|pdfa1b
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestHideAction
extends|extends
name|AbstractTestAction
block|{
specifier|protected
name|COSDictionary
name|createHideAction
parameter_list|()
block|{
name|COSDictionary
name|hideAction
init|=
operator|new
name|COSDictionary
argument_list|()
decl_stmt|;
name|hideAction
operator|.
name|setItem
argument_list|(
name|COSName
operator|.
name|TYPE
argument_list|,
name|COSName
operator|.
name|getPDFName
argument_list|(
literal|"Action"
argument_list|)
argument_list|)
expr_stmt|;
name|hideAction
operator|.
name|setItem
argument_list|(
name|COSName
operator|.
name|S
argument_list|,
name|COSName
operator|.
name|getPDFName
argument_list|(
literal|"Hide"
argument_list|)
argument_list|)
expr_stmt|;
name|hideAction
operator|.
name|setBoolean
argument_list|(
name|COSName
operator|.
name|H
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|hideAction
operator|.
name|setString
argument_list|(
name|COSName
operator|.
name|T
argument_list|,
literal|"avalue"
argument_list|)
expr_stmt|;
return|return
name|hideAction
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHideAction
parameter_list|()
throws|throws
name|Exception
block|{
name|COSDictionary
name|action
init|=
name|createHideAction
argument_list|()
decl_stmt|;
name|valid
argument_list|(
name|action
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHideAction_InvalideH
parameter_list|()
throws|throws
name|Exception
block|{
name|COSDictionary
name|action
init|=
name|createHideAction
argument_list|()
decl_stmt|;
name|action
operator|.
name|setBoolean
argument_list|(
name|COSName
operator|.
name|H
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|valid
argument_list|(
name|action
argument_list|,
literal|false
argument_list|,
name|PreflightConstants
operator|.
name|ERROR_ACTION_HIDE_H_INVALID
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHideAction_InvalideT
parameter_list|()
throws|throws
name|Exception
block|{
name|COSDictionary
name|action
init|=
name|createHideAction
argument_list|()
decl_stmt|;
name|action
operator|.
name|setBoolean
argument_list|(
name|COSName
operator|.
name|T
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|valid
argument_list|(
name|action
argument_list|,
literal|false
argument_list|,
name|PreflightConstants
operator|.
name|ERROR_ACTION_INVALID_TYPE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHideAction_MissingT
parameter_list|()
throws|throws
name|Exception
block|{
name|COSDictionary
name|action
init|=
name|createHideAction
argument_list|()
decl_stmt|;
name|action
operator|.
name|removeItem
argument_list|(
name|COSName
operator|.
name|T
argument_list|)
expr_stmt|;
name|valid
argument_list|(
name|action
argument_list|,
literal|false
argument_list|,
name|PreflightConstants
operator|.
name|ERROR_ACTION_MISING_KEY
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

