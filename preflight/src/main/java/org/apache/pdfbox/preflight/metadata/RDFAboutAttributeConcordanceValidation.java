begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|metadata
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|exception
operator|.
name|ValidationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|XMPMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|XMPSchema
import|;
end_import

begin_comment
comment|/**  * Class which all elements within an rdf:RDF have the same value for their rdf:about attributes  *   * @author Germain Costenobel  *   */
end_comment

begin_class
specifier|public
class|class
name|RDFAboutAttributeConcordanceValidation
block|{
comment|/**      *       * @param metadata the XMP metadata.      * @throws DifferentRDFAboutException      * @throws ValidationException      */
specifier|public
name|void
name|validateRDFAboutAttributes
parameter_list|(
name|XMPMetadata
name|metadata
parameter_list|)
throws|throws
name|ValidationException
throws|,
name|DifferentRDFAboutException
block|{
name|List
argument_list|<
name|XMPSchema
argument_list|>
name|schemas
init|=
name|metadata
operator|.
name|getAllSchemas
argument_list|()
decl_stmt|;
if|if
condition|(
name|schemas
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"Schemas not found in the given metadata representation"
argument_list|)
throw|;
block|}
name|String
name|about
init|=
name|schemas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAboutValue
argument_list|()
decl_stmt|;
comment|// rdf:description must have an rdf:about attribute
for|for
control|(
name|XMPSchema
name|xmpSchema
range|:
name|schemas
control|)
block|{
comment|// each rdf:Description must have the same rdf:about (or an empty one)
name|String
name|schemaAboutValue
init|=
name|xmpSchema
operator|.
name|getAboutValue
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
literal|""
operator|.
name|equals
argument_list|(
name|schemaAboutValue
argument_list|)
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|about
argument_list|)
operator|||
name|about
operator|.
name|equals
argument_list|(
name|schemaAboutValue
argument_list|)
operator|)
condition|)
block|{
throw|throw
operator|new
name|DifferentRDFAboutException
argument_list|()
throw|;
block|}
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|about
argument_list|)
condition|)
block|{
name|about
operator|=
name|schemaAboutValue
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
class|class
name|DifferentRDFAboutException
extends|extends
name|Exception
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
name|DifferentRDFAboutException
parameter_list|()
block|{
name|super
argument_list|(
literal|"all rdf:about in RDF:rdf must have the same value"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

