begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|font
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSStream
import|;
end_import

begin_class
specifier|public
class|class
name|CIDToGIDMap
block|{
specifier|public
specifier|final
name|int
name|NOTDEF_GLYPH_INDEX
init|=
literal|0
decl_stmt|;
specifier|private
name|byte
index|[]
name|map
init|=
literal|null
decl_stmt|;
comment|/** 	 * Copy the unfiltered stream content in a byte array. 	 * @param stream 	 * @throws IOException if the stream can't be copied 	 */
specifier|public
name|void
name|parseStream
parameter_list|(
name|COSStream
name|stream
parameter_list|)
throws|throws
name|IOException
block|{
name|InputStream
name|is
init|=
name|stream
operator|.
name|getUnfilteredStream
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
try|try
block|{
name|IOUtils
operator|.
name|copy
argument_list|(
name|stream
operator|.
name|getUnfilteredStream
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|map
operator|=
name|os
operator|.
name|toByteArray
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|os
argument_list|)
expr_stmt|;
block|}
block|}
comment|/** 	 * Return the glyph index according to the CID. 	 * @param cid 	 * @return 	 */
specifier|public
name|int
name|getGID
parameter_list|(
name|int
name|cid
parameter_list|)
block|{
if|if
condition|(
name|map
operator|==
literal|null
operator|||
operator|(
name|cid
operator|*
literal|2
operator|+
literal|1
operator|)
operator|>=
name|map
operator|.
name|length
condition|)
block|{
return|return
name|NOTDEF_GLYPH_INDEX
return|;
block|}
name|int
name|index
init|=
name|cid
operator|*
literal|2
decl_stmt|;
return|return
operator|(
operator|(
name|map
index|[
name|index
index|]
operator|&
literal|0xFF
operator|)
operator|<<
literal|8
operator|)
operator|^
operator|(
name|map
index|[
name|index
operator|+
literal|1
index|]
operator|&
literal|0xFF
operator|)
return|;
block|}
block|}
end_class

end_unit

