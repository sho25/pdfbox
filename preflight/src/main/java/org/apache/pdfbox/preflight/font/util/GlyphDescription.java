begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|font
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|cff
operator|.
name|CharStringCommand
import|;
end_import

begin_class
specifier|public
class|class
name|GlyphDescription
block|{
specifier|private
name|List
argument_list|<
name|Object
argument_list|>
name|operations
init|=
literal|null
decl_stmt|;
specifier|private
name|Integer
name|glyphWidth
init|=
literal|null
decl_stmt|;
name|GlyphDescription
parameter_list|(
name|List
argument_list|<
name|Object
argument_list|>
name|operations
parameter_list|)
block|{
name|this
operator|.
name|operations
operator|=
name|operations
expr_stmt|;
block|}
specifier|public
name|int
name|getGlyphWidth
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|glyphWidth
operator|!=
literal|null
condition|)
block|{
return|return
name|glyphWidth
return|;
block|}
name|this
operator|.
name|glyphWidth
operator|=
name|searchWidth
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|glyphWidth
return|;
block|}
specifier|private
name|int
name|searchWidth
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|operations
operator|!=
literal|null
operator|&&
name|i
operator|<
name|operations
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Object
name|obj
init|=
name|operations
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|obj
operator|instanceof
name|CharStringCommand
condition|)
block|{
name|CharStringCommand
name|csCmd
init|=
operator|(
name|CharStringCommand
operator|)
name|obj
decl_stmt|;
if|if
condition|(
literal|"hsbw"
operator|.
name|equals
argument_list|(
name|CharStringCommand
operator|.
name|TYPE1_VOCABULARY
operator|.
name|get
argument_list|(
name|csCmd
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
condition|)
block|{
return|return
operator|(
name|Integer
operator|)
name|operations
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
return|;
block|}
block|}
block|}
comment|// 0 is the default value if glyph isn't found.
return|return
literal|0
return|;
block|}
block|}
end_class

end_unit

