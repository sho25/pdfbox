begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|process
operator|.
name|reflect
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|PDPostScriptXObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|form
operator|.
name|PDFormXObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|image
operator|.
name|PDImageXObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|exception
operator|.
name|ValidationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|process
operator|.
name|AbstractProcess
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|xobject
operator|.
name|XObjFormValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|xobject
operator|.
name|XObjImageValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|xobject
operator|.
name|XObjPostscriptValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|xobject
operator|.
name|XObjectValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|ValidationResult
operator|.
name|ValidationError
import|;
end_import

begin_class
specifier|public
class|class
name|GraphicObjectPageValidationProcess
extends|extends
name|AbstractProcess
block|{
specifier|public
name|void
name|validate
parameter_list|(
name|PreflightContext
name|context
parameter_list|)
throws|throws
name|ValidationException
block|{
name|PreflightPath
name|vPath
init|=
name|context
operator|.
name|getValidationPath
argument_list|()
decl_stmt|;
name|XObjectValidator
name|validator
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|vPath
operator|.
name|isEmpty
argument_list|()
operator|&&
name|vPath
operator|.
name|isExpectedType
argument_list|(
name|PDImageXObject
operator|.
name|class
argument_list|)
condition|)
block|{
name|validator
operator|=
operator|new
name|XObjImageValidator
argument_list|(
name|context
argument_list|,
operator|(
name|PDImageXObject
operator|)
name|vPath
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
name|vPath
operator|.
name|isEmpty
argument_list|()
operator|&&
name|vPath
operator|.
name|isExpectedType
argument_list|(
name|PDFormXObject
operator|.
name|class
argument_list|)
condition|)
block|{
name|validator
operator|=
operator|new
name|XObjFormValidator
argument_list|(
name|context
argument_list|,
operator|(
name|PDFormXObject
operator|)
name|vPath
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
name|vPath
operator|.
name|isEmpty
argument_list|()
operator|&&
name|vPath
operator|.
name|isExpectedType
argument_list|(
name|PDPostScriptXObject
operator|.
name|class
argument_list|)
condition|)
block|{
name|validator
operator|=
operator|new
name|XObjPostscriptValidator
argument_list|(
name|context
argument_list|,
operator|(
name|PDPostScriptXObject
operator|)
name|vPath
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
name|vPath
operator|.
name|isEmpty
argument_list|()
operator|&&
name|vPath
operator|.
name|isExpectedType
argument_list|(
name|COSStream
operator|.
name|class
argument_list|)
condition|)
block|{
name|context
operator|.
name|addValidationError
argument_list|(
operator|new
name|ValidationError
argument_list|(
name|PreflightConstants
operator|.
name|ERROR_GRAPHIC_XOBJECT_INVALID_TYPE
argument_list|,
literal|"Invalid XObject subtype"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|context
operator|.
name|addValidationError
argument_list|(
operator|new
name|ValidationError
argument_list|(
name|PreflightConstants
operator|.
name|ERROR_GRAPHIC_MISSING_OBJECT
argument_list|,
literal|"Graphic validation process needs at least one PDXObject"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|validator
operator|!=
literal|null
condition|)
block|{
name|validator
operator|.
name|validate
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

