begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|utils
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|ERROR_SYNTAX_STREAM_INVALID_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|ERROR_SYNTAX_STREAM_UNDEFINED_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|INLINE_DICTIONARY_VALUE_FILTER_ASCII_85
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|INLINE_DICTIONARY_VALUE_FILTER_ASCII_HEX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|INLINE_DICTIONARY_VALUE_FILTER_CCITTFF
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|INLINE_DICTIONARY_VALUE_FILTER_DCT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|INLINE_DICTIONARY_VALUE_FILTER_FLATE_DECODE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|INLINE_DICTIONARY_VALUE_FILTER_LZW
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|INLINE_DICTIONARY_VALUE_FILTER_RUN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|STREAM_DICTIONARY_VALUE_FILTER_ASCII_85
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|STREAM_DICTIONARY_VALUE_FILTER_ASCII_HEX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|STREAM_DICTIONARY_VALUE_FILTER_CCITTFF
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|STREAM_DICTIONARY_VALUE_FILTER_DCT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|STREAM_DICTIONARY_VALUE_FILTER_FLATE_DECODE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|STREAM_DICTIONARY_VALUE_FILTER_JBIG
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|STREAM_DICTIONARY_VALUE_FILTER_LZW
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightConstants
operator|.
name|STREAM_DICTIONARY_VALUE_FILTER_RUN
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|ValidationResult
operator|.
name|ValidationError
import|;
end_import

begin_class
specifier|public
class|class
name|FilterHelper
block|{
comment|/**      * This method checks if the filter is authorized for the PDF file according to the preflight document specification      * attribute. For example according to the PDF/A-1 specification, only the LZW filter is forbidden due to Copyright      * compatibility. Because of the PDF/A is based on the PDF1.4 specification, all filters that aren't declared in the      * PDF Reference Third Edition are rejected.      *       * @param context      *            the preflight context      * @param filter      *            the filter to checks      */
specifier|public
specifier|static
name|void
name|isAuthorizedFilter
parameter_list|(
name|PreflightContext
name|context
parameter_list|,
name|String
name|filter
parameter_list|)
block|{
name|PreflightDocument
name|preflightDocument
init|=
name|context
operator|.
name|getDocument
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|preflightDocument
operator|.
name|getSpecification
argument_list|()
condition|)
block|{
case|case
name|PDF_A1A
case|:
name|isAuthorizedFilterInPDFA
argument_list|(
name|context
argument_list|,
name|filter
argument_list|)
expr_stmt|;
break|break;
default|default:
comment|// PDF/A-1b is the default format
name|isAuthorizedFilterInPDFA
argument_list|(
name|context
argument_list|,
name|filter
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
comment|/**      * This method checks if the filter is authorized for a PDF/A file. According to the PDF/A-1 specification, only the      * LZW filter is forbidden due to Copyright compatibility. Because of the PDF/A is based on the PDF1.4      * specification, all filters that aren't declared in the PDF Reference Third Edition are rejected.      *       * @param context      * @param filter      */
specifier|public
specifier|static
name|void
name|isAuthorizedFilterInPDFA
parameter_list|(
name|PreflightContext
name|context
parameter_list|,
name|String
name|filter
parameter_list|)
block|{
if|if
condition|(
name|filter
operator|!=
literal|null
condition|)
block|{
comment|// --- LZW is forbidden.
if|if
condition|(
name|STREAM_DICTIONARY_VALUE_FILTER_LZW
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
operator|||
name|INLINE_DICTIONARY_VALUE_FILTER_LZW
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
condition|)
block|{
name|context
operator|.
name|addValidationError
argument_list|(
operator|new
name|ValidationError
argument_list|(
name|ERROR_SYNTAX_STREAM_INVALID_FILTER
argument_list|,
literal|"LZWDecode is forbidden"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// --- Filters declared in the PDF Reference for PDF 1.4
comment|// --- Other Filters are considered as invalid to avoid not consistent behaviour
name|boolean
name|definedFilter
init|=
name|STREAM_DICTIONARY_VALUE_FILTER_FLATE_DECODE
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
decl_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|STREAM_DICTIONARY_VALUE_FILTER_ASCII_HEX
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|STREAM_DICTIONARY_VALUE_FILTER_ASCII_85
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|STREAM_DICTIONARY_VALUE_FILTER_CCITTFF
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|STREAM_DICTIONARY_VALUE_FILTER_DCT
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|STREAM_DICTIONARY_VALUE_FILTER_JBIG
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|STREAM_DICTIONARY_VALUE_FILTER_RUN
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|INLINE_DICTIONARY_VALUE_FILTER_FLATE_DECODE
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|INLINE_DICTIONARY_VALUE_FILTER_ASCII_HEX
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|INLINE_DICTIONARY_VALUE_FILTER_ASCII_85
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|INLINE_DICTIONARY_VALUE_FILTER_CCITTFF
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|INLINE_DICTIONARY_VALUE_FILTER_DCT
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|definedFilter
operator|=
name|definedFilter
operator|||
name|INLINE_DICTIONARY_VALUE_FILTER_RUN
operator|.
name|equals
argument_list|(
name|filter
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|definedFilter
condition|)
block|{
name|context
operator|.
name|addValidationError
argument_list|(
operator|new
name|ValidationError
argument_list|(
name|ERROR_SYNTAX_STREAM_UNDEFINED_FILTER
argument_list|,
literal|"This filter isn't defined in the PDF Reference Third Edition : "
operator|+
name|filter
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

