begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidatorConfig
operator|.
name|ACRO_FORM_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidatorConfig
operator|.
name|BOOKMARK_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidatorConfig
operator|.
name|CATALOG_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidatorConfig
operator|.
name|FILE_SPECIF_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidatorConfig
operator|.
name|FONT_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidatorConfig
operator|.
name|GRAPHIC_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidatorConfig
operator|.
name|META_DATA_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidatorConfig
operator|.
name|PAGE_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidatorConfig
operator|.
name|STREAM_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidatorConfig
operator|.
name|TRAILER_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidatorConfig
operator|.
name|XREF_FILTER
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|actions
operator|.
name|ActionManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|annotation
operator|.
name|PDFAbAnnotationFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|AcroFormValidationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|BookmarkValidationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|CatalogValidationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|FileSpecificationValidationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|FontValidationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|GraphicsValidationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|MetadataValidationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|PagesValidationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|StreamValidationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|TrailerValidationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|XRefValidationHelper
import|;
end_import

begin_comment
comment|/**  * This Factory Provide an instance of PdfAValidator.<BR />  * If you call the<I>createValidatorInstance</I> without ValidationConfig, the instance will   * be created using the right default configuration. (static attributes in this factory)<BR />  * If you call the<I>createValidatorInstance</I> with your own ValidationConfig, be careful setting   * helpers with the right priority. For a PDF/A here is the 3 first helpers to call :  *<UL>  *<li>CatalogValidationHelper to initialize the OCCProfileWrapper in the DocumentHandler  *<li>StreamValidationHelper to check the length of stream before parse them.  *<li>FontValidationHelper to store FontContainers in the DocumentHandler before validate Text operator  *</UL>  * In addition you can set a custom AnnotationValidatorFactory and a custom ActionManagerFactory. By default  * the configuration object defines  the PDFAbAnnotationFactory and the ActionManagerFactory.  */
end_comment

begin_class
specifier|public
class|class
name|PdfAValidatorFactory
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PDF_A_1_b
init|=
literal|"PDF/A-1b"
decl_stmt|;
comment|/**    * Create the Generic Configuration For the PDF/A-1B file    * @return    */
specifier|public
specifier|static
name|ValidatorConfig
name|getStandardPDFA1BConfiguration
parameter_list|()
block|{
name|ValidatorConfig
name|pdfa1bStandardConfig
init|=
operator|new
name|ValidatorConfig
argument_list|()
decl_stmt|;
name|pdfa1bStandardConfig
operator|.
name|addPriorHelpers
argument_list|(
name|STREAM_FILTER
argument_list|,
name|StreamValidationHelper
operator|.
name|class
argument_list|)
expr_stmt|;
name|pdfa1bStandardConfig
operator|.
name|addPriorHelpers
argument_list|(
name|CATALOG_FILTER
argument_list|,
name|CatalogValidationHelper
operator|.
name|class
argument_list|)
expr_stmt|;
name|pdfa1bStandardConfig
operator|.
name|addPriorHelpers
argument_list|(
name|FONT_FILTER
argument_list|,
name|FontValidationHelper
operator|.
name|class
argument_list|)
expr_stmt|;
name|pdfa1bStandardConfig
operator|.
name|addPriorHelpers
argument_list|(
name|GRAPHIC_FILTER
argument_list|,
name|GraphicsValidationHelper
operator|.
name|class
argument_list|)
expr_stmt|;
name|pdfa1bStandardConfig
operator|.
name|addStandHelpers
argument_list|(
name|TRAILER_FILTER
argument_list|,
name|TrailerValidationHelper
operator|.
name|class
argument_list|)
expr_stmt|;
name|pdfa1bStandardConfig
operator|.
name|addStandHelpers
argument_list|(
name|XREF_FILTER
argument_list|,
name|XRefValidationHelper
operator|.
name|class
argument_list|)
expr_stmt|;
name|pdfa1bStandardConfig
operator|.
name|addStandHelpers
argument_list|(
name|BOOKMARK_FILTER
argument_list|,
name|BookmarkValidationHelper
operator|.
name|class
argument_list|)
expr_stmt|;
name|pdfa1bStandardConfig
operator|.
name|addStandHelpers
argument_list|(
name|ACRO_FORM_FILTER
argument_list|,
name|AcroFormValidationHelper
operator|.
name|class
argument_list|)
expr_stmt|;
name|pdfa1bStandardConfig
operator|.
name|addStandHelpers
argument_list|(
name|FILE_SPECIF_FILTER
argument_list|,
name|FileSpecificationValidationHelper
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Page Helper must be called after the FontHelper to check
comment|// if Fonts used by the page content are embedded in the PDF file.
name|pdfa1bStandardConfig
operator|.
name|addStandHelpers
argument_list|(
name|PAGE_FILTER
argument_list|,
name|PagesValidationHelper
operator|.
name|class
argument_list|)
expr_stmt|;
name|pdfa1bStandardConfig
operator|.
name|addStandHelpers
argument_list|(
name|META_DATA_FILTER
argument_list|,
name|MetadataValidationHelper
operator|.
name|class
argument_list|)
expr_stmt|;
name|pdfa1bStandardConfig
operator|.
name|setActionFactory
argument_list|(
name|ActionManagerFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|pdfa1bStandardConfig
operator|.
name|setAnnotationFactory
argument_list|(
name|PDFAbAnnotationFactory
operator|.
name|class
argument_list|)
expr_stmt|;
return|return
name|pdfa1bStandardConfig
return|;
block|}
comment|/**    * Return an implementation of PdfAValidator according to the given format using the     * default configuration linked to the format.    *     * @param format    *          "PDF/A-1b" for a PDF/A-1b validator.    * @return    * @throws ValidationException    */
specifier|public
name|PdfAValidator
name|createValidatorInstance
parameter_list|(
name|String
name|format
parameter_list|)
throws|throws
name|ValidationException
block|{
if|if
condition|(
name|PDF_A_1_b
operator|.
name|equals
argument_list|(
name|format
argument_list|)
condition|)
block|{
return|return
operator|new
name|PdfA1bValidator
argument_list|(
name|getStandardPDFA1BConfiguration
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"Unknown pdf format : "
operator|+
name|format
argument_list|)
throw|;
block|}
block|}
comment|/**    * Return an implementation of PdfAValidator according to the given format.    *     * @param format  "PDF/A-1b" for a PDF/A-1b validator.    * @param conf Instance of ValidatorConfig to use customized Helper    * @return    * @throws ValidationException    */
specifier|public
name|PdfAValidator
name|createValidatorInstance
parameter_list|(
name|String
name|format
parameter_list|,
name|ValidatorConfig
name|conf
parameter_list|)
throws|throws
name|ValidationException
block|{
if|if
condition|(
name|conf
operator|==
literal|null
condition|)
block|{
return|return
name|createValidatorInstance
argument_list|(
name|format
argument_list|)
return|;
block|}
if|if
condition|(
name|PDF_A_1_b
operator|.
name|equals
argument_list|(
name|format
argument_list|)
condition|)
block|{
return|return
operator|new
name|PdfA1bValidator
argument_list|(
name|conf
argument_list|)
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"Unknown pdf format : "
operator|+
name|format
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

