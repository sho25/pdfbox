begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|graphics
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|color
operator|.
name|ICC_ColorSpace
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|color
operator|.
name|ICC_Profile
import|;
end_import

begin_comment
comment|/**  * This class embeds an instance of java.awt.color.ICC_Profile which represent  * the ICCProfile defined by the DestOutputItents key of the OutputIntents of  * the PDF.  */
end_comment

begin_class
specifier|public
class|class
name|ICCProfileWrapper
block|{
comment|/**    * The ICCProfile extracted from DestOutputItents    */
specifier|private
name|ICC_Profile
name|profile
init|=
literal|null
decl_stmt|;
comment|/**    * The ICC ColorSpace created using the ICCProfile    */
specifier|private
name|ICC_ColorSpace
name|colorSpace
init|=
literal|null
decl_stmt|;
specifier|public
name|ICCProfileWrapper
parameter_list|(
name|ICC_Profile
name|_profile
parameter_list|)
block|{
name|this
operator|.
name|profile
operator|=
name|_profile
expr_stmt|;
name|this
operator|.
name|colorSpace
operator|=
operator|new
name|ICC_ColorSpace
argument_list|(
name|_profile
argument_list|)
expr_stmt|;
block|}
comment|/**    * Call the ICC_ColorSpace.getType method and return the value.    *     * @return    */
specifier|public
name|int
name|getColorSpaceType
parameter_list|()
block|{
return|return
name|colorSpace
operator|.
name|getType
argument_list|()
return|;
block|}
comment|/**    * @return the profile    */
specifier|public
name|ICC_Profile
name|getProfile
parameter_list|()
block|{
return|return
name|profile
return|;
block|}
comment|/**    * Return true if the ColourSpace is RGB    *     * @return    */
specifier|public
name|boolean
name|isRGBColorSpace
parameter_list|()
block|{
return|return
name|ICC_ColorSpace
operator|.
name|TYPE_RGB
operator|==
name|colorSpace
operator|.
name|getType
argument_list|()
return|;
block|}
comment|/**    * Return true if the ColourSpace is CMYK    *     * @return    */
specifier|public
name|boolean
name|isCMYKColorSpace
parameter_list|()
block|{
return|return
name|ICC_ColorSpace
operator|.
name|TYPE_CMYK
operator|==
name|colorSpace
operator|.
name|getType
argument_list|()
return|;
block|}
comment|/**    * Return true if the ColourSpace is Gray scale    *     * @return    */
specifier|public
name|boolean
name|isGrayColorSpace
parameter_list|()
block|{
return|return
name|ICC_ColorSpace
operator|.
name|TYPE_GRAY
operator|==
name|colorSpace
operator|.
name|getType
argument_list|()
return|;
block|}
block|}
end_class

end_unit

