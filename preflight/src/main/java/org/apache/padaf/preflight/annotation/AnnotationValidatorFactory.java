begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|annotation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|DocumentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|ValidationResult
operator|.
name|ValidationError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|actions
operator|.
name|ActionManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AnnotationValidatorFactory
block|{
specifier|protected
name|ActionManagerFactory
name|actionFact
init|=
literal|null
decl_stmt|;
specifier|public
specifier|final
name|void
name|setActionFact
parameter_list|(
name|ActionManagerFactory
name|_actionFact
parameter_list|)
block|{
name|this
operator|.
name|actionFact
operator|=
name|_actionFact
expr_stmt|;
block|}
comment|/** 	 * Return an instance of AnnotationValidator. 	 *<B>WARNING</B> this method must call the setFactory of each instance of AnnotationValidator. 	 *  	 * @param annotDic 	 * @param handler 	 * @param errors 	 * @return 	 */
specifier|public
specifier|final
name|AnnotationValidator
name|getAnnotationValidator
parameter_list|(
name|COSDictionary
name|annotDic
parameter_list|,
name|DocumentHandler
name|handler
parameter_list|,
name|List
argument_list|<
name|ValidationError
argument_list|>
name|errors
parameter_list|)
block|{
name|AnnotationValidator
name|av
init|=
name|instantiateAnnotationValidator
argument_list|(
name|annotDic
argument_list|,
name|handler
argument_list|,
name|errors
argument_list|)
decl_stmt|;
if|if
condition|(
name|av
operator|!=
literal|null
condition|)
block|{
name|av
operator|.
name|actionFact
operator|=
name|actionFact
expr_stmt|;
block|}
return|return
name|av
return|;
block|}
specifier|public
specifier|abstract
name|AnnotationValidator
name|instantiateAnnotationValidator
parameter_list|(
name|COSDictionary
name|annotDic
parameter_list|,
name|DocumentHandler
name|handler
parameter_list|,
name|List
argument_list|<
name|ValidationError
argument_list|>
name|errors
parameter_list|)
function_decl|;
block|}
end_class

end_unit

