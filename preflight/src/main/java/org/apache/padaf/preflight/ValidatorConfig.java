begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|actions
operator|.
name|ActionManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|annotation
operator|.
name|AnnotationValidatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|annotation
operator|.
name|PDFAbAnnotationFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|helpers
operator|.
name|AbstractValidationHelper
import|;
end_import

begin_comment
comment|/**  * This object contains the configuration of a PdfValidator.  * In this object, it is possible to define :  *<ul>  *<li> a list of priority Helpers that must be executed just after the syntactic validation  *<li> a list of standard Helpers that must be executed after priority helpers  *<li> a class which extends of AnnotationManagerFactory to allow the override the annotation validator creation  *<li> a class which extends of ActionManagerFactory to allow the override the action manager creation  *<li> a java.util.Properties object to authorize future configuration adds whitout change of the object interface.  *</ul>  */
end_comment

begin_class
specifier|public
class|class
name|ValidatorConfig
block|{
specifier|public
specifier|static
specifier|final
name|String
name|FONT_FILTER
init|=
literal|"font-filter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|STREAM_FILTER
init|=
literal|"stream-filter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CATALOG_FILTER
init|=
literal|"catalog-filter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|GRAPHIC_FILTER
init|=
literal|"graphic-filter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TRAILER_FILTER
init|=
literal|"trailer-filter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|XREF_FILTER
init|=
literal|"xref-filter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|BOOKMARK_FILTER
init|=
literal|"bookmark-filter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ACRO_FORM_FILTER
init|=
literal|"acro-form-filter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|FILE_SPECIF_FILTER
init|=
literal|"file-specification-filter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PAGE_FILTER
init|=
literal|"page-filter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|META_DATA_FILTER
init|=
literal|"metadata-filter"
decl_stmt|;
comment|/** 	 * Container for future properties values 	 */
specifier|private
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
comment|/** 	 * List of Helpers which have to be executed first. Helpers are called in the order ofa 	 * appearance.  	 */
specifier|private
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
extends|extends
name|AbstractValidationHelper
argument_list|>
argument_list|>
name|priorHelpers
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
extends|extends
name|AbstractValidationHelper
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
comment|/** 	 * List of Helpers which have to be executed after priorHelpers. Helpers are called in the order ofa 	 * appearance.  	 */
specifier|private
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
extends|extends
name|AbstractValidationHelper
argument_list|>
argument_list|>
name|standHelpers
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
extends|extends
name|AbstractValidationHelper
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
comment|/** 	 * Define the AnnotationFactory used by helpers 	 * Default value is PDFAbAnnotationFactory.class 	 */
specifier|private
name|Class
argument_list|<
name|?
extends|extends
name|AnnotationValidatorFactory
argument_list|>
name|annotFact
init|=
name|PDFAbAnnotationFactory
operator|.
name|class
decl_stmt|;
comment|/** 	 * Define the ActionManagerFactory used by helpers 	 * Default value is ActionManagerFactory.class 	 */
specifier|private
name|Class
argument_list|<
name|?
extends|extends
name|ActionManagerFactory
argument_list|>
name|actionFact
init|=
name|ActionManagerFactory
operator|.
name|class
decl_stmt|;
specifier|public
name|void
name|setAnnotationFactory
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|AnnotationValidatorFactory
argument_list|>
name|_annotFact
parameter_list|)
block|{
name|this
operator|.
name|annotFact
operator|=
name|_annotFact
expr_stmt|;
block|}
specifier|public
name|void
name|setActionFactory
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|ActionManagerFactory
argument_list|>
name|_actionFact
parameter_list|)
block|{
name|this
operator|.
name|actionFact
operator|=
name|_actionFact
expr_stmt|;
block|}
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|AnnotationValidatorFactory
argument_list|>
name|getAnnotFact
parameter_list|()
block|{
return|return
name|annotFact
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|ActionManagerFactory
argument_list|>
name|getActionFact
parameter_list|()
block|{
return|return
name|actionFact
return|;
block|}
specifier|public
name|void
name|addProperty
parameter_list|(
name|Object
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Object
name|getProperty
parameter_list|(
name|Object
name|key
parameter_list|)
block|{
return|return
name|this
operator|.
name|properties
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|void
name|addPriorHelpers
parameter_list|(
name|String
name|key
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|AbstractValidationHelper
argument_list|>
name|filter
parameter_list|)
block|{
name|priorHelpers
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|filter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addStandHelpers
parameter_list|(
name|String
name|key
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|AbstractValidationHelper
argument_list|>
name|filter
parameter_list|)
block|{
name|standHelpers
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|filter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|AbstractValidationHelper
argument_list|>
argument_list|>
name|getPriorHelpers
parameter_list|()
block|{
return|return
name|priorHelpers
operator|.
name|values
argument_list|()
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|AbstractValidationHelper
argument_list|>
argument_list|>
name|getStandHelpers
parameter_list|()
block|{
return|return
name|standHelpers
operator|.
name|values
argument_list|()
return|;
block|}
block|}
end_class

end_unit

