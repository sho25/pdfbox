begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|preflight
operator|.
name|font
operator|.
name|type1
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_class
specifier|public
class|class
name|PeekInputStream
extends|extends
name|InputStream
block|{
specifier|private
name|byte
index|[]
name|content
init|=
operator|new
name|byte
index|[
literal|0
index|]
decl_stmt|;
specifier|private
name|int
name|position
init|=
literal|0
decl_stmt|;
specifier|public
name|PeekInputStream
parameter_list|(
name|InputStream
name|source
parameter_list|)
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
try|try
block|{
name|IOUtils
operator|.
name|copyLarge
argument_list|(
name|source
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|content
operator|=
name|bos
operator|.
name|toByteArray
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|source
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|bos
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|read
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|position
operator|>=
name|content
operator|.
name|length
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"No more content in this stream"
argument_list|)
throw|;
block|}
name|int
name|currentByte
init|=
operator|(
name|content
index|[
name|position
index|]
operator|&
literal|0xFF
operator|)
decl_stmt|;
operator|++
name|position
expr_stmt|;
return|return
name|currentByte
return|;
block|}
specifier|public
name|int
name|peek
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|position
operator|>=
name|content
operator|.
name|length
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"No more content in this stream"
argument_list|)
throw|;
block|}
return|return
operator|(
name|content
index|[
name|position
index|]
operator|&
literal|0xFF
operator|)
return|;
block|}
specifier|public
name|byte
index|[]
name|peek
parameter_list|(
name|int
name|numberOfBytes
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|numberOfBytes
operator|<
literal|0
operator|||
operator|(
name|position
operator|+
name|numberOfBytes
operator|)
operator|>=
name|content
operator|.
name|length
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"No more content in this stream, can't return the next "
operator|+
name|numberOfBytes
operator|+
literal|" bytes"
argument_list|)
throw|;
block|}
name|byte
index|[]
name|nextBytes
init|=
operator|new
name|byte
index|[
name|numberOfBytes
index|]
decl_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|this
operator|.
name|content
argument_list|,
name|this
operator|.
name|position
argument_list|,
name|nextBytes
argument_list|,
literal|0
argument_list|,
name|numberOfBytes
argument_list|)
expr_stmt|;
return|return
name|nextBytes
return|;
block|}
block|}
end_class

end_unit

