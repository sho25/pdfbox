begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright (c) 2006, www.jempbox.org  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * 1. Redistributions of source code must retain the above copyright notice,  *    this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright notice,  *    this list of conditions and the following disclaimer in the documentation  *    and/or other materials provided with the distribution.  * 3. Neither the name of pdfbox; nor the names of its  *    contributors may be used to endorse or promote products derived from this  *    software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * http://www.jempbox.org  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|jempbox
operator|.
name|xmp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jempbox
operator|.
name|impl
operator|.
name|XMLUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_comment
comment|/**  * This class represents a thumbnail datatype.  *   * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.3 $  */
end_comment

begin_class
specifier|public
class|class
name|Thumbnail
block|{
comment|/**      * A supported thumnail format.      */
specifier|public
specifier|static
specifier|final
name|String
name|FORMAT_JPEG
init|=
literal|"JPEG"
decl_stmt|;
comment|/**      * The DOM representation of this object.      */
specifier|protected
name|Element
name|parent
init|=
literal|null
decl_stmt|;
comment|/**      * Create a new thumbnail element.      *       * @param metadata The metadata document that his thumbnail will be part of.      */
specifier|public
name|Thumbnail
parameter_list|(
name|XMPMetadata
name|metadata
parameter_list|)
block|{
name|this
argument_list|(
name|metadata
operator|.
name|xmpDocument
operator|.
name|createElement
argument_list|(
literal|"rfd:li"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Create a thumnail based on a parent property set.      *      * @param parentElement The parent element that will store the thumbnail properties.      */
specifier|public
name|Thumbnail
parameter_list|(
name|Element
name|parentElement
parameter_list|)
block|{
name|parent
operator|=
name|parentElement
expr_stmt|;
name|parent
operator|.
name|setAttributeNS
argument_list|(
name|XMPSchema
operator|.
name|NS_NAMESPACE
argument_list|,
literal|"xmlns:xapGImg"
argument_list|,
literal|"http://ns.adobe.com/xap/1.0/g/img/"
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the underlying XML element.      *       * @return The XML element that this object represents.      */
specifier|public
name|Element
name|getElement
parameter_list|()
block|{
return|return
name|parent
return|;
block|}
comment|/**      * Get the height of the image in pixels.      *       * @return The height of the image in pixels.      */
specifier|public
name|Integer
name|getHeight
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getIntValue
argument_list|(
name|parent
argument_list|,
literal|"xapGImg:height"
argument_list|)
return|;
block|}
comment|/**      * Set the height of the element.      *       * @param height The updated height of the element.      */
specifier|public
name|void
name|setHeight
parameter_list|(
name|Integer
name|height
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setIntValue
argument_list|(
name|parent
argument_list|,
literal|"xapGImg:height"
argument_list|,
name|height
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the width of the image in pixels.      *       * @return The width of the image in pixels.      */
specifier|public
name|Integer
name|getWidth
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getIntValue
argument_list|(
name|parent
argument_list|,
literal|"xapGImg:width"
argument_list|)
return|;
block|}
comment|/**      * Set the width of the element.      *       * @param width The updated width of the element.      */
specifier|public
name|void
name|setWidth
parameter_list|(
name|Integer
name|width
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setIntValue
argument_list|(
name|parent
argument_list|,
literal|"xapGImg:width"
argument_list|,
name|width
argument_list|)
expr_stmt|;
block|}
comment|/**      * Set the format of the thumbnail, currently only JPEG is supported.  See FORMAT_XXX constants.      *       * @param format The image format.      */
specifier|public
name|void
name|setFormat
parameter_list|(
name|String
name|format
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"xapGImg:format"
argument_list|,
name|format
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the format of the thumbnail.  See FORMAT_XXX constants.      *       * @return The image format.      */
specifier|public
name|String
name|getFormat
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"xapGImg:format"
argument_list|)
return|;
block|}
comment|/**      * Set the image data in base 64 encoding.      *       * @param image The image.      */
specifier|public
name|void
name|setImage
parameter_list|(
name|String
name|image
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"xapGImg:image"
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the image data in base 64 encoding.      *       * @return The image data.      */
specifier|public
name|String
name|getImage
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"xapGImg:format"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

