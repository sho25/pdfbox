begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|jempbox
operator|.
name|xmp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jempbox
operator|.
name|impl
operator|.
name|XMLUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_comment
comment|/**  * This class represents a multiple part reference to a resource.  *   * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.3 $  */
end_comment

begin_class
specifier|public
class|class
name|ResourceRef
implements|implements
name|Elementable
block|{
comment|/**      * The DOM representation of this object.      */
specifier|protected
name|Element
name|parent
init|=
literal|null
decl_stmt|;
comment|/**      * Create a resource reference based on a existing parent property set.      *      * @param parentElement The parent element that will store the resource properties.      */
specifier|public
name|ResourceRef
parameter_list|(
name|Element
name|parentElement
parameter_list|)
block|{
name|parent
operator|=
name|parentElement
expr_stmt|;
if|if
condition|(
operator|!
name|parent
operator|.
name|hasAttribute
argument_list|(
literal|"xmlns:stRef"
argument_list|)
condition|)
block|{
name|parent
operator|.
name|setAttributeNS
argument_list|(
literal|"http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
argument_list|,
literal|"xmlns:stRef"
argument_list|,
literal|"http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Get the underlying XML element.      *       * @return The XML element that this object represents.      */
specifier|public
name|Element
name|getElement
parameter_list|()
block|{
return|return
name|parent
return|;
block|}
comment|/**      * Get the referenced resource's id.      *       * @return The id of the reference.      */
specifier|public
name|String
name|getInstanceID
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:instanceID"
argument_list|)
return|;
block|}
comment|/**      * Set the referenced resource's id.      *       * @param id The id of the reference.      */
specifier|public
name|void
name|setInstanceID
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:instanceID"
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the referenced resource's document id.      *       * @return The id of the reference document.      */
specifier|public
name|String
name|getDocumentID
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:documentID"
argument_list|)
return|;
block|}
comment|/**      * Set the referenced resource's document id.      *       * @param id The id of the reference document.      */
specifier|public
name|void
name|setDocumentID
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:documentID"
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the referenced resource's document version id.      *       * @return The id of the reference document version.      */
specifier|public
name|String
name|getVersionID
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:versionID"
argument_list|)
return|;
block|}
comment|/**      * Set the referenced resource's version id.      *       * @param id The id of the reference document version.      */
specifier|public
name|void
name|setVersionID
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:veresionID"
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the rendition class.      *       * @return The value of the rendition class property.      *       * @see ResourceRef#setRenditionClass( String )      */
specifier|public
name|String
name|getRenditionClass
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:renditionClass"
argument_list|)
return|;
block|}
comment|/**      * Set the rendition class.  The rendition class is derived from a defined      * set of names.  The value is series of colon separated tokens and parameters.<br/>      * Defined values are:<br/>      *<table>      *<tr><td>Token Name</td><td>Description</td></tr>      *<tr><td>default</td><td>Specifies master document, no additional tokens allowed</td></tr>      *<tr><td>thumbnail</td>      *<td>A simplied preview.  Recommended order is: thumbnail<i>format:size:colorspace</i></td></tr>      *<tr><td>screen</td><td>Screen resolution</td></tr>      *<tr><td>proof</td><td>A review proof</td></tr>      *<tr><td>draft</td><td>A review rendition</td></tr>      *<tr><td>low-res</td><td>A low resolution, full size stand-in</td><tr>      *</table>      *       *       * @param renditionClass The rendition class.      */
specifier|public
name|void
name|setRenditionClass
parameter_list|(
name|String
name|renditionClass
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:renditionClass"
argument_list|,
name|renditionClass
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the extra rendition params.      *       * @return Additional rendition parameters.      */
specifier|public
name|String
name|getRenditionParams
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:renditionParams"
argument_list|)
return|;
block|}
comment|/**      * Set addition rendition params.      *       * @param params Additional rendition parameters that are too complex for the rendition class.      */
specifier|public
name|void
name|setRenditionParams
parameter_list|(
name|String
name|params
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:renditionParams"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get name of the asset management system that manages this resource.      *       * @return The name of a asset management system.      */
specifier|public
name|String
name|getManager
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:manager"
argument_list|)
return|;
block|}
comment|/**      * Set the name of the system that manages this resource.      *       * @param manager The name of the management system.      */
specifier|public
name|void
name|setMangager
parameter_list|(
name|String
name|manager
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:manager"
argument_list|,
name|manager
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get name of the variant of asset management system that manages this resource.      *       * @return The name of a asset management system.      */
specifier|public
name|String
name|getManagerVariant
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerVariant"
argument_list|)
return|;
block|}
comment|/**      * Set the name of the variant of the system that manages this resource.      *       * @param managerVariant The name of the management system.      */
specifier|public
name|void
name|setMangagerVariant
parameter_list|(
name|String
name|managerVariant
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerVariant"
argument_list|,
name|managerVariant
argument_list|)
expr_stmt|;
block|}
comment|/**      * URI identifying the managed resource.      *       * @return The URI to resource.      */
specifier|public
name|String
name|getManagerTo
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerTo"
argument_list|)
return|;
block|}
comment|/**      * Set the URI to the managed resource.      *       * @param managerTo The URI to the managed resource.      */
specifier|public
name|void
name|setMangagerTo
parameter_list|(
name|String
name|managerTo
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerTo"
argument_list|,
name|managerTo
argument_list|)
expr_stmt|;
block|}
comment|/**      * URI to info about the managed resource.      *       * @return The URI to the resource info.      */
specifier|public
name|String
name|getManagerUI
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerUI"
argument_list|)
return|;
block|}
comment|/**      * Set the URI to the info about the managed resource.      *       * @param managerUI The URI to the managed resource information.      */
specifier|public
name|void
name|setMangagerUI
parameter_list|(
name|String
name|managerUI
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerUI"
argument_list|,
name|managerUI
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

