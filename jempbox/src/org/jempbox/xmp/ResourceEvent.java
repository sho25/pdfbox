begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|jempbox
operator|.
name|xmp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jempbox
operator|.
name|impl
operator|.
name|DateConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jempbox
operator|.
name|impl
operator|.
name|XMLUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_comment
comment|/**  * This class represents a high level event that occured during the processing   * of this resource.  *   * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.2 $  */
end_comment

begin_class
specifier|public
class|class
name|ResourceEvent
implements|implements
name|Elementable
block|{
comment|/**      * Namespace for a resource event.      */
specifier|public
specifier|static
specifier|final
name|String
name|NAMESPACE
init|=
literal|"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_CONVERTED
init|=
literal|"converted"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_COPIED
init|=
literal|"copied"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_CREATED
init|=
literal|"created"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_CROPPED
init|=
literal|"cropped"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_EDITED
init|=
literal|"edited"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_FILTERED
init|=
literal|"filtered"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_FORMATTED
init|=
literal|"formatted"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_VERSION_UPDATED
init|=
literal|"version_updated"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_PRINTED
init|=
literal|"printed"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_PUBLISHED
init|=
literal|"published"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_MANAGED
init|=
literal|"managed"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_PRODUCED
init|=
literal|"produced"
decl_stmt|;
comment|/**      * A predefined action.      */
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_RESIZED
init|=
literal|"resized"
decl_stmt|;
comment|/**      * The DOM representation of this object.      */
specifier|protected
name|Element
name|parent
init|=
literal|null
decl_stmt|;
comment|/**      * Create a resource reference based on a existing parent property set.      *      * @param parentElement The parent element that will store the resource properties.      */
specifier|public
name|ResourceEvent
parameter_list|(
name|Element
name|parentElement
parameter_list|)
block|{
name|parent
operator|=
name|parentElement
expr_stmt|;
if|if
condition|(
operator|!
name|parent
operator|.
name|hasAttribute
argument_list|(
literal|"xmlns:stEvt"
argument_list|)
condition|)
block|{
name|parent
operator|.
name|setAttributeNS
argument_list|(
name|XMPSchema
operator|.
name|NS_NAMESPACE
argument_list|,
literal|"xmlns:stEvt"
argument_list|,
name|NAMESPACE
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Create resource event based on schema.      *      * @param schema The schema that this event will be part of.      */
specifier|public
name|ResourceEvent
parameter_list|(
name|XMPSchema
name|schema
parameter_list|)
block|{
name|parent
operator|=
name|schema
operator|.
name|getElement
argument_list|()
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|createElement
argument_list|(
literal|"rdf:li"
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setAttributeNS
argument_list|(
name|XMPSchema
operator|.
name|NS_NAMESPACE
argument_list|,
literal|"xmlns:stEvt"
argument_list|,
name|NAMESPACE
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the underlying XML element.      *       * @return The XML element that this object represents.      */
specifier|public
name|Element
name|getElement
parameter_list|()
block|{
return|return
name|parent
return|;
block|}
comment|/**      * Get the action that occured.  See the ACTION_XXX constants.      *       * @return An action key, such as 'created' or 'printed'.      */
specifier|public
name|String
name|getAction
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stEvt:action"
argument_list|)
return|;
block|}
comment|/**      * Set the action that this event represents.  See the ACTION_XXX constants.      *       * @param action The action that this event represents.      */
specifier|public
name|void
name|setAction
parameter_list|(
name|String
name|action
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stEvt:action"
argument_list|,
name|action
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the referenced resource's instance id.      *       * @return The id of the reference document instance.      */
specifier|public
name|String
name|getInstanceID
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stEvt:instanceID"
argument_list|)
return|;
block|}
comment|/**      * Set the referenced resource's document instance id.      *       * @param id The id of the reference document instance.      */
specifier|public
name|void
name|setInstanceID
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stEvt:instanceID"
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get an additional description of the event.      *       * @return Additional description of this event      */
specifier|public
name|String
name|getParameters
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stEvt:parameters"
argument_list|)
return|;
block|}
comment|/**      * Set some addition description to this event.      *       * @param param The additional action parameters.      */
specifier|public
name|void
name|setParameters
parameter_list|(
name|String
name|param
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stEvt:parameters"
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the software that performed this action.      *       * @return The software that performed the action.      */
specifier|public
name|String
name|getSoftwareAgent
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stEvt:softwareAgent"
argument_list|)
return|;
block|}
comment|/**      * Set the software that performed this operation.      *       * @param software The name of the software that performed this action.      */
specifier|public
name|void
name|setSoftwareAgent
parameter_list|(
name|String
name|software
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stEvt:softwareAgent"
argument_list|,
name|software
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the date/time that this event occured.      *       * @return The date of the event.      *       * @throws IOException If there is an error creating the date.      */
specifier|public
name|Calendar
name|getWhen
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|DateConverter
operator|.
name|toCalendar
argument_list|(
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stEvt:when"
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * Set when the event occured.      *       * @param when The date that the event occured.      */
specifier|public
name|void
name|setWhen
parameter_list|(
name|Calendar
name|when
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stEvt:when"
argument_list|,
name|DateConverter
operator|.
name|toISO8601
argument_list|(
name|when
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get name of the asset management system that manages this resource.      *       * @return The name of a asset management system.      */
specifier|public
name|String
name|getManager
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:manager"
argument_list|)
return|;
block|}
comment|/**      * Set the name of the system that manages this resource.      *       * @param manager The name of the management system.      */
specifier|public
name|void
name|setMangager
parameter_list|(
name|String
name|manager
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:manager"
argument_list|,
name|manager
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get name of the variant of asset management system that manages this resource.      *       * @return The name of a asset management system.      */
specifier|public
name|String
name|getManagerVariant
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerVariant"
argument_list|)
return|;
block|}
comment|/**      * Set the name of the variant of the system that manages this resource.      *       * @param managerVariant The name of the management system.      */
specifier|public
name|void
name|setMangagerVariant
parameter_list|(
name|String
name|managerVariant
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerVariant"
argument_list|,
name|managerVariant
argument_list|)
expr_stmt|;
block|}
comment|/**      * URI identifying the managed resource.      *       * @return The URI to resource.      */
specifier|public
name|String
name|getManagerTo
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerTo"
argument_list|)
return|;
block|}
comment|/**      * Set the URI to the managed resource.      *       * @param managerTo The URI to the managed resource.      */
specifier|public
name|void
name|setMangagerTo
parameter_list|(
name|String
name|managerTo
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerTo"
argument_list|,
name|managerTo
argument_list|)
expr_stmt|;
block|}
comment|/**      * URI to info about the managed resource.      *       * @return The URI to the resource info.      */
specifier|public
name|String
name|getManagerUI
parameter_list|()
block|{
return|return
name|XMLUtil
operator|.
name|getStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerUI"
argument_list|)
return|;
block|}
comment|/**      * Set the URI to the info about the managed resource.      *       * @param managerUI The URI to the managed resource information.      */
specifier|public
name|void
name|setMangagerUI
parameter_list|(
name|String
name|managerUI
parameter_list|)
block|{
name|XMLUtil
operator|.
name|setStringValue
argument_list|(
name|parent
argument_list|,
literal|"stRef:managerUI"
argument_list|,
name|managerUI
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

