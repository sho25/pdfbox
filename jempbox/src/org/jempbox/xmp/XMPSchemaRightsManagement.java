begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright (c) 2006, www.jempbox.org  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * 1. Redistributions of source code must retain the above copyright notice,  *    this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright notice,  *    this list of conditions and the following disclaimer in the documentation  *    and/or other materials provided with the distribution.  * 3. Neither the name of pdfbox; nor the names of its  *    contributors may be used to endorse or promote products derived from this  *    software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * http://www.jempbox.org  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|jempbox
operator|.
name|xmp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_comment
comment|/**  * Define XMP properties that are related to rights management.  *   * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.6 $  */
end_comment

begin_class
specifier|public
class|class
name|XMPSchemaRightsManagement
extends|extends
name|XMPSchema
block|{
comment|/**      * The namespace for this schema.      */
specifier|public
specifier|static
specifier|final
name|String
name|NAMESPACE
init|=
literal|"http://ns.adobe.com/xap/1.0/rights/"
decl_stmt|;
comment|/**      * Construct a new blank PDF schema.      *      * @param parent The parent metadata schema that this will be part of.      */
specifier|public
name|XMPSchemaRightsManagement
parameter_list|(
name|XMPMetadata
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|,
literal|"xmpRights"
argument_list|,
name|NAMESPACE
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructor from existing XML element.      *       * @param element The existing element.      * @param prefix The schema prefix.      */
specifier|public
name|XMPSchemaRightsManagement
parameter_list|(
name|Element
name|element
parameter_list|,
name|String
name|prefix
parameter_list|)
block|{
name|super
argument_list|(
name|element
argument_list|,
name|prefix
argument_list|)
expr_stmt|;
block|}
comment|/**      * The online rights management certificate.      *      * @param certificate The URL to the rights cert.      */
specifier|public
name|void
name|setCertificateURL
parameter_list|(
name|String
name|certificate
parameter_list|)
block|{
name|setTextProperty
argument_list|(
literal|"xmpRights:Certificate"
argument_list|,
name|certificate
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the URL of the rights managment certificate.      *      * @return The rights management certificate URL.      */
specifier|public
name|String
name|getCertificateURL
parameter_list|()
block|{
return|return
name|getTextProperty
argument_list|(
name|prefix
operator|+
literal|":Certificate"
argument_list|)
return|;
block|}
comment|/**      * Flag indicating if this is a rights managed resource.      *      * @param marked The marked value.      */
specifier|public
name|void
name|setMarked
parameter_list|(
name|Boolean
name|marked
parameter_list|)
block|{
name|setBooleanProperty
argument_list|(
name|prefix
operator|+
literal|":Marked"
argument_list|,
name|marked
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the flag that indicates if this is a marked resource..      *      * @return The value of the marked flag.      */
specifier|public
name|Boolean
name|getMarked
parameter_list|()
block|{
name|Boolean
name|b
init|=
name|getBooleanProperty
argument_list|(
name|prefix
operator|+
literal|":Marked"
argument_list|)
decl_stmt|;
return|return
name|b
operator|!=
literal|null
condition|?
name|b
else|:
name|Boolean
operator|.
name|FALSE
return|;
block|}
comment|/**      * Remove an owner from the list.      *      * @param owner The owner to remove.      */
specifier|public
name|void
name|removeOwner
parameter_list|(
name|String
name|owner
parameter_list|)
block|{
name|removeBagValue
argument_list|(
name|prefix
operator|+
literal|":Owner"
argument_list|,
name|owner
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add an owner to the list.      *      * @param owner A new legal owner to this resource.      */
specifier|public
name|void
name|addOwner
parameter_list|(
name|String
name|owner
parameter_list|)
block|{
name|addBagValue
argument_list|(
name|prefix
operator|+
literal|":Owner"
argument_list|,
name|owner
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the complete list of legal owners.      *      * @return The list of owners.      */
specifier|public
name|List
name|getOwners
parameter_list|()
block|{
return|return
name|getBagList
argument_list|(
name|prefix
operator|+
literal|":Owner"
argument_list|)
return|;
block|}
comment|/**      * Set the default usage terms for this resource.      *      * @param terms The resource usage terms.       */
specifier|public
name|void
name|setUsageTerms
parameter_list|(
name|String
name|terms
parameter_list|)
block|{
name|setLanguageProperty
argument_list|(
name|prefix
operator|+
literal|":UsageTerms"
argument_list|,
literal|null
argument_list|,
name|terms
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the default usage terms for the document.      *      * @return The terms for this resource.      */
specifier|public
name|String
name|getUsageTerms
parameter_list|()
block|{
return|return
name|getLanguageProperty
argument_list|(
name|prefix
operator|+
literal|":UsageTerms"
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|/**      * Set the usage terms of this resource in a specific language.      *      * @param language The language code.      * @param terms The terms of this resource.      */
specifier|public
name|void
name|setDescription
parameter_list|(
name|String
name|language
parameter_list|,
name|String
name|terms
parameter_list|)
block|{
name|setLanguageProperty
argument_list|(
name|prefix
operator|+
literal|":UsageTerms"
argument_list|,
name|language
argument_list|,
name|terms
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the usage terms in a specific language.      *      * @param language The language code to get the description for.      *      * @return The usage terms in the specified language or null if it does not exist.      */
specifier|public
name|String
name|getUsageTerms
parameter_list|(
name|String
name|language
parameter_list|)
block|{
return|return
name|getLanguageProperty
argument_list|(
name|prefix
operator|+
literal|":UsageTerms"
argument_list|,
name|language
argument_list|)
return|;
block|}
comment|/**      * Get a list of all languages that a usage term exists for.      *      * @return A non-null list of languages, potentially an empty list.      */
specifier|public
name|List
name|getUsageTermsLanguages
parameter_list|()
block|{
return|return
name|getLanguagePropertyLanguages
argument_list|(
name|prefix
operator|+
literal|":UsageTerms"
argument_list|)
return|;
block|}
comment|/**      * Set the external link that describes the owners/rights of this resource.      *      * @param webStatement The URL to a terms site.      */
specifier|public
name|void
name|setWebStatement
parameter_list|(
name|String
name|webStatement
parameter_list|)
block|{
name|setTextProperty
argument_list|(
name|prefix
operator|+
literal|":WebStatement"
argument_list|,
name|webStatement
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the URL that describes the terms of this resource.      *      * @return The usage rights URL.      */
specifier|public
name|String
name|getWebStatement
parameter_list|()
block|{
return|return
name|getTextProperty
argument_list|(
name|prefix
operator|+
literal|":WebStatement"
argument_list|)
return|;
block|}
comment|/**      * Set the copyright information.      *      * @param copyright The copyright information.      */
specifier|public
name|void
name|setCopyright
parameter_list|(
name|String
name|copyright
parameter_list|)
block|{
name|setTextProperty
argument_list|(
name|prefix
operator|+
literal|":Copyright"
argument_list|,
name|copyright
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the copyright information.      *      * @return The copyright information.      */
specifier|public
name|String
name|getCopyright
parameter_list|()
block|{
return|return
name|getTextProperty
argument_list|(
name|prefix
operator|+
literal|":Copyright"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

