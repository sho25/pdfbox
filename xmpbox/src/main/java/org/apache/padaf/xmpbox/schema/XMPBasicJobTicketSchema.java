begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|XMPMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|AbstractField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|ArrayProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|BadFieldValueException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|Cardinality
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|JobType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|PropertyType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|StructuredType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|TypeMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|Types
import|;
end_import

begin_class
annotation|@
name|StructuredType
argument_list|(
name|preferedPrefix
operator|=
literal|"xmpBJ"
argument_list|,
name|namespace
operator|=
literal|"http://ns.adobe.com/xap/1.0/bj/"
argument_list|)
specifier|public
class|class
name|XMPBasicJobTicketSchema
extends|extends
name|XMPSchema
block|{
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Job
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Bag
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|JOB_REF
init|=
literal|"JobRef"
decl_stmt|;
specifier|private
name|ArrayProperty
name|bagJobs
decl_stmt|;
specifier|public
name|XMPBasicJobTicketSchema
parameter_list|(
name|XMPMetadata
name|metadata
parameter_list|)
block|{
name|this
argument_list|(
name|metadata
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|XMPBasicJobTicketSchema
parameter_list|(
name|XMPMetadata
name|metadata
parameter_list|,
name|String
name|ownPrefix
parameter_list|)
block|{
name|super
argument_list|(
name|metadata
argument_list|,
name|ownPrefix
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addJob
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|)
block|{
name|addJob
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
name|url
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addJob
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|,
name|String
name|fieldPrefix
parameter_list|)
block|{
name|JobType
name|job
init|=
operator|new
name|JobType
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|fieldPrefix
argument_list|)
decl_stmt|;
name|job
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|job
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|job
operator|.
name|setUrl
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|addJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addJob
parameter_list|(
name|JobType
name|job
parameter_list|)
block|{
name|String
name|prefix
init|=
name|getNamespacePrefix
argument_list|(
name|job
operator|.
name|getNamespace
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|prefix
operator|!=
literal|null
condition|)
block|{
comment|// use same prefix for all jobs
name|job
operator|.
name|setPrefix
argument_list|(
name|prefix
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// add prefix
name|addNamespace
argument_list|(
name|job
operator|.
name|getNamespace
argument_list|()
argument_list|,
name|job
operator|.
name|getPrefix
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// create bag if not existing
if|if
condition|(
name|bagJobs
operator|==
literal|null
condition|)
block|{
name|bagJobs
operator|=
name|createArrayProperty
argument_list|(
name|JOB_REF
argument_list|,
name|Cardinality
operator|.
name|Bag
argument_list|)
expr_stmt|;
name|addProperty
argument_list|(
name|bagJobs
argument_list|)
expr_stmt|;
block|}
comment|// add job
name|bagJobs
operator|.
name|getContainer
argument_list|()
operator|.
name|addProperty
argument_list|(
name|job
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|JobType
argument_list|>
name|getJobs
parameter_list|()
throws|throws
name|BadFieldValueException
block|{
name|List
argument_list|<
name|AbstractField
argument_list|>
name|tmp
init|=
name|getUnqualifiedArrayList
argument_list|(
name|JOB_REF
argument_list|)
decl_stmt|;
if|if
condition|(
name|tmp
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|JobType
argument_list|>
name|layers
init|=
operator|new
name|ArrayList
argument_list|<
name|JobType
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|AbstractField
name|abstractField
range|:
name|tmp
control|)
block|{
if|if
condition|(
name|abstractField
operator|instanceof
name|JobType
condition|)
block|{
name|layers
operator|.
name|add
argument_list|(
operator|(
name|JobType
operator|)
name|abstractField
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|BadFieldValueException
argument_list|(
literal|"Job expected and "
operator|+
name|abstractField
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" found."
argument_list|)
throw|;
block|}
block|}
return|return
name|layers
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

