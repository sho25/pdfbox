begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|XMPMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|AbstractField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|ArrayProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|BadFieldValueException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|Cardinality
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|DateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|IntegerType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|LayerType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|ProperNameType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|PropertyType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|StructuredType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|TextType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|TypeMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|Types
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|URIType
import|;
end_import

begin_class
annotation|@
name|StructuredType
argument_list|(
name|preferedPrefix
operator|=
literal|"photoshop"
argument_list|,
name|namespace
operator|=
literal|"http://ns.adobe.com/photoshop/1.0/"
argument_list|)
specifier|public
class|class
name|PhotoshopSchema
extends|extends
name|XMPSchema
block|{
specifier|public
name|PhotoshopSchema
parameter_list|(
name|XMPMetadata
name|metadata
parameter_list|)
block|{
name|super
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
block|}
specifier|public
name|PhotoshopSchema
parameter_list|(
name|XMPMetadata
name|metadata
parameter_list|,
name|String
name|ownPrefix
parameter_list|)
block|{
name|super
argument_list|(
name|metadata
argument_list|,
name|ownPrefix
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
specifier|final
name|String
name|PREFERED_PREFIX
init|=
literal|"photoshop"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PHOTOSHOPURI
init|=
literal|"http://ns.adobe.com/photoshop/1.0/"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|URI
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|ANCESTORID
init|=
literal|"AncestorID"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|AUTHORS_POSITION
init|=
literal|"AuthorsPosition"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|ProperName
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|CAPTION_WRITER
init|=
literal|"CaptionWriter"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|CATEGORY
init|=
literal|"Category"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|CITY
init|=
literal|"City"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Integer
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|COLOR_MODE
init|=
literal|"ColorMode"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|COUNTRY
init|=
literal|"Country"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|CREDIT
init|=
literal|"Credit"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Date
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|DATE_CREATED
init|=
literal|"DateCreated"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Bag
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|DOCUMENT_ANCESTORS
init|=
literal|"DocumentAncestors"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|HEADLINE
init|=
literal|"Headline"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|HISTORY
init|=
literal|"History"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|ICC_PROFILE
init|=
literal|"ICCProfile"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|INSTRUCTIONS
init|=
literal|"Instructions"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|SOURCE
init|=
literal|"Source"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|STATE
init|=
literal|"State"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Bag
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|SUPPLEMENTAL_CATEGORIES
init|=
literal|"SupplementalCategories"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Layer
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Seq
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|TEXT_LAYERS
init|=
literal|"TextLayers"
decl_stmt|;
specifier|private
name|ArrayProperty
name|seqLayer
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Text
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|TRANSMISSION_REFERENCE
init|=
literal|"TransmissionReference"
decl_stmt|;
annotation|@
name|PropertyType
argument_list|(
name|type
operator|=
name|Types
operator|.
name|Integer
argument_list|,
name|card
operator|=
name|Cardinality
operator|.
name|Simple
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|URGENCY
init|=
literal|"Urgency"
decl_stmt|;
specifier|public
name|URIType
name|getAncestorIDProperty
parameter_list|()
block|{
return|return
operator|(
name|URIType
operator|)
name|getProperty
argument_list|(
name|ANCESTORID
argument_list|)
return|;
block|}
specifier|public
name|String
name|getAncestorID
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|ANCESTORID
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setAncestorID
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|URIType
name|tt
init|=
operator|(
name|URIType
operator|)
name|instanciateSimple
argument_list|(
name|ANCESTORID
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setAncestorIDProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAncestorIDProperty
parameter_list|(
name|URIType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextType
name|getAuthorsPositionProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|AUTHORS_POSITION
argument_list|)
return|;
block|}
specifier|public
name|String
name|getAuthorsPosition
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|AUTHORS_POSITION
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setAuthorsPosition
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|tt
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|AUTHORS_POSITION
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setAuthorsPositionProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAuthorsPositionProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextType
name|getCaptionWriterProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|CAPTION_WRITER
argument_list|)
return|;
block|}
specifier|public
name|String
name|getCaptionWriter
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|CAPTION_WRITER
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setCaptionWriter
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|ProperNameType
name|tt
init|=
operator|(
name|ProperNameType
operator|)
name|instanciateSimple
argument_list|(
name|CAPTION_WRITER
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setCaptionWriterProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCaptionWriterProperty
parameter_list|(
name|ProperNameType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextType
name|getCategoryProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|CATEGORY
argument_list|)
return|;
block|}
specifier|public
name|String
name|getCategory
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|CATEGORY
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setCategory
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|tt
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|CATEGORY
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setCategoryProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCategoryProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextType
name|getCityProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|CITY
argument_list|)
return|;
block|}
specifier|public
name|String
name|getCity
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|CITY
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setCity
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|tt
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|CITY
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setCityProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCityProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|IntegerType
name|getColorModeProperty
parameter_list|()
block|{
return|return
operator|(
name|IntegerType
operator|)
name|getProperty
argument_list|(
name|COLOR_MODE
argument_list|)
return|;
block|}
specifier|public
name|Integer
name|getColorMode
parameter_list|()
block|{
name|IntegerType
name|tt
init|=
operator|(
operator|(
name|IntegerType
operator|)
name|getProperty
argument_list|(
name|COLOR_MODE
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setColorMode
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|IntegerType
name|tt
init|=
operator|(
name|IntegerType
operator|)
name|instanciateSimple
argument_list|(
name|COLOR_MODE
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setColorModeProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setColorModeProperty
parameter_list|(
name|IntegerType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextType
name|getCountryProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|COUNTRY
argument_list|)
return|;
block|}
specifier|public
name|String
name|getCountry
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|COUNTRY
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setCountry
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|tt
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|COUNTRY
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setCountryProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCountryProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextType
name|getCreditProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|CREDIT
argument_list|)
return|;
block|}
specifier|public
name|String
name|getCredit
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|CREDIT
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setCredit
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|tt
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|CREDIT
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setCreditProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCreditProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|DateType
name|getDateCreatedProperty
parameter_list|()
block|{
return|return
operator|(
name|DateType
operator|)
name|getProperty
argument_list|(
name|DATE_CREATED
argument_list|)
return|;
block|}
specifier|public
name|String
name|getDateCreated
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|DATE_CREATED
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setDateCreated
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|DateType
name|tt
init|=
operator|(
name|DateType
operator|)
name|instanciateSimple
argument_list|(
name|DATE_CREATED
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setDateCreatedProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDateCreatedProperty
parameter_list|(
name|DateType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addDocumentAncestors
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|addQualifiedBagValue
argument_list|(
name|DOCUMENT_ANCESTORS
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ArrayProperty
name|getDocumentAncestorsProperty
parameter_list|()
block|{
return|return
operator|(
name|ArrayProperty
operator|)
name|getProperty
argument_list|(
name|DOCUMENT_ANCESTORS
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getDocumentAncestors
parameter_list|()
block|{
return|return
name|getUnqualifiedBagValueList
argument_list|(
name|DOCUMENT_ANCESTORS
argument_list|)
return|;
block|}
specifier|public
name|TextType
name|getHeadlineProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|HEADLINE
argument_list|)
return|;
block|}
specifier|public
name|String
name|getHeadline
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|HEADLINE
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setHeadline
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|tt
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|HEADLINE
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setHeadlineProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setHeadlineProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextType
name|getHistoryProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|HISTORY
argument_list|)
return|;
block|}
specifier|public
name|String
name|getHistory
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|HISTORY
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setHistory
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|tt
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|HISTORY
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setHistoryProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setHistoryProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextType
name|getICCProfileProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|ICC_PROFILE
argument_list|)
return|;
block|}
specifier|public
name|String
name|getICCProfile
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|ICC_PROFILE
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setICCProfile
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|tt
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|ICC_PROFILE
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setICCProfileProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setICCProfileProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextType
name|getInstructionsProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|INSTRUCTIONS
argument_list|)
return|;
block|}
specifier|public
name|String
name|getInstructions
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|INSTRUCTIONS
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setInstructions
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|tt
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|INSTRUCTIONS
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setInstructionsProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setInstructionsProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextType
name|getSourceProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|SOURCE
argument_list|)
return|;
block|}
specifier|public
name|String
name|getSource
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|SOURCE
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setSource
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|source
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|SOURCE
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setSourceProperty
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSourceProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextType
name|getStateProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|STATE
argument_list|)
return|;
block|}
specifier|public
name|String
name|getState
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|STATE
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setState
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|tt
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|STATE
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setStateProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setStateProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addSupplementalCategories
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|addQualifiedBagValue
argument_list|(
name|SUPPLEMENTAL_CATEGORIES
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeSupplementalCategories
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|removeUnqualifiedBagValue
argument_list|(
name|SUPPLEMENTAL_CATEGORIES
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add a new supplemental category.      *       * @param s The supplemental category.      */
specifier|public
name|void
name|addSupplementalCategory
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|addSupplementalCategories
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeSupplementalCategory
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|removeSupplementalCategories
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ArrayProperty
name|getSupplementalCategoriesProperty
parameter_list|()
block|{
return|return
operator|(
name|ArrayProperty
operator|)
name|getProperty
argument_list|(
name|SUPPLEMENTAL_CATEGORIES
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getSupplementalCategories
parameter_list|()
block|{
return|return
name|getUnqualifiedBagValueList
argument_list|(
name|SUPPLEMENTAL_CATEGORIES
argument_list|)
return|;
block|}
specifier|public
name|void
name|addTextLayers
parameter_list|(
name|String
name|layerName
parameter_list|,
name|String
name|layerText
parameter_list|)
block|{
if|if
condition|(
name|seqLayer
operator|==
literal|null
condition|)
block|{
name|seqLayer
operator|=
name|createArrayProperty
argument_list|(
name|TEXT_LAYERS
argument_list|,
name|Cardinality
operator|.
name|Seq
argument_list|)
expr_stmt|;
name|addProperty
argument_list|(
name|seqLayer
argument_list|)
expr_stmt|;
block|}
name|LayerType
name|layer
init|=
operator|new
name|LayerType
argument_list|(
name|getMetadata
argument_list|()
argument_list|)
decl_stmt|;
name|layer
operator|.
name|setLayerName
argument_list|(
name|layerName
argument_list|)
expr_stmt|;
name|layer
operator|.
name|setLayerText
argument_list|(
name|layerText
argument_list|)
expr_stmt|;
name|seqLayer
operator|.
name|getContainer
argument_list|()
operator|.
name|addProperty
argument_list|(
name|layer
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|LayerType
argument_list|>
name|getTextLayers
parameter_list|()
throws|throws
name|BadFieldValueException
block|{
name|List
argument_list|<
name|AbstractField
argument_list|>
name|tmp
init|=
name|getUnqualifiedArrayList
argument_list|(
name|TEXT_LAYERS
argument_list|)
decl_stmt|;
if|if
condition|(
name|tmp
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|LayerType
argument_list|>
name|layers
init|=
operator|new
name|ArrayList
argument_list|<
name|LayerType
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|AbstractField
name|abstractField
range|:
name|tmp
control|)
block|{
if|if
condition|(
name|abstractField
operator|instanceof
name|LayerType
condition|)
block|{
name|layers
operator|.
name|add
argument_list|(
operator|(
name|LayerType
operator|)
name|abstractField
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|BadFieldValueException
argument_list|(
literal|"Layer expected and "
operator|+
name|abstractField
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" found."
argument_list|)
throw|;
block|}
block|}
return|return
name|layers
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|TextType
name|getTransmissionReferenceProperty
parameter_list|()
block|{
return|return
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|TRANSMISSION_REFERENCE
argument_list|)
return|;
block|}
specifier|public
name|String
name|getTransmissionReference
parameter_list|()
block|{
name|TextType
name|tt
init|=
operator|(
operator|(
name|TextType
operator|)
name|getProperty
argument_list|(
name|TRANSMISSION_REFERENCE
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getStringValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setTransmissionReference
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|TextType
name|tt
init|=
operator|(
name|TextType
operator|)
name|instanciateSimple
argument_list|(
name|TRANSMISSION_REFERENCE
argument_list|,
name|text
argument_list|)
decl_stmt|;
name|setTransmissionReferenceProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setTransmissionReferenceProperty
parameter_list|(
name|TextType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|IntegerType
name|getUrgencyProperty
parameter_list|()
block|{
return|return
operator|(
name|IntegerType
operator|)
name|getProperty
argument_list|(
name|URGENCY
argument_list|)
return|;
block|}
specifier|public
name|Integer
name|getUrgency
parameter_list|()
block|{
name|IntegerType
name|tt
init|=
operator|(
operator|(
name|IntegerType
operator|)
name|getProperty
argument_list|(
name|URGENCY
argument_list|)
operator|)
decl_stmt|;
return|return
name|tt
operator|==
literal|null
condition|?
literal|null
else|:
name|tt
operator|.
name|getValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setUrgency
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|IntegerType
name|tt
init|=
operator|(
name|IntegerType
operator|)
name|instanciateSimple
argument_list|(
name|URGENCY
argument_list|,
name|s
argument_list|)
decl_stmt|;
name|setUrgencyProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setUrgency
parameter_list|(
name|Integer
name|s
parameter_list|)
block|{
name|IntegerType
name|tt
init|=
operator|(
name|IntegerType
operator|)
name|instanciateSimple
argument_list|(
name|URGENCY
argument_list|,
name|s
argument_list|)
decl_stmt|;
name|setUrgencyProperty
argument_list|(
name|tt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setUrgencyProperty
parameter_list|(
name|IntegerType
name|text
parameter_list|)
block|{
name|addProperty
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

