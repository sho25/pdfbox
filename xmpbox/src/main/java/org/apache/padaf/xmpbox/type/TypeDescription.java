begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
package|;
end_package

begin_class
specifier|public
class|class
name|TypeDescription
block|{
specifier|public
enum|enum
name|BasicType
block|{
name|Text
block|,
name|Date
block|,
name|Integer
block|,
name|Boolean
block|,
name|Real
block|}
specifier|private
name|String
name|type
decl_stmt|;
specifier|private
name|BasicType
name|basic
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
extends|extends
name|AbstractField
argument_list|>
name|clz
decl_stmt|;
specifier|public
name|TypeDescription
parameter_list|(
name|String
name|type
parameter_list|,
name|BasicType
name|basic
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|AbstractField
argument_list|>
name|clz
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|basic
operator|=
name|basic
expr_stmt|;
name|this
operator|.
name|clz
operator|=
name|clz
expr_stmt|;
block|}
specifier|public
name|TypeDescription
parameter_list|(
name|String
name|type
parameter_list|,
name|BasicType
name|basic
parameter_list|)
block|{
name|this
argument_list|(
name|type
argument_list|,
name|basic
argument_list|,
name|TextType
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TypeDescription
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|this
argument_list|(
name|type
argument_list|,
name|BasicType
operator|.
name|Text
argument_list|,
name|TextType
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|AbstractField
argument_list|>
name|getTypeClass
parameter_list|()
block|{
return|return
name|clz
return|;
block|}
specifier|public
name|BasicType
name|getBasic
parameter_list|()
block|{
return|return
name|basic
return|;
block|}
block|}
end_class

end_unit

