begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
package|;
end_package

begin_comment
comment|/**  * Simple representation of an attribute  *   * @author a183132  *   */
end_comment

begin_class
specifier|public
class|class
name|Attribute
block|{
specifier|private
name|String
name|nsURI
decl_stmt|,
name|prefix
decl_stmt|,
name|localName
decl_stmt|,
name|value
decl_stmt|;
comment|/** 	 * Constructor of a new Attribute 	 *  	 * @param nsURI 	 *            namespaceURI of this attribute (could be null) 	 * @param prefix 	 *            prefix of this attribute 	 * @param localName 	 *            localName of this attribute 	 * @param value 	 *            value given to this attribute 	 */
specifier|public
name|Attribute
parameter_list|(
name|String
name|nsURI
parameter_list|,
name|String
name|prefix
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|nsURI
operator|=
name|nsURI
expr_stmt|;
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
name|this
operator|.
name|localName
operator|=
name|localName
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|/** 	 * Get prefix defined for this attribute 	 *  	 * @return prefix defined (could be null) 	 */
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
if|if
condition|(
name|prefix
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|prefix
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|prefix
return|;
block|}
return|return
literal|null
return|;
block|}
comment|/** 	 * Set prefix for this attribute 	 *  	 * @param prefix 	 *            the prefix defined for this attribute 	 */
specifier|public
name|void
name|setPrefix
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
block|}
comment|/** 	 * Get the localName of this attribute 	 *  	 * @return local name of this attribute 	 */
specifier|public
name|String
name|getLocalName
parameter_list|()
block|{
return|return
name|localName
return|;
block|}
comment|/** 	 * Set the localName of this attribute 	 *  	 * @param lname 	 *            the local name to set 	 */
specifier|public
name|void
name|setLocalName
parameter_list|(
name|String
name|lname
parameter_list|)
block|{
name|localName
operator|=
name|lname
expr_stmt|;
block|}
comment|/** 	 * Get the namespace URI of this attribute 	 *  	 * @return the namespace URI associated to this attribute (could be null) 	 */
specifier|public
name|String
name|getNamespace
parameter_list|()
block|{
return|return
name|nsURI
return|;
block|}
comment|/** 	 * Set the namespace URI of this attribute 	 *  	 * @param nsURI 	 *            the namespace URI to set 	 */
specifier|public
name|void
name|setNsURI
parameter_list|(
name|String
name|nsURI
parameter_list|)
block|{
name|this
operator|.
name|nsURI
operator|=
name|nsURI
expr_stmt|;
block|}
comment|/** 	 * Get the attribute qualified Name (prefix+localName) 	 *  	 * @return the full qualified name of this attribute 	 */
specifier|public
name|String
name|getQualifiedName
parameter_list|()
block|{
if|if
condition|(
name|prefix
operator|==
literal|null
condition|)
block|{
return|return
name|localName
return|;
block|}
if|if
condition|(
name|prefix
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
return|return
name|localName
return|;
block|}
return|return
name|prefix
operator|+
literal|":"
operator|+
name|localName
return|;
block|}
comment|/** 	 * Get value of this attribute 	 *  	 * @return value of this attribute 	 */
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/** 	 * Set value of this attribute 	 *  	 * @param value 	 *            the value to set for this attribute 	 */
specifier|public
name|void
name|setValue
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
block|}
end_class

end_unit

