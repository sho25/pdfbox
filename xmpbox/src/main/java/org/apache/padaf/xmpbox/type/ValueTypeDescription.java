begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|XMPMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|PDFAFieldDescription
import|;
end_import

begin_comment
comment|/**  * Represents one ValueType Description described in xml file in order to be use  * in automatic SchemaDescriptionBulding  *   * @author a183132  *   */
end_comment

begin_class
specifier|public
class|class
name|ValueTypeDescription
block|{
specifier|private
name|String
name|type
decl_stmt|;
specifier|private
name|String
name|namespaceURI
decl_stmt|;
specifier|private
name|String
name|prefix
decl_stmt|;
specifier|private
name|String
name|description
decl_stmt|;
specifier|private
name|List
argument_list|<
name|FieldDescription
argument_list|>
name|fields
decl_stmt|;
comment|/** 	 * Constructor of ValueType Description with fields associated in order to 	 * be use in automatic SchemaDescriptionBulding 	 *  	 * @param type 	 *            type (or name) of valuetype to describe 	 * @param namespaceURI 	 *            the namespace URI of valuetype to describe 	 * @param prefix 	 *            the prefix of valuetype to describe 	 * @param description 	 *            the description of valuetype to describe 	 * @param fields 	 *            Fields descriptions list associated to the valuetype to 	 *            describe 	 */
specifier|public
name|ValueTypeDescription
parameter_list|(
name|String
name|type
parameter_list|,
name|String
name|namespaceURI
parameter_list|,
name|String
name|prefix
parameter_list|,
name|String
name|description
parameter_list|,
name|List
argument_list|<
name|FieldDescription
argument_list|>
name|fields
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|namespaceURI
operator|=
name|namespaceURI
expr_stmt|;
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
name|this
operator|.
name|description
operator|=
name|description
expr_stmt|;
name|this
operator|.
name|fields
operator|=
name|fields
expr_stmt|;
block|}
comment|/** 	 * /** Constructor of ValueType Description without fields associated in 	 * order to be use in automatic SchemaDescriptionBulding 	 *  	 * @param type 	 *            type (or name) of valuetype to describe 	 * @param namespaceURI 	 *            the namespace URI of valuetype to describe 	 * @param prefix 	 *            the prefix of valuetype to describe 	 * @param description 	 *            the description of valuetype to describe 	 */
specifier|public
name|ValueTypeDescription
parameter_list|(
name|String
name|type
parameter_list|,
name|String
name|namespaceURI
parameter_list|,
name|String
name|prefix
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|namespaceURI
operator|=
name|namespaceURI
expr_stmt|;
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
name|this
operator|.
name|description
operator|=
name|description
expr_stmt|;
name|this
operator|.
name|fields
operator|=
literal|null
expr_stmt|;
block|}
comment|/** 	 * Get Type (or name) of this value type 	 *  	 * @return Type defined 	 */
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
comment|/** 	 * Get the namespace URI 	 *  	 * @return the namespace URI 	 */
specifier|public
name|String
name|getNamespaceURI
parameter_list|()
block|{
return|return
name|namespaceURI
return|;
block|}
comment|/** 	 * Get the Prefix 	 *  	 * @return the prefix defined 	 */
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
return|return
name|prefix
return|;
block|}
comment|/** 	 * Get the Description 	 *  	 * @return the description defined 	 */
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|description
return|;
block|}
comment|/** 	 * Get the list of field description associated to this value type 	 *  	 * @return List of fields declared for this valueType 	 */
specifier|public
name|List
argument_list|<
name|FieldDescription
argument_list|>
name|getFields
parameter_list|()
block|{
return|return
name|fields
return|;
block|}
comment|/** 	 * Get PDF/A Field Descriptions in order to be used in PDF/A Extension 	 * schema 	 *  	 * @param metadata 	 *            The metadata to attach the future property 	 * @return The list of PDF/A Field Descriptions 	 */
specifier|public
name|List
argument_list|<
name|PDFAFieldDescription
argument_list|>
name|getPDFAFieldsAssocied
parameter_list|(
name|XMPMetadata
name|metadata
parameter_list|)
block|{
if|if
condition|(
name|fields
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|PDFAFieldDescription
argument_list|>
name|pdfaFields
init|=
operator|new
name|ArrayList
argument_list|<
name|PDFAFieldDescription
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|FieldDescription
name|field
range|:
name|fields
control|)
block|{
name|pdfaFields
operator|.
name|add
argument_list|(
name|field
operator|.
name|createPDFAFieldDescription
argument_list|(
name|metadata
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|pdfaFields
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

