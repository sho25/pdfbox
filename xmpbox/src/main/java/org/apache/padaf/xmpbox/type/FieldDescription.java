begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|XMPMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|PDFAFieldDescription
import|;
end_import

begin_comment
comment|/**  * Represents one Property Description described in xml file in order to be use  * in automatic SchemaDescriptionBulding  *   * @author a183132  *   */
end_comment

begin_class
specifier|public
class|class
name|FieldDescription
block|{
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|valueType
decl_stmt|;
specifier|private
name|String
name|description
decl_stmt|;
comment|/** 	 * Constructor of a FieldDescription in order to be use in automatic 	 * SchemaDescriptionBulding 	 *  	 * @param name 	 *            Name of the field described 	 * @param valueType 	 *            The type of the field described 	 * @param description 	 *            The description of the field described 	 */
specifier|public
name|FieldDescription
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|valueType
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|valueType
operator|=
name|valueType
expr_stmt|;
name|this
operator|.
name|description
operator|=
name|description
expr_stmt|;
block|}
comment|/** 	 * get value Type declared 	 *  	 * @return ValueType declared 	 */
specifier|public
name|String
name|getValueType
parameter_list|()
block|{
return|return
name|valueType
return|;
block|}
comment|/** 	 * Get Description declared 	 *  	 * @return Description declared 	 */
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|description
return|;
block|}
comment|/** 	 * Get Name declared 	 *  	 * @return Name declared 	 */
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/** 	 * Create a PDFAFieldDescription which can be included in 	 * PDFAPropertyDescription (for Schema Descritpions in PDF/A Extension 	 * Schema) 	 *  	 * @param metadata 	 *            The metadata to attach the future property 	 * @return The PDF/A Field Description generated 	 */
specifier|public
name|PDFAFieldDescription
name|createPDFAFieldDescription
parameter_list|(
name|XMPMetadata
name|metadata
parameter_list|)
block|{
name|PDFAFieldDescription
name|fieldDesc
init|=
operator|new
name|PDFAFieldDescription
argument_list|(
name|metadata
argument_list|)
decl_stmt|;
name|fieldDesc
operator|.
name|setNameValue
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|fieldDesc
operator|.
name|setValueTypeValue
argument_list|(
name|valueType
argument_list|)
expr_stmt|;
name|fieldDesc
operator|.
name|setDescriptionValue
argument_list|(
name|description
argument_list|)
expr_stmt|;
return|return
name|fieldDesc
return|;
block|}
block|}
end_class

end_unit

