begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|type
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|XMPMetadata
import|;
end_import

begin_comment
comment|/**  * Abstract Class of an Simple XMP Property  *   * @author a183132  *   */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractSimpleProperty
extends|extends
name|AbstractField
block|{
specifier|private
name|String
name|namespace
decl_stmt|;
specifier|private
name|String
name|prefix
decl_stmt|;
comment|/** 	 * Property specific type constructor (namespaceURI is given) 	 *  	 * @param metadata 	 *            The metadata to attach to this property 	 * @param namespaceURI 	 *            the specified namespace URI associated to this property 	 * @param prefix 	 *            The prefix to set for this property 	 * @param propertyName 	 *            The local Name of this property 	 * @param value 	 *            the value to give 	 */
specifier|public
name|AbstractSimpleProperty
parameter_list|(
name|XMPMetadata
name|metadata
parameter_list|,
name|String
name|namespaceURI
parameter_list|,
name|String
name|prefix
parameter_list|,
name|String
name|propertyName
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|super
argument_list|(
name|metadata
argument_list|,
name|propertyName
argument_list|)
expr_stmt|;
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|this
operator|.
name|namespace
operator|=
name|namespaceURI
expr_stmt|;
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
block|}
comment|/** 	 * Check and set new property value (in Element and in its Object 	 * Representation) 	 *  	 * @param value 	 *            Object value to set 	 */
specifier|public
specifier|abstract
name|void
name|setValue
parameter_list|(
name|Object
name|value
parameter_list|)
function_decl|;
comment|/** 	 * Return the property value 	 *  	 * @return a string 	 */
specifier|public
specifier|abstract
name|String
name|getStringValue
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|Object
name|getValue
parameter_list|()
function_decl|;
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"["
argument_list|)
operator|.
name|append
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|":"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getStringValue
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/** 	 * Get the namespace URI of this entity 	 *  	 * @return the namespace URI 	 */
specifier|public
specifier|final
name|String
name|getNamespace
parameter_list|()
block|{
return|return
name|namespace
return|;
block|}
comment|/** 	 * Get the prefix of this entity 	 *  	 * @return the prefix specified 	 */
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
return|return
name|prefix
return|;
block|}
block|}
end_class

end_unit

