begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|parser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|parser
operator|.
name|PropMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|PropMappingTest
block|{
specifier|protected
name|PropMapping
name|propMap
decl_stmt|;
specifier|protected
name|String
name|nsURI
init|=
literal|"http://www.test.org/PropMap#"
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|init
parameter_list|()
block|{
name|propMap
operator|=
operator|new
name|PropMapping
argument_list|(
name|nsURI
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testURI
parameter_list|()
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|nsURI
argument_list|,
name|propMap
operator|.
name|getConcernedNamespace
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropMapAdding
parameter_list|()
block|{
name|String
name|name
init|=
literal|"propName"
decl_stmt|;
name|String
name|type
init|=
literal|"PropType"
decl_stmt|;
name|propMap
operator|.
name|addNewProperty
argument_list|(
name|name
argument_list|,
name|type
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|propMap
operator|.
name|getPropertiesName
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|name
argument_list|,
name|propMap
operator|.
name|getPropertiesName
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|propMap
operator|.
name|getPropertyAttributes
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|type
argument_list|,
name|propMap
operator|.
name|getPropertyType
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropMapAttr
parameter_list|()
block|{
name|String
name|name
init|=
literal|"propName"
decl_stmt|;
name|String
name|type
init|=
literal|"PropType"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|attr
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|att1
init|=
literal|"attr1"
decl_stmt|;
name|String
name|att2
init|=
literal|"attr2"
decl_stmt|;
name|attr
operator|.
name|add
argument_list|(
name|att1
argument_list|)
expr_stmt|;
name|attr
operator|.
name|add
argument_list|(
name|att2
argument_list|)
expr_stmt|;
name|propMap
operator|.
name|addNewProperty
argument_list|(
name|name
argument_list|,
name|type
argument_list|,
name|attr
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attr
argument_list|,
name|propMap
operator|.
name|getPropertyAttributes
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

