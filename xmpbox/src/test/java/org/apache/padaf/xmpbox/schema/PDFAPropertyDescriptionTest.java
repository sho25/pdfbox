begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|XMPMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|PDFAPropertyDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|BadFieldValueException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_class
specifier|public
class|class
name|PDFAPropertyDescriptionTest
block|{
specifier|protected
name|XMPMetadata
name|parent
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|resetDocument
parameter_list|()
throws|throws
name|Exception
block|{
name|parent
operator|=
operator|new
name|XMPMetadata
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateOnePdfaProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|PDFAPropertyDescription
name|pdfprop
init|=
operator|new
name|PDFAPropertyDescription
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|String
name|name
init|=
literal|"value Test"
decl_stmt|;
name|String
name|valueT
init|=
literal|"Text"
decl_stmt|;
name|String
name|cat
init|=
literal|"external"
decl_stmt|;
name|String
name|desc
init|=
literal|"it's a test property"
decl_stmt|;
name|pdfprop
operator|.
name|setNameValue
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|pdfprop
operator|.
name|setValueTypeValue
argument_list|(
name|valueT
argument_list|)
expr_stmt|;
name|pdfprop
operator|.
name|setCategoryValue
argument_list|(
name|cat
argument_list|)
expr_stmt|;
name|pdfprop
operator|.
name|setDescriptionValue
argument_list|(
name|desc
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|name
argument_list|,
name|pdfprop
operator|.
name|getNameValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|valueT
argument_list|,
name|pdfprop
operator|.
name|getValueTypeValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cat
argument_list|,
name|pdfprop
operator|.
name|getCategoryValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|desc
argument_list|,
name|pdfprop
operator|.
name|getDescriptionValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|name
argument_list|,
name|pdfprop
operator|.
name|getName
argument_list|()
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|valueT
argument_list|,
name|pdfprop
operator|.
name|getValueType
argument_list|()
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cat
argument_list|,
name|pdfprop
operator|.
name|getCategory
argument_list|()
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|desc
argument_list|,
name|pdfprop
operator|.
name|getDescription
argument_list|()
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|e
init|=
name|parent
operator|.
name|getFuturOwner
argument_list|()
operator|.
name|createElement
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|e
operator|.
name|setAttributeNS
argument_list|(
literal|"http://www.w3.org/2000/xmlns/"
argument_list|,
literal|"xmlns:rdf"
argument_list|,
literal|"http://www.w3.org/1999/02/22-rdf-syntax-ns#"
argument_list|)
expr_stmt|;
name|e
operator|.
name|appendChild
argument_list|(
name|pdfprop
operator|.
name|getElement
argument_list|()
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getFuturOwner
argument_list|()
operator|.
name|appendChild
argument_list|(
name|e
argument_list|)
expr_stmt|;
comment|// XMLUtil.save(parent.getFuturOwner(), System.out, "UTF-8");
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|BadFieldValueException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testBadFieldCheckForCategory
parameter_list|()
throws|throws
name|Exception
block|{
name|PDFAPropertyDescription
name|pdfprop
init|=
operator|new
name|PDFAPropertyDescription
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|String
name|name
init|=
literal|"value Test"
decl_stmt|;
name|String
name|valueT
init|=
literal|"Text"
decl_stmt|;
name|String
name|cat
init|=
literal|"badvalue"
decl_stmt|;
name|String
name|desc
init|=
literal|"it's a test property"
decl_stmt|;
name|pdfprop
operator|.
name|setNameValue
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|pdfprop
operator|.
name|setValueTypeValue
argument_list|(
name|valueT
argument_list|)
expr_stmt|;
name|pdfprop
operator|.
name|setCategoryValue
argument_list|(
name|cat
argument_list|)
expr_stmt|;
name|pdfprop
operator|.
name|setDescriptionValue
argument_list|(
name|desc
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

