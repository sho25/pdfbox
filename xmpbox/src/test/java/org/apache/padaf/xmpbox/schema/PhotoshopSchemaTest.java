begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|PhotoshopSchemaTest
extends|extends
name|AbstractSchemaTester
block|{
specifier|protected
name|PhotoshopSchema
name|schema
init|=
literal|null
decl_stmt|;
specifier|public
name|PhotoshopSchema
name|getSchema
parameter_list|()
block|{
return|return
name|schema
return|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
name|schema
operator|=
name|xmp
operator|.
name|createAndAddPhotoshopSchema
argument_list|()
expr_stmt|;
block|}
specifier|public
name|PhotoshopSchemaTest
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|String
name|type
parameter_list|,
name|Cardinality
name|card
parameter_list|)
block|{
name|super
argument_list|(
name|fieldName
argument_list|,
name|type
argument_list|,
name|card
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Parameters
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|initializeParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
index|[]
argument_list|>
argument_list|()
decl_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"AncestorID"
block|,
literal|"URI"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
comment|//    	result.add(new Object [] {"LayerName","Text",Cardinality.Simple}); TODO TEST missing in schema
comment|//    	result.add(new Object [] {"LayerText","Text",Cardinality.Simple}); TODO TEST missing in schema
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"AuthorsPosition"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"CaptionWriter"
block|,
literal|"ProperName"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"Category"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"City"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"ColorMode"
block|,
literal|"Integer"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"Country"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"Credit"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"DateCreated"
block|,
literal|"Date"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
comment|// DocumentAncestors TODO TEST bag Ancestor
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"Headline"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"History"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"ICCProfile"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"Instructions"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"Source"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"State"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"SupplementalCategories"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Bag
block|}
argument_list|)
expr_stmt|;
comment|// Layer TODO TEST structured type
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"TransmissionReference"
block|,
literal|"Text"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"Urgency"
block|,
literal|"Integer"
block|,
name|Cardinality
operator|.
name|Simple
block|}
argument_list|)
expr_stmt|;
comment|// TODO TEST camera raw
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

