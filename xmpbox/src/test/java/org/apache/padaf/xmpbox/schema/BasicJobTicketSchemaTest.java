begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|SaveMetadataHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|XMPMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|parser
operator|.
name|XMPDocumentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|parser
operator|.
name|XmpExpectedRdfAboutAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|parser
operator|.
name|XmpParsingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|parser
operator|.
name|XmpSchemaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|parser
operator|.
name|XmpUnknownValueTypeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|parser
operator|.
name|XmpXpacketEndException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|BadFieldValueException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|JobType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|BasicJobTicketSchemaTest
block|{
specifier|protected
specifier|static
name|XMPDocumentBuilder
name|builder
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|bc
parameter_list|()
throws|throws
name|Exception
block|{
name|builder
operator|=
operator|new
name|XMPDocumentBuilder
argument_list|()
expr_stmt|;
block|}
specifier|private
name|InputStream
name|transfer
parameter_list|(
name|ByteArrayOutputStream
name|out
parameter_list|)
block|{
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|ByteArrayInputStream
name|bis
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|out
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|bis
return|;
block|}
specifier|private
name|XMPMetadata
name|parse
parameter_list|(
name|InputStream
name|is
parameter_list|)
throws|throws
name|BadFieldValueException
throws|,
name|XmpParsingException
throws|,
name|XmpSchemaException
throws|,
name|XmpUnknownValueTypeException
throws|,
name|XmpExpectedRdfAboutAttribute
throws|,
name|XmpXpacketEndException
block|{
return|return
name|builder
operator|.
name|parse
argument_list|(
name|is
argument_list|)
return|;
block|}
specifier|private
name|XMPMetadata
name|parse
parameter_list|(
name|ByteArrayOutputStream
name|os
parameter_list|)
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
name|transfer
argument_list|(
name|os
argument_list|)
decl_stmt|;
return|return
name|builder
operator|.
name|parse
argument_list|(
name|is
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddTwoJobs
parameter_list|()
throws|throws
name|Exception
block|{
name|XMPMetadata
name|xmpMetadata
init|=
operator|new
name|XMPMetadata
argument_list|()
decl_stmt|;
name|XMPBasicJobTicketSchema
name|basic
init|=
name|xmpMetadata
operator|.
name|createAndAddBasicJobTicketSchema
argument_list|()
decl_stmt|;
name|basic
operator|.
name|addJob
argument_list|(
literal|"zeid1"
argument_list|,
literal|"zename1"
argument_list|,
literal|"zeurl1"
argument_list|,
literal|"aaa"
argument_list|)
expr_stmt|;
name|basic
operator|.
name|addJob
argument_list|(
literal|"zeid2"
argument_list|,
literal|"zename2"
argument_list|,
literal|"zeurl2"
argument_list|)
expr_stmt|;
comment|//		SaveMetadataHelper.serialize(xmpMetadata, System.out);
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|SaveMetadataHelper
operator|.
name|serialize
argument_list|(
name|xmpMetadata
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|XMPMetadata
name|rxmp
init|=
name|parse
argument_list|(
name|bos
argument_list|)
decl_stmt|;
name|XMPBasicJobTicketSchema
name|jt
init|=
name|rxmp
operator|.
name|getBasicJobTicketSchema
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|jt
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|jt
operator|.
name|getJobs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddWithDefaultPrefix
parameter_list|()
throws|throws
name|Exception
block|{
name|XMPMetadata
name|xmpMetadata
init|=
operator|new
name|XMPMetadata
argument_list|()
decl_stmt|;
name|XMPBasicJobTicketSchema
name|basic
init|=
name|xmpMetadata
operator|.
name|createAndAddBasicJobTicketSchema
argument_list|()
decl_stmt|;
name|basic
operator|.
name|addJob
argument_list|(
literal|"zeid2"
argument_list|,
literal|"zename2"
argument_list|,
literal|"zeurl2"
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|SaveMetadataHelper
operator|.
name|serialize
argument_list|(
name|xmpMetadata
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|XMPMetadata
name|rxmp
init|=
name|parse
argument_list|(
name|bos
argument_list|)
decl_stmt|;
name|XMPBasicJobTicketSchema
name|jt
init|=
name|rxmp
operator|.
name|getBasicJobTicketSchema
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|jt
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|jt
operator|.
name|getJobs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JobType
name|job
init|=
name|jt
operator|.
name|getJobs
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"zeid2"
argument_list|,
name|job
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"zename2"
argument_list|,
name|job
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"zeurl2"
argument_list|,
name|job
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|JobType
operator|.
name|ELEMENT_NS
argument_list|,
name|job
operator|.
name|getFieldsNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|JobType
operator|.
name|PREFERED_PREFIX
argument_list|,
name|job
operator|.
name|getFieldPrefix
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//	@Test
specifier|public
name|void
name|testAddWithDefinedPrefix
parameter_list|()
throws|throws
name|Exception
block|{
name|XMPMetadata
name|xmpMetadata
init|=
operator|new
name|XMPMetadata
argument_list|()
decl_stmt|;
name|XMPBasicJobTicketSchema
name|basic
init|=
name|xmpMetadata
operator|.
name|createAndAddBasicJobTicketSchema
argument_list|()
decl_stmt|;
name|basic
operator|.
name|addJob
argument_list|(
literal|"zeid2"
argument_list|,
literal|"zename2"
argument_list|,
literal|"zeurl2"
argument_list|,
literal|"aaa"
argument_list|)
expr_stmt|;
name|SaveMetadataHelper
operator|.
name|serialize
argument_list|(
name|xmpMetadata
argument_list|,
name|System
operator|.
name|out
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|SaveMetadataHelper
operator|.
name|serialize
argument_list|(
name|xmpMetadata
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|XMPMetadata
name|rxmp
init|=
name|parse
argument_list|(
name|bos
argument_list|)
decl_stmt|;
name|XMPBasicJobTicketSchema
name|jt
init|=
name|rxmp
operator|.
name|getBasicJobTicketSchema
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|jt
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|jt
operator|.
name|getJobs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JobType
name|job
init|=
name|jt
operator|.
name|getJobs
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|//		SaveMetadataHelper.serialize(rxmp, System.out);
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"zeid2"
argument_list|,
name|job
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"zename2"
argument_list|,
name|job
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"zeurl2"
argument_list|,
name|job
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|JobType
operator|.
name|ELEMENT_NS
argument_list|,
name|job
operator|.
name|getFieldsNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"aaa"
argument_list|,
name|job
operator|.
name|getFieldPrefix
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

