begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************************  *   * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *   ****************************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|parser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|XMPMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|parser
operator|.
name|DateConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|parser
operator|.
name|XMPDocumentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|PDFAFieldDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|PDFAPropertyDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|PDFAValueTypeDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|SchemaDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|XMPSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|padaf
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|ThumbnailType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|DeserializationTest
block|{
specifier|protected
name|ByteArrayOutputStream
name|bos
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|init
parameter_list|()
block|{
name|bos
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsartorStyle
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|fis
init|=
name|XMPDocumentBuilder
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"isartorStyleXMPOK.xml"
argument_list|)
decl_stmt|;
name|XMPDocumentBuilder
name|xdb
init|=
operator|new
name|XMPDocumentBuilder
argument_list|()
decl_stmt|;
name|XMPMetadata
name|metadata
init|=
name|xdb
operator|.
name|parse
argument_list|(
name|fis
argument_list|)
decl_stmt|;
comment|//<xmpMM:DocumentID>
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"uuid:09C78666-2F91-3A9C-92AF-3691A6D594F7"
argument_list|,
name|metadata
operator|.
name|getXMPMediaManagementSchema
argument_list|()
operator|.
name|getDocumentID
argument_list|()
argument_list|)
expr_stmt|;
comment|//<xmp:CreateDate>
comment|//<xmp:ModifyDate>
comment|//<xmp:MetadataDate>
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DateConverter
operator|.
name|toCalendar
argument_list|(
literal|"2008-01-18T16:59:54+01:00"
argument_list|)
argument_list|,
name|metadata
operator|.
name|getXMPBasicSchema
argument_list|()
operator|.
name|getCreateDate
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DateConverter
operator|.
name|toCalendar
argument_list|(
literal|"2008-01-18T16:59:54+01:00"
argument_list|)
argument_list|,
name|metadata
operator|.
name|getXMPBasicSchema
argument_list|()
operator|.
name|getModifyDate
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DateConverter
operator|.
name|toCalendar
argument_list|(
literal|"2008-01-18T16:59:54+01:00"
argument_list|)
argument_list|,
name|metadata
operator|.
name|getXMPBasicSchema
argument_list|()
operator|.
name|getMetadataDate
argument_list|()
argument_list|)
expr_stmt|;
comment|// PDFA Extension
comment|// Check numbers of schema descriptions
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metadata
operator|.
name|getPDFExtensionSchema
argument_list|()
operator|.
name|getDescriptionSchema
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|SchemaDescription
name|desc
init|=
name|metadata
operator|.
name|getPDFExtensionSchema
argument_list|()
operator|.
name|getDescriptionSchema
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// Check description content
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ACME E-Mail Schema"
argument_list|,
name|desc
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"http://www.acme.com/ns/email/1/"
argument_list|,
name|desc
operator|.
name|getNameSpaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"acmeemail"
argument_list|,
name|desc
operator|.
name|getPrefix
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check property definition
name|List
argument_list|<
name|PDFAPropertyDescription
argument_list|>
name|properties
init|=
name|desc
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|properties
operator|.
name|size
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
comment|// Check properties content
name|PDFAPropertyDescription
name|tmpProp
init|=
name|properties
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Delivery-Date"
argument_list|,
name|tmpProp
operator|.
name|getNameValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Date"
argument_list|,
name|tmpProp
operator|.
name|getValueTypeValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
name|tmpProp
operator|.
name|getCategoryValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"date of email delivery"
argument_list|,
name|tmpProp
operator|.
name|getDescriptionValue
argument_list|()
argument_list|)
expr_stmt|;
name|tmpProp
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"From"
argument_list|,
name|tmpProp
operator|.
name|getNameValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mailaddress"
argument_list|,
name|tmpProp
operator|.
name|getValueTypeValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
name|tmpProp
operator|.
name|getCategoryValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"sender email address"
argument_list|,
name|tmpProp
operator|.
name|getDescriptionValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check valuetype
comment|// Check numbers of valuetype defined
name|Assert
operator|.
name|assertTrue
argument_list|(
name|desc
operator|.
name|getValueTypes
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|PDFAValueTypeDescription
name|tmpValType
init|=
name|desc
operator|.
name|getValueTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mailaddress"
argument_list|,
name|tmpValType
operator|.
name|getTypeNameValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"http://www.acme.com/ns/email/1/mailaddress/"
argument_list|,
name|tmpValType
operator|.
name|getNamespaceURIValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mailaddress value"
argument_list|,
name|tmpValType
operator|.
name|getDescriptionValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check fields associated to this value type
name|Assert
operator|.
name|assertTrue
argument_list|(
name|tmpValType
operator|.
name|getFields
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|PDFAFieldDescription
name|tmpField
init|=
name|tmpValType
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"name"
argument_list|,
name|tmpField
operator|.
name|getNameValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Text"
argument_list|,
name|tmpField
operator|.
name|getValueTypeValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"plaintext name"
argument_list|,
name|tmpField
operator|.
name|getDescriptionValue
argument_list|()
argument_list|)
expr_stmt|;
name|tmpField
operator|=
name|tmpValType
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mailto"
argument_list|,
name|tmpField
operator|.
name|getNameValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Text"
argument_list|,
name|tmpField
operator|.
name|getValueTypeValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"email address"
argument_list|,
name|tmpField
operator|.
name|getDescriptionValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check PDFA Conformance schema
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|metadata
operator|.
name|getPDFIdentificationSchema
argument_list|()
operator|.
name|getPartProperty
argument_list|()
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"B"
argument_list|,
name|metadata
operator|.
name|getPDFIdentificationSchema
argument_list|()
operator|.
name|getConformance
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1:2005"
argument_list|,
name|metadata
operator|.
name|getPDFIdentificationSchema
argument_list|()
operator|.
name|getAmdProperty
argument_list|()
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check ADOBE PDF Schema
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"PDFlib Personalization Server 7.0.2p5 (Win32)"
argument_list|,
name|metadata
operator|.
name|getAdobePDFSchema
argument_list|()
operator|.
name|getProducer
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check Defined Schema
name|XMPSchema
name|schem
init|=
name|metadata
operator|.
name|getSchema
argument_list|(
literal|"http://www.acme.com/ns/email/1/"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DateConverter
operator|.
name|toCalendar
argument_list|(
literal|"2007-11-09T09:55:36+01:00"
argument_list|)
argument_list|,
name|schem
operator|.
name|getDatePropertyValue
argument_list|(
literal|"acmeemail:Delivery-Date"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|schem
operator|.
name|getAbstractProperty
argument_list|(
operator|(
literal|"acmeemail:From"
operator|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// SaveMetadataHelper.serialize(metadata, true, System.out);
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStructuredRecursive
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|fis
init|=
name|XMPDocumentBuilder
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"structured_recursive.xml"
argument_list|)
decl_stmt|;
name|XMPDocumentBuilder
name|xdb
init|=
operator|new
name|XMPDocumentBuilder
argument_list|()
decl_stmt|;
name|xdb
operator|.
name|parse
argument_list|(
name|fis
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAltBagSeq
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|fis
init|=
name|XMPDocumentBuilder
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"AltBagSeqTest.xml"
argument_list|)
decl_stmt|;
name|XMPDocumentBuilder
name|xdb
init|=
operator|new
name|XMPDocumentBuilder
argument_list|()
decl_stmt|;
name|xdb
operator|.
name|parse
argument_list|(
name|fis
argument_list|)
expr_stmt|;
comment|// XMPMetadata metadata=xdb.parse(fis);
comment|// SaveMetadataHelper.serialize(metadata, true, System.out);
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsartorStyleWithThumbs
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|fis
init|=
name|XMPDocumentBuilder
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"ThumbisartorStyle.xml"
argument_list|)
decl_stmt|;
name|XMPDocumentBuilder
name|xdb
init|=
operator|new
name|XMPDocumentBuilder
argument_list|()
decl_stmt|;
name|XMPMetadata
name|metadata
init|=
name|xdb
operator|.
name|parse
argument_list|(
name|fis
argument_list|)
decl_stmt|;
comment|//<xmpMM:DocumentID>
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"uuid:09C78666-2F91-3A9C-92AF-3691A6D594F7"
argument_list|,
name|metadata
operator|.
name|getXMPMediaManagementSchema
argument_list|()
operator|.
name|getDocumentID
argument_list|()
argument_list|)
expr_stmt|;
comment|//<xmp:CreateDate>
comment|//<xmp:ModifyDate>
comment|//<xmp:MetadataDate>
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DateConverter
operator|.
name|toCalendar
argument_list|(
literal|"2008-01-18T16:59:54+01:00"
argument_list|)
argument_list|,
name|metadata
operator|.
name|getXMPBasicSchema
argument_list|()
operator|.
name|getCreateDate
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DateConverter
operator|.
name|toCalendar
argument_list|(
literal|"2008-01-18T16:59:54+01:00"
argument_list|)
argument_list|,
name|metadata
operator|.
name|getXMPBasicSchema
argument_list|()
operator|.
name|getModifyDate
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DateConverter
operator|.
name|toCalendar
argument_list|(
literal|"2008-01-18T16:59:54+01:00"
argument_list|)
argument_list|,
name|metadata
operator|.
name|getXMPBasicSchema
argument_list|()
operator|.
name|getMetadataDate
argument_list|()
argument_list|)
expr_stmt|;
comment|// THUMBNAILS TEST
name|List
argument_list|<
name|ThumbnailType
argument_list|>
name|thumbs
init|=
name|metadata
operator|.
name|getXMPBasicSchema
argument_list|()
operator|.
name|getThumbnailsProperty
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|thumbs
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|thumbs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ThumbnailType
name|thumb
init|=
name|thumbs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Integer
argument_list|(
literal|162
argument_list|)
argument_list|,
name|thumb
operator|.
name|getHeight
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Integer
argument_list|(
literal|216
argument_list|)
argument_list|,
name|thumb
operator|.
name|getWidth
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"JPEG"
argument_list|,
name|thumb
operator|.
name|getFormat
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/9j/4AAQSkZJRgABAgEASABIAAD"
argument_list|,
name|thumb
operator|.
name|getImage
argument_list|()
argument_list|)
expr_stmt|;
name|thumb
operator|=
name|thumbs
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Integer
argument_list|(
literal|162
argument_list|)
argument_list|,
name|thumb
operator|.
name|getHeight
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Integer
argument_list|(
literal|216
argument_list|)
argument_list|,
name|thumb
operator|.
name|getWidth
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"JPEG"
argument_list|,
name|thumb
operator|.
name|getFormat
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/9j/4AAQSkZJRgABAgEASABIAAD"
argument_list|,
name|thumb
operator|.
name|getImage
argument_list|()
argument_list|)
expr_stmt|;
comment|// PDFA Extension
comment|// Check numbers of schema descriptions
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metadata
operator|.
name|getPDFExtensionSchema
argument_list|()
operator|.
name|getDescriptionSchema
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|SchemaDescription
name|desc
init|=
name|metadata
operator|.
name|getPDFExtensionSchema
argument_list|()
operator|.
name|getDescriptionSchema
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// Check description content
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ACME E-Mail Schema"
argument_list|,
name|desc
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"http://www.acme.com/ns/email/1/"
argument_list|,
name|desc
operator|.
name|getNameSpaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"acmeemail"
argument_list|,
name|desc
operator|.
name|getPrefix
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check property definition
name|List
argument_list|<
name|PDFAPropertyDescription
argument_list|>
name|properties
init|=
name|desc
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|properties
operator|.
name|size
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
comment|// Check properties content
name|PDFAPropertyDescription
name|tmpProp
init|=
name|properties
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Delivery-Date"
argument_list|,
name|tmpProp
operator|.
name|getNameValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Date"
argument_list|,
name|tmpProp
operator|.
name|getValueTypeValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
name|tmpProp
operator|.
name|getCategoryValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"date of email delivery"
argument_list|,
name|tmpProp
operator|.
name|getDescriptionValue
argument_list|()
argument_list|)
expr_stmt|;
name|tmpProp
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"From"
argument_list|,
name|tmpProp
operator|.
name|getNameValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mailaddress"
argument_list|,
name|tmpProp
operator|.
name|getValueTypeValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
name|tmpProp
operator|.
name|getCategoryValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"sender email address"
argument_list|,
name|tmpProp
operator|.
name|getDescriptionValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check valuetype
comment|// Check numbers of valuetype defined
name|Assert
operator|.
name|assertTrue
argument_list|(
name|desc
operator|.
name|getValueTypes
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|PDFAValueTypeDescription
name|tmpValType
init|=
name|desc
operator|.
name|getValueTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mailaddress"
argument_list|,
name|tmpValType
operator|.
name|getTypeNameValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"http://www.acme.com/ns/email/1/mailaddress/"
argument_list|,
name|tmpValType
operator|.
name|getNamespaceURIValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mailaddress value"
argument_list|,
name|tmpValType
operator|.
name|getDescriptionValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check fields associated to this value type
name|Assert
operator|.
name|assertTrue
argument_list|(
name|tmpValType
operator|.
name|getFields
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|PDFAFieldDescription
name|tmpField
init|=
name|tmpValType
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"name"
argument_list|,
name|tmpField
operator|.
name|getNameValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Text"
argument_list|,
name|tmpField
operator|.
name|getValueTypeValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"plaintext name"
argument_list|,
name|tmpField
operator|.
name|getDescriptionValue
argument_list|()
argument_list|)
expr_stmt|;
name|tmpField
operator|=
name|tmpValType
operator|.
name|getFields
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mailto"
argument_list|,
name|tmpField
operator|.
name|getNameValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Text"
argument_list|,
name|tmpField
operator|.
name|getValueTypeValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"email address"
argument_list|,
name|tmpField
operator|.
name|getDescriptionValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check PDFA Conformance schema
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|metadata
operator|.
name|getPDFIdentificationSchema
argument_list|()
operator|.
name|getPartProperty
argument_list|()
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"B"
argument_list|,
name|metadata
operator|.
name|getPDFIdentificationSchema
argument_list|()
operator|.
name|getConformance
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1:2005"
argument_list|,
name|metadata
operator|.
name|getPDFIdentificationSchema
argument_list|()
operator|.
name|getAmd
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check ADOBE PDF Schema
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"PDFlib Personalization Server 7.0.2p5 (Win32)"
argument_list|,
name|metadata
operator|.
name|getAdobePDFSchema
argument_list|()
operator|.
name|getProducer
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check Defined Schema
name|XMPSchema
name|schem
init|=
name|metadata
operator|.
name|getSchema
argument_list|(
literal|"http://www.acme.com/ns/email/1/"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DateConverter
operator|.
name|toCalendar
argument_list|(
literal|"2007-11-09T09:55:36+01:00"
argument_list|)
argument_list|,
name|schem
operator|.
name|getDatePropertyValue
argument_list|(
literal|"acmeemail:Delivery-Date"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|schem
operator|.
name|getAbstractProperty
argument_list|(
operator|(
literal|"acmeemail:From"
operator|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// SaveMetadataHelper.serialize(metadata, true, System.out);
block|}
block|}
end_class

end_unit

