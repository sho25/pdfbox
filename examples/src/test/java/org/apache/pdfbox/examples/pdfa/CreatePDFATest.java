begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2015 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|examples
operator|.
name|pdfa
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|examples
operator|.
name|pdmodel
operator|.
name|CreatePDFA
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDDocumentCatalog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|PDMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|PreflightDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|ValidationResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|ValidationResult
operator|.
name|ValidationError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|preflight
operator|.
name|parser
operator|.
name|PreflightParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|XMPMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|DublinCoreSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|xml
operator|.
name|DomXmpParser
import|;
end_import

begin_comment
comment|/**  *  * @author Tilman Hausherr  */
end_comment

begin_class
specifier|public
class|class
name|CreatePDFATest
extends|extends
name|TestCase
block|{
specifier|private
specifier|final
name|String
name|outDir
init|=
literal|"target/test-output"
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
operator|new
name|File
argument_list|(
name|outDir
argument_list|)
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
comment|/**      * Test of doIt method of class CreatePDFA.      */
specifier|public
name|void
name|testCreatePDFA
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"testCreatePDFA"
argument_list|)
expr_stmt|;
name|String
name|pdfaFilename
init|=
name|outDir
operator|+
literal|"/PDFA.pdf"
decl_stmt|;
name|String
name|message
init|=
literal|"The quick brown fox jumps over the lazy dog äöüÄÖÜß @°^²³ {[]}"
decl_stmt|;
name|String
name|dir
init|=
literal|"../pdfbox/src/main/resources/org/apache/pdfbox/resources/ttf/"
decl_stmt|;
name|String
name|fontfile
init|=
name|dir
operator|+
literal|"LiberationSans-Regular.ttf"
decl_stmt|;
name|CreatePDFA
operator|.
name|main
argument_list|(
operator|new
name|String
index|[]
block|{
name|pdfaFilename
block|,
name|message
block|,
name|fontfile
block|}
argument_list|)
expr_stmt|;
name|PreflightParser
name|preflightParser
init|=
operator|new
name|PreflightParser
argument_list|(
operator|new
name|File
argument_list|(
name|pdfaFilename
argument_list|)
argument_list|)
decl_stmt|;
name|preflightParser
operator|.
name|parse
argument_list|()
expr_stmt|;
name|PreflightDocument
name|preflightDocument
init|=
name|preflightParser
operator|.
name|getPreflightDocument
argument_list|()
decl_stmt|;
name|preflightDocument
operator|.
name|validate
argument_list|()
expr_stmt|;
name|ValidationResult
name|result
init|=
name|preflightDocument
operator|.
name|getResult
argument_list|()
decl_stmt|;
for|for
control|(
name|ValidationError
name|ve
range|:
name|result
operator|.
name|getErrorsList
argument_list|()
control|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|ve
operator|.
name|getErrorCode
argument_list|()
operator|+
literal|": "
operator|+
name|ve
operator|.
name|getDetails
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
literal|"PDF file created with CreatePDFA is not valid PDF/A-1b"
argument_list|,
name|result
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|preflightDocument
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// check the XMP metadata
name|PDDocument
name|document
init|=
name|PDDocument
operator|.
name|load
argument_list|(
operator|new
name|File
argument_list|(
name|pdfaFilename
argument_list|)
argument_list|)
decl_stmt|;
name|PDDocumentCatalog
name|catalog
init|=
name|document
operator|.
name|getDocumentCatalog
argument_list|()
decl_stmt|;
name|PDMetadata
name|meta
init|=
name|catalog
operator|.
name|getMetadata
argument_list|()
decl_stmt|;
name|DomXmpParser
name|xmpParser
init|=
operator|new
name|DomXmpParser
argument_list|()
decl_stmt|;
name|XMPMetadata
name|metadata
init|=
name|xmpParser
operator|.
name|parse
argument_list|(
name|meta
operator|.
name|createInputStream
argument_list|()
argument_list|)
decl_stmt|;
name|DublinCoreSchema
name|dc
init|=
name|metadata
operator|.
name|getDublinCoreSchema
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|pdfaFilename
argument_list|,
name|dc
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|document
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

