begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2016 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|examples
operator|.
name|pdmodel
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDPage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDPageContentStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|PDRectangle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDColor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDColorSpace
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDDeviceRGB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDPattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|pattern
operator|.
name|PDTilingPattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|Charsets
import|;
end_import

begin_comment
comment|/**  * This is an example of how to create a page that uses patterns to paint areas.  *  * @author Tilman Hausherr  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|CreatePatternsPDF
block|{
specifier|private
name|CreatePatternsPDF
parameter_list|()
block|{     }
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|IOException
block|{
try|try
init|(
name|PDDocument
name|doc
init|=
operator|new
name|PDDocument
argument_list|()
init|)
block|{
name|PDPage
name|page
init|=
operator|new
name|PDPage
argument_list|()
decl_stmt|;
name|doc
operator|.
name|addPage
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|page
operator|.
name|setResources
argument_list|(
operator|new
name|PDResources
argument_list|()
argument_list|)
expr_stmt|;
comment|// Colored pattern, i.e. the pattern content stream will set its own color(s)
try|try
init|(
name|PDPageContentStream
name|pcs
init|=
operator|new
name|PDPageContentStream
argument_list|(
name|doc
argument_list|,
name|page
argument_list|)
init|)
block|{
comment|// Colored pattern, i.e. the pattern content stream will set its own color(s)
name|PDColorSpace
name|patternCS1
init|=
operator|new
name|PDPattern
argument_list|(
literal|null
argument_list|,
name|PDDeviceRGB
operator|.
name|INSTANCE
argument_list|)
decl_stmt|;
comment|// Table 75 spec
name|PDTilingPattern
name|tilingPattern1
init|=
operator|new
name|PDTilingPattern
argument_list|()
decl_stmt|;
name|tilingPattern1
operator|.
name|setBBox
argument_list|(
operator|new
name|PDRectangle
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tilingPattern1
operator|.
name|setPaintType
argument_list|(
name|PDTilingPattern
operator|.
name|PAINT_COLORED
argument_list|)
expr_stmt|;
name|tilingPattern1
operator|.
name|setTilingType
argument_list|(
name|PDTilingPattern
operator|.
name|TILING_CONSTANT_SPACING
argument_list|)
expr_stmt|;
name|tilingPattern1
operator|.
name|setXStep
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|tilingPattern1
operator|.
name|setYStep
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|COSName
name|patternName1
init|=
name|page
operator|.
name|getResources
argument_list|()
operator|.
name|add
argument_list|(
name|tilingPattern1
argument_list|)
decl_stmt|;
comment|//TODO
comment|// there's no way to create something like a PDPageContentStream,
comment|// so we'll do it the hard way
try|try
init|(
name|OutputStream
name|os1
init|=
name|tilingPattern1
operator|.
name|getContentStream
argument_list|()
operator|.
name|createOutputStream
argument_list|()
init|)
block|{
comment|// Set color, draw diagonal line + 2 more diagonals so that corners look good
name|os1
operator|.
name|write
argument_list|(
literal|"1 0 0 RG 0 0 m 10 10 l -1 9 m 1 11 l 9 -1 m 11 1 l s"
operator|.
name|getBytes
argument_list|(
name|Charsets
operator|.
name|US_ASCII
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|PDColor
name|patternColor1
init|=
operator|new
name|PDColor
argument_list|(
name|patternName1
argument_list|,
name|patternCS1
argument_list|)
decl_stmt|;
name|pcs
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|500
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|pcs
operator|.
name|setNonStrokingColor
argument_list|(
name|patternColor1
argument_list|)
expr_stmt|;
name|pcs
operator|.
name|fill
argument_list|()
expr_stmt|;
comment|// Uncolored pattern - the color is passed later
name|PDTilingPattern
name|tilingPattern2
init|=
operator|new
name|PDTilingPattern
argument_list|()
decl_stmt|;
name|tilingPattern2
operator|.
name|setBBox
argument_list|(
operator|new
name|PDRectangle
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tilingPattern2
operator|.
name|setPaintType
argument_list|(
name|PDTilingPattern
operator|.
name|PAINT_UNCOLORED
argument_list|)
expr_stmt|;
name|tilingPattern2
operator|.
name|setTilingType
argument_list|(
name|PDTilingPattern
operator|.
name|TILING_NO_DISTORTION
argument_list|)
expr_stmt|;
name|tilingPattern2
operator|.
name|setXStep
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|tilingPattern2
operator|.
name|setYStep
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|COSName
name|patternName2
init|=
name|page
operator|.
name|getResources
argument_list|()
operator|.
name|add
argument_list|(
name|tilingPattern2
argument_list|)
decl_stmt|;
try|try
init|(
name|OutputStream
name|os2
init|=
name|tilingPattern2
operator|.
name|getContentStream
argument_list|()
operator|.
name|createOutputStream
argument_list|()
init|)
block|{
comment|// draw a cross
name|os2
operator|.
name|write
argument_list|(
literal|"0 5 m 10 5 l 5 0 m 5 10 l s"
operator|.
name|getBytes
argument_list|(
name|Charsets
operator|.
name|US_ASCII
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Uncolored pattern colorspace needs to know the colorspace
comment|// for the color values that will be passed when painting the fill
name|PDColorSpace
name|patternCS2
init|=
operator|new
name|PDPattern
argument_list|(
literal|null
argument_list|,
name|PDDeviceRGB
operator|.
name|INSTANCE
argument_list|)
decl_stmt|;
name|PDColor
name|patternColor2green
init|=
operator|new
name|PDColor
argument_list|(
operator|new
name|float
index|[]
block|{
literal|0
block|,
literal|1
block|,
literal|0
block|}
argument_list|,
name|patternName2
argument_list|,
name|patternCS2
argument_list|)
decl_stmt|;
name|pcs
operator|.
name|addRect
argument_list|(
literal|300
argument_list|,
literal|500
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|pcs
operator|.
name|setNonStrokingColor
argument_list|(
name|patternColor2green
argument_list|)
expr_stmt|;
name|pcs
operator|.
name|fill
argument_list|()
expr_stmt|;
comment|// same pattern again but with different color + different pattern start position
name|PDColor
name|patternColor2blue
init|=
operator|new
name|PDColor
argument_list|(
operator|new
name|float
index|[]
block|{
literal|0
block|,
literal|0
block|,
literal|1
block|}
argument_list|,
name|patternName2
argument_list|,
name|patternCS2
argument_list|)
decl_stmt|;
name|pcs
operator|.
name|addRect
argument_list|(
literal|455
argument_list|,
literal|505
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|pcs
operator|.
name|setNonStrokingColor
argument_list|(
name|patternColor2blue
argument_list|)
expr_stmt|;
name|pcs
operator|.
name|fill
argument_list|()
expr_stmt|;
block|}
name|doc
operator|.
name|save
argument_list|(
literal|"patterns.pdf"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

