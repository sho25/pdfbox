begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|examples
operator|.
name|interactive
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDPage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|PDRectangle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|font
operator|.
name|PDFont
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|font
operator|.
name|PDType1Font
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDColor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDDeviceRGB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|annotation
operator|.
name|PDAnnotationWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|annotation
operator|.
name|PDAppearanceCharacteristicsDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|form
operator|.
name|PDAcroForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|form
operator|.
name|PDTextField
import|;
end_import

begin_comment
comment|/**  * An example of creating an AcroForm and a form field from scratch, with two widgets for one field:  * This means that the same field is visible on two separate pages, but can be on different  * positions and different size and colors. Changing the value on one page will also change it on  * the other page.  *  * The form field is created with properties similar to creating a form with default settings in  * Adobe Acrobat.  *  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|CreateMultiWidgetsForm
block|{
specifier|private
name|CreateMultiWidgetsForm
parameter_list|()
block|{     }
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|IOException
block|{
comment|// Create a new document with 2 empty pages.
try|try
init|(
name|PDDocument
name|document
init|=
operator|new
name|PDDocument
argument_list|()
init|)
block|{
name|PDPage
name|page1
init|=
operator|new
name|PDPage
argument_list|(
name|PDRectangle
operator|.
name|A4
argument_list|)
decl_stmt|;
name|document
operator|.
name|addPage
argument_list|(
name|page1
argument_list|)
expr_stmt|;
name|PDPage
name|page2
init|=
operator|new
name|PDPage
argument_list|(
name|PDRectangle
operator|.
name|A4
argument_list|)
decl_stmt|;
name|document
operator|.
name|addPage
argument_list|(
name|page2
argument_list|)
expr_stmt|;
comment|// Adobe Acrobat uses Helvetica as a default font and
comment|// stores that under the name '/Helv' in the resources dictionary
name|PDFont
name|font
init|=
name|PDType1Font
operator|.
name|HELVETICA
decl_stmt|;
name|PDResources
name|resources
init|=
operator|new
name|PDResources
argument_list|()
decl_stmt|;
name|resources
operator|.
name|put
argument_list|(
name|COSName
operator|.
name|getPDFName
argument_list|(
literal|"Helv"
argument_list|)
argument_list|,
name|font
argument_list|)
expr_stmt|;
comment|// Add a new AcroForm and add that to the document
name|PDAcroForm
name|acroForm
init|=
operator|new
name|PDAcroForm
argument_list|(
name|document
argument_list|)
decl_stmt|;
name|document
operator|.
name|getDocumentCatalog
argument_list|()
operator|.
name|setAcroForm
argument_list|(
name|acroForm
argument_list|)
expr_stmt|;
comment|// Add and set the resources and default appearance at the form level
name|acroForm
operator|.
name|setDefaultResources
argument_list|(
name|resources
argument_list|)
expr_stmt|;
comment|// Acrobat sets the font size on the form level to be
comment|// auto sized as default. This is done by setting the font size to '0'
name|String
name|defaultAppearanceString
init|=
literal|"/Helv 0 Tf 0 g"
decl_stmt|;
name|acroForm
operator|.
name|setDefaultAppearance
argument_list|(
name|defaultAppearanceString
argument_list|)
expr_stmt|;
comment|// Add a form field to the form.
name|PDTextField
name|textBox
init|=
operator|new
name|PDTextField
argument_list|(
name|acroForm
argument_list|)
decl_stmt|;
name|textBox
operator|.
name|setPartialName
argument_list|(
literal|"SampleField"
argument_list|)
expr_stmt|;
comment|// Acrobat sets the font size to 12 as default
comment|// This is done by setting the font size to '12' on the
comment|// field level.
comment|// The text color is set to blue in this example.
comment|// To use black, replace "0 0 1 rg" with "0 0 0 rg" or "0 g".
name|defaultAppearanceString
operator|=
literal|"/Helv 12 Tf 0 0 1 rg"
expr_stmt|;
name|textBox
operator|.
name|setDefaultAppearance
argument_list|(
name|defaultAppearanceString
argument_list|)
expr_stmt|;
comment|// add the field to the AcroForm
name|acroForm
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
name|textBox
argument_list|)
expr_stmt|;
comment|// Specify 1st annotation associated with the field
name|PDAnnotationWidget
name|widget1
init|=
operator|new
name|PDAnnotationWidget
argument_list|()
decl_stmt|;
name|PDRectangle
name|rect
init|=
operator|new
name|PDRectangle
argument_list|(
literal|50
argument_list|,
literal|750
argument_list|,
literal|250
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|widget1
operator|.
name|setRectangle
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setPage
argument_list|(
name|page1
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setParent
argument_list|(
name|textBox
argument_list|)
expr_stmt|;
comment|// Specify 2nd annotation associated with the field
name|PDAnnotationWidget
name|widget2
init|=
operator|new
name|PDAnnotationWidget
argument_list|()
decl_stmt|;
name|PDRectangle
name|rect2
init|=
operator|new
name|PDRectangle
argument_list|(
literal|200
argument_list|,
literal|650
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|widget2
operator|.
name|setRectangle
argument_list|(
name|rect2
argument_list|)
expr_stmt|;
name|widget2
operator|.
name|setPage
argument_list|(
name|page2
argument_list|)
expr_stmt|;
name|widget2
operator|.
name|setParent
argument_list|(
name|textBox
argument_list|)
expr_stmt|;
comment|// set green border and yellow background for 1st widget
comment|// if you prefer defaults, just delete this code block
name|PDAppearanceCharacteristicsDictionary
name|fieldAppearance1
init|=
operator|new
name|PDAppearanceCharacteristicsDictionary
argument_list|(
operator|new
name|COSDictionary
argument_list|()
argument_list|)
decl_stmt|;
name|fieldAppearance1
operator|.
name|setBorderColour
argument_list|(
operator|new
name|PDColor
argument_list|(
operator|new
name|float
index|[]
block|{
literal|0
block|,
literal|1
block|,
literal|0
block|}
argument_list|,
name|PDDeviceRGB
operator|.
name|INSTANCE
argument_list|)
argument_list|)
expr_stmt|;
name|fieldAppearance1
operator|.
name|setBackground
argument_list|(
operator|new
name|PDColor
argument_list|(
operator|new
name|float
index|[]
block|{
literal|1
block|,
literal|1
block|,
literal|0
block|}
argument_list|,
name|PDDeviceRGB
operator|.
name|INSTANCE
argument_list|)
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setAppearanceCharacteristics
argument_list|(
name|fieldAppearance1
argument_list|)
expr_stmt|;
comment|// set red border and green background for 2nd widget
comment|// if you prefer defaults, just delete this code block
name|PDAppearanceCharacteristicsDictionary
name|fieldAppearance2
init|=
operator|new
name|PDAppearanceCharacteristicsDictionary
argument_list|(
operator|new
name|COSDictionary
argument_list|()
argument_list|)
decl_stmt|;
name|fieldAppearance2
operator|.
name|setBorderColour
argument_list|(
operator|new
name|PDColor
argument_list|(
operator|new
name|float
index|[]
block|{
literal|1
block|,
literal|0
block|,
literal|0
block|}
argument_list|,
name|PDDeviceRGB
operator|.
name|INSTANCE
argument_list|)
argument_list|)
expr_stmt|;
name|fieldAppearance2
operator|.
name|setBackground
argument_list|(
operator|new
name|PDColor
argument_list|(
operator|new
name|float
index|[]
block|{
literal|0
block|,
literal|1
block|,
literal|0
block|}
argument_list|,
name|PDDeviceRGB
operator|.
name|INSTANCE
argument_list|)
argument_list|)
expr_stmt|;
name|widget2
operator|.
name|setAppearanceCharacteristics
argument_list|(
name|fieldAppearance2
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|PDAnnotationWidget
argument_list|>
name|widgets
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|widget1
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|widget2
argument_list|)
expr_stmt|;
name|textBox
operator|.
name|setWidgets
argument_list|(
name|widgets
argument_list|)
expr_stmt|;
comment|// make sure the annotations are visible on screen and paper
name|widget1
operator|.
name|setPrinted
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|widget2
operator|.
name|setPrinted
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Add the annotations to the pages
name|page1
operator|.
name|getAnnotations
argument_list|()
operator|.
name|add
argument_list|(
name|widget1
argument_list|)
expr_stmt|;
name|page2
operator|.
name|getAnnotations
argument_list|()
operator|.
name|add
argument_list|(
name|widget2
argument_list|)
expr_stmt|;
comment|// set the field value
name|textBox
operator|.
name|setValue
argument_list|(
literal|"Sample field"
argument_list|)
expr_stmt|;
name|document
operator|.
name|save
argument_list|(
literal|"MultiWidgetsForm.pdf"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

