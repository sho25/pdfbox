begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2016 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|examples
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|io
operator|.
name|MemoryUsageSetting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|multipdf
operator|.
name|PDFMergerUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDDocumentInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|PDMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|XMPMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|DublinCoreSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|PDFAIdentificationSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|schema
operator|.
name|XMPBasicSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|type
operator|.
name|BadFieldValueException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmpbox
operator|.
name|xml
operator|.
name|XmpSerializer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_comment
comment|/**  *  * This example demonstrates the use of the new methods {@link PDFMergerUtility#setDestinationDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation)  * } and {@link PDFMergerUtility#setDestinationMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)  * } that were added in April 2016. These allow to control the meta data in a merge without having  * to reopen the result file.  *  * @author Alexander Kriegisch  */
end_comment

begin_class
specifier|public
class|class
name|PDFMergerExample
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|PDFMergerExample
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**      * Creates a compound PDF document from a list of input documents.      *<p>      * The merged document is PDF/A-1b compliant, provided the source documents are as well. It      * contains document properties title, creator and subject, currently hard-coded.      *      * @param sources list of source PDF document streams.      * @return compound PDF document as a readable input stream.      * @throws IOException if anything goes wrong during PDF merge.      */
specifier|public
name|InputStream
name|merge
parameter_list|(
specifier|final
name|List
argument_list|<
name|InputStream
argument_list|>
name|sources
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|title
init|=
literal|"My title"
decl_stmt|;
name|String
name|creator
init|=
literal|"Alexander Kriegisch"
decl_stmt|;
name|String
name|subject
init|=
literal|"Subject with umlauts ÄÖÜ"
decl_stmt|;
name|ByteArrayOutputStream
name|mergedPDFOutputStream
init|=
literal|null
decl_stmt|;
name|COSStream
name|cosStream
init|=
literal|null
decl_stmt|;
try|try
block|{
comment|// If you're merging in a servlet, you can modify this example to use the outputStream only
comment|// as the response as shown here: http://stackoverflow.com/a/36894346/535646
name|mergedPDFOutputStream
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|cosStream
operator|=
operator|new
name|COSStream
argument_list|()
expr_stmt|;
name|PDFMergerUtility
name|pdfMerger
init|=
name|createPDFMergerUtility
argument_list|(
name|sources
argument_list|,
name|mergedPDFOutputStream
argument_list|)
decl_stmt|;
comment|// PDF and XMP properties must be identical, otherwise document is not PDF/A compliant
name|PDDocumentInformation
name|pdfDocumentInfo
init|=
name|createPDFDocumentInfo
argument_list|(
name|title
argument_list|,
name|creator
argument_list|,
name|subject
argument_list|)
decl_stmt|;
name|PDMetadata
name|xmpMetadata
init|=
name|createXMPMetadata
argument_list|(
name|cosStream
argument_list|,
name|title
argument_list|,
name|creator
argument_list|,
name|subject
argument_list|)
decl_stmt|;
name|pdfMerger
operator|.
name|setDestinationDocumentInformation
argument_list|(
name|pdfDocumentInfo
argument_list|)
expr_stmt|;
name|pdfMerger
operator|.
name|setDestinationMetadata
argument_list|(
name|xmpMetadata
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Merging "
operator|+
name|sources
operator|.
name|size
argument_list|()
operator|+
literal|" source documents into one PDF"
argument_list|)
expr_stmt|;
name|pdfMerger
operator|.
name|mergeDocuments
argument_list|(
name|MemoryUsageSetting
operator|.
name|setupMainMemoryOnly
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"PDF merge successful, size = {"
operator|+
name|mergedPDFOutputStream
operator|.
name|size
argument_list|()
operator|+
literal|"} bytes"
argument_list|)
expr_stmt|;
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|mergedPDFOutputStream
operator|.
name|toByteArray
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|BadFieldValueException
decl||
name|TransformerException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"PDF merge problem"
argument_list|,
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
for|for
control|(
name|InputStream
name|source
range|:
name|sources
control|)
block|{
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|cosStream
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|mergedPDFOutputStream
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|PDFMergerUtility
name|createPDFMergerUtility
parameter_list|(
name|List
argument_list|<
name|InputStream
argument_list|>
name|sources
parameter_list|,
name|ByteArrayOutputStream
name|mergedPDFOutputStream
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Initialising PDF merge utility"
argument_list|)
expr_stmt|;
name|PDFMergerUtility
name|pdfMerger
init|=
operator|new
name|PDFMergerUtility
argument_list|()
decl_stmt|;
name|pdfMerger
operator|.
name|addSources
argument_list|(
name|sources
argument_list|)
expr_stmt|;
name|pdfMerger
operator|.
name|setDestinationStream
argument_list|(
name|mergedPDFOutputStream
argument_list|)
expr_stmt|;
return|return
name|pdfMerger
return|;
block|}
specifier|private
name|PDDocumentInformation
name|createPDFDocumentInfo
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|creator
parameter_list|,
name|String
name|subject
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Setting document info (title, author, subject) for merged PDF"
argument_list|)
expr_stmt|;
name|PDDocumentInformation
name|documentInformation
init|=
operator|new
name|PDDocumentInformation
argument_list|()
decl_stmt|;
name|documentInformation
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|documentInformation
operator|.
name|setCreator
argument_list|(
name|creator
argument_list|)
expr_stmt|;
name|documentInformation
operator|.
name|setSubject
argument_list|(
name|subject
argument_list|)
expr_stmt|;
return|return
name|documentInformation
return|;
block|}
specifier|private
name|PDMetadata
name|createXMPMetadata
parameter_list|(
name|COSStream
name|cosStream
parameter_list|,
name|String
name|title
parameter_list|,
name|String
name|creator
parameter_list|,
name|String
name|subject
parameter_list|)
throws|throws
name|BadFieldValueException
throws|,
name|TransformerException
throws|,
name|IOException
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Setting XMP metadata (title, author, subject) for merged PDF"
argument_list|)
expr_stmt|;
name|XMPMetadata
name|xmpMetadata
init|=
name|XMPMetadata
operator|.
name|createXMPMetadata
argument_list|()
decl_stmt|;
comment|// PDF/A-1b properties
name|PDFAIdentificationSchema
name|pdfaSchema
init|=
name|xmpMetadata
operator|.
name|createAndAddPFAIdentificationSchema
argument_list|()
decl_stmt|;
name|pdfaSchema
operator|.
name|setPart
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|pdfaSchema
operator|.
name|setConformance
argument_list|(
literal|"B"
argument_list|)
expr_stmt|;
comment|// Dublin Core properties
name|DublinCoreSchema
name|dublinCoreSchema
init|=
name|xmpMetadata
operator|.
name|createAndAddDublinCoreSchema
argument_list|()
decl_stmt|;
name|dublinCoreSchema
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|dublinCoreSchema
operator|.
name|addCreator
argument_list|(
name|creator
argument_list|)
expr_stmt|;
name|dublinCoreSchema
operator|.
name|setDescription
argument_list|(
name|subject
argument_list|)
expr_stmt|;
comment|// XMP Basic properties
name|XMPBasicSchema
name|basicSchema
init|=
name|xmpMetadata
operator|.
name|createAndAddXMPBasicSchema
argument_list|()
decl_stmt|;
name|Calendar
name|creationDate
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|basicSchema
operator|.
name|setCreateDate
argument_list|(
name|creationDate
argument_list|)
expr_stmt|;
name|basicSchema
operator|.
name|setModifyDate
argument_list|(
name|creationDate
argument_list|)
expr_stmt|;
name|basicSchema
operator|.
name|setMetadataDate
argument_list|(
name|creationDate
argument_list|)
expr_stmt|;
name|basicSchema
operator|.
name|setCreatorTool
argument_list|(
name|creator
argument_list|)
expr_stmt|;
comment|// Create and return XMP data structure in XML format
name|ByteArrayOutputStream
name|xmpOutputStream
init|=
literal|null
decl_stmt|;
name|OutputStream
name|cosXMPStream
init|=
literal|null
decl_stmt|;
try|try
block|{
name|xmpOutputStream
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|cosXMPStream
operator|=
name|cosStream
operator|.
name|createOutputStream
argument_list|()
expr_stmt|;
operator|new
name|XmpSerializer
argument_list|()
operator|.
name|serialize
argument_list|(
name|xmpMetadata
argument_list|,
name|xmpOutputStream
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cosXMPStream
operator|.
name|write
argument_list|(
name|xmpOutputStream
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|new
name|PDMetadata
argument_list|(
name|cosStream
argument_list|)
return|;
block|}
finally|finally
block|{
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|xmpOutputStream
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|cosXMPStream
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

