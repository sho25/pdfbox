begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2017 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|examples
operator|.
name|pdmodel
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDPage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDPageContentStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDPageContentStream
operator|.
name|AppendMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|PDRectangle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|font
operator|.
name|PDFont
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|font
operator|.
name|PDType0Font
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|Matrix
import|;
end_import

begin_comment
comment|/**  * This example shows how to justify a string using the showTextWithPositioning method. First only  * spaces are adjusted, and then every letter.  *  * @author Dan Fickling  */
end_comment

begin_class
specifier|public
class|class
name|ShowTextWithPositioning
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|doIt
argument_list|(
literal|"Hello World, this is a test!"
argument_list|,
literal|"justify-example.pdf"
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|doIt
parameter_list|(
name|String
name|message
parameter_list|,
name|String
name|outfile
parameter_list|)
throws|throws
name|Exception
block|{
comment|// the document
try|try
init|(
name|PDDocument
name|doc
init|=
operator|new
name|PDDocument
argument_list|()
init|;
name|InputStream
name|is
operator|=
name|PDDocument
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/org/apache/pdfbox/resources/ttf/LiberationSans-Regular.ttf"
argument_list|)
init|)
block|{
specifier|final
name|float
name|FONT_SIZE
init|=
literal|20.0f
decl_stmt|;
comment|// Page 1
name|PDFont
name|font
init|=
name|PDType0Font
operator|.
name|load
argument_list|(
name|doc
argument_list|,
name|is
argument_list|,
literal|true
argument_list|)
decl_stmt|;
comment|//PDFont font = PDType1Font.COURIER;
name|PDPage
name|page
init|=
operator|new
name|PDPage
argument_list|(
name|PDRectangle
operator|.
name|A4
argument_list|)
decl_stmt|;
name|doc
operator|.
name|addPage
argument_list|(
name|page
argument_list|)
expr_stmt|;
comment|// Get the non-justified string width in text space units.
name|float
name|stringWidth
init|=
name|font
operator|.
name|getStringWidth
argument_list|(
name|message
argument_list|)
operator|*
name|FONT_SIZE
decl_stmt|;
comment|// Get the string height in text space units.
name|float
name|stringHeight
init|=
name|font
operator|.
name|getFontDescriptor
argument_list|()
operator|.
name|getFontBoundingBox
argument_list|()
operator|.
name|getHeight
argument_list|()
operator|*
name|FONT_SIZE
decl_stmt|;
comment|// Get the width we have to justify in.
name|PDRectangle
name|pageSize
init|=
name|page
operator|.
name|getMediaBox
argument_list|()
decl_stmt|;
try|try
init|(
name|PDPageContentStream
name|contentStream
init|=
operator|new
name|PDPageContentStream
argument_list|(
name|doc
argument_list|,
name|page
argument_list|,
name|AppendMode
operator|.
name|OVERWRITE
argument_list|,
literal|false
argument_list|)
init|)
block|{
name|contentStream
operator|.
name|beginText
argument_list|()
expr_stmt|;
name|contentStream
operator|.
name|setFont
argument_list|(
name|font
argument_list|,
name|FONT_SIZE
argument_list|)
expr_stmt|;
comment|// Start at top of page.
name|contentStream
operator|.
name|setTextMatrix
argument_list|(
name|Matrix
operator|.
name|getTranslateInstance
argument_list|(
literal|0
argument_list|,
name|pageSize
operator|.
name|getHeight
argument_list|()
operator|-
name|stringHeight
operator|/
literal|1000f
argument_list|)
argument_list|)
expr_stmt|;
comment|// First show non-justified.
name|contentStream
operator|.
name|showText
argument_list|(
name|message
argument_list|)
expr_stmt|;
comment|// Move to next line.
name|contentStream
operator|.
name|setTextMatrix
argument_list|(
name|Matrix
operator|.
name|getTranslateInstance
argument_list|(
literal|0
argument_list|,
name|pageSize
operator|.
name|getHeight
argument_list|()
operator|-
operator|(
operator|(
name|stringHeight
operator|/
literal|1000f
operator|)
operator|*
literal|2
operator|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now show word justified.
comment|// The space we have to make up, in text space units.
name|float
name|justifyWidth
init|=
operator|(
operator|(
name|pageSize
operator|.
name|getWidth
argument_list|()
operator|*
literal|1000f
operator|)
operator|-
operator|(
name|stringWidth
operator|)
operator|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|text
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|String
index|[]
name|parts
init|=
name|message
operator|.
name|split
argument_list|(
literal|"\\s"
argument_list|)
decl_stmt|;
name|float
name|spaceWidth
init|=
operator|(
name|justifyWidth
operator|/
operator|(
name|parts
operator|.
name|length
operator|-
literal|1
operator|)
operator|)
operator|/
name|FONT_SIZE
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|parts
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|!=
literal|0
condition|)
block|{
name|text
operator|.
name|add
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
comment|// Positive values move to the left, negative to the right.
name|text
operator|.
name|add
argument_list|(
operator|-
name|spaceWidth
argument_list|)
expr_stmt|;
block|}
name|text
operator|.
name|add
argument_list|(
name|parts
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|contentStream
operator|.
name|showTextWithPositioning
argument_list|(
name|text
operator|.
name|toArray
argument_list|()
argument_list|)
expr_stmt|;
name|contentStream
operator|.
name|setTextMatrix
argument_list|(
name|Matrix
operator|.
name|getTranslateInstance
argument_list|(
literal|0
argument_list|,
name|pageSize
operator|.
name|getHeight
argument_list|()
operator|-
operator|(
operator|(
name|stringHeight
operator|/
literal|1000f
operator|)
operator|*
literal|3
operator|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now show letter justified.
name|text
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|justifyWidth
operator|=
operator|(
operator|(
name|pageSize
operator|.
name|getWidth
argument_list|()
operator|*
literal|1000f
operator|)
operator|-
name|stringWidth
operator|)
expr_stmt|;
name|float
name|extraLetterWidth
init|=
operator|(
name|justifyWidth
operator|/
operator|(
name|message
operator|.
name|codePointCount
argument_list|(
literal|0
argument_list|,
name|message
operator|.
name|length
argument_list|()
argument_list|)
operator|-
literal|1
operator|)
operator|)
operator|/
name|FONT_SIZE
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|message
operator|.
name|length
argument_list|()
condition|;
control|)
block|{
if|if
condition|(
name|i
operator|!=
literal|0
condition|)
block|{
name|text
operator|.
name|add
argument_list|(
operator|-
name|extraLetterWidth
argument_list|)
expr_stmt|;
block|}
name|text
operator|.
name|add
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|Character
operator|.
name|toChars
argument_list|(
name|message
operator|.
name|codePointAt
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|i
operator|+=
name|Character
operator|.
name|charCount
argument_list|(
name|message
operator|.
name|codePointAt
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|contentStream
operator|.
name|showTextWithPositioning
argument_list|(
name|text
operator|.
name|toArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// Finish up.
name|contentStream
operator|.
name|endText
argument_list|()
expr_stmt|;
block|}
name|doc
operator|.
name|save
argument_list|(
name|outfile
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

