begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2015 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|examples
operator|.
name|signature
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|digitalsignature
operator|.
name|SignatureInterface
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|CreateSignedTimestampBase
implements|implements
name|SignatureInterface
block|{
specifier|private
name|TSAClient
name|tsaClient
decl_stmt|;
specifier|public
name|void
name|setTsaClient
parameter_list|(
name|TSAClient
name|tsaClient
parameter_list|)
block|{
name|this
operator|.
name|tsaClient
operator|=
name|tsaClient
expr_stmt|;
block|}
specifier|public
name|TSAClient
name|getTsaClient
parameter_list|()
block|{
return|return
name|tsaClient
return|;
block|}
comment|/**      * SignatureInterface implementation.      *      * This method will be called from inside of the pdfbox and create the PKCS #7 signature. The given InputStream      * contains the bytes that are given by the byte range.      *      * This method is for internal use only.      *      * Use your favorite cryptographic library to implement PKCS #7 signature creation.      *      * @throws IOException      */
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|sign
parameter_list|(
name|InputStream
name|content
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|getTsaClient
argument_list|()
operator|.
name|getTimeStampToken
argument_list|(
name|IOUtils
operator|.
name|toByteArray
argument_list|(
name|content
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

