begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|debugger
operator|.
name|ui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Frame
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Rectangle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Toolkit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|prefs
operator|.
name|Preferences
import|;
end_import

begin_comment
comment|/**  * A class to save windows position and size in preference using java Preference API.  *  * @author Tilman Hausherr  */
end_comment

begin_class
specifier|public
class|class
name|WindowPrefs
block|{
specifier|private
specifier|static
specifier|final
name|String
name|KEY
init|=
literal|"window_prefs_"
decl_stmt|;
specifier|private
specifier|final
name|Preferences
name|pref
decl_stmt|;
specifier|public
name|WindowPrefs
parameter_list|(
name|Class
name|className
parameter_list|)
block|{
name|this
operator|.
name|pref
operator|=
name|Preferences
operator|.
name|userNodeForPackage
argument_list|(
name|className
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBounds
parameter_list|(
name|Rectangle
name|rect
parameter_list|)
block|{
name|Preferences
name|node
init|=
name|pref
operator|.
name|node
argument_list|(
name|KEY
argument_list|)
decl_stmt|;
name|node
operator|.
name|putInt
argument_list|(
literal|"X"
argument_list|,
name|rect
operator|.
name|x
argument_list|)
expr_stmt|;
name|node
operator|.
name|putInt
argument_list|(
literal|"Y"
argument_list|,
name|rect
operator|.
name|y
argument_list|)
expr_stmt|;
name|node
operator|.
name|putInt
argument_list|(
literal|"W"
argument_list|,
name|rect
operator|.
name|width
argument_list|)
expr_stmt|;
name|node
operator|.
name|putInt
argument_list|(
literal|"H"
argument_list|,
name|rect
operator|.
name|height
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Rectangle
name|getBounds
parameter_list|()
block|{
name|Dimension
name|screenSize
init|=
name|Toolkit
operator|.
name|getDefaultToolkit
argument_list|()
operator|.
name|getScreenSize
argument_list|()
decl_stmt|;
name|Preferences
name|node
init|=
name|pref
operator|.
name|node
argument_list|(
name|KEY
argument_list|)
decl_stmt|;
name|int
name|x
init|=
name|node
operator|.
name|getInt
argument_list|(
literal|"X"
argument_list|,
name|screenSize
operator|.
name|width
operator|/
literal|4
argument_list|)
decl_stmt|;
name|int
name|y
init|=
name|node
operator|.
name|getInt
argument_list|(
literal|"Y"
argument_list|,
name|screenSize
operator|.
name|height
operator|/
literal|4
argument_list|)
decl_stmt|;
name|int
name|w
init|=
name|node
operator|.
name|getInt
argument_list|(
literal|"W"
argument_list|,
name|screenSize
operator|.
name|width
operator|/
literal|2
argument_list|)
decl_stmt|;
name|int
name|h
init|=
name|node
operator|.
name|getInt
argument_list|(
literal|"H"
argument_list|,
name|screenSize
operator|.
name|height
operator|/
literal|2
argument_list|)
decl_stmt|;
return|return
operator|new
name|Rectangle
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
return|;
block|}
specifier|public
name|void
name|setDividerLocation
parameter_list|(
name|int
name|divider
parameter_list|)
block|{
name|Preferences
name|node
init|=
name|pref
operator|.
name|node
argument_list|(
name|KEY
argument_list|)
decl_stmt|;
name|node
operator|.
name|putInt
argument_list|(
literal|"DIV"
argument_list|,
name|divider
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getDividerLocation
parameter_list|()
block|{
name|Dimension
name|screenSize
init|=
name|Toolkit
operator|.
name|getDefaultToolkit
argument_list|()
operator|.
name|getScreenSize
argument_list|()
decl_stmt|;
name|Preferences
name|node
init|=
name|pref
operator|.
name|node
argument_list|(
name|KEY
argument_list|)
decl_stmt|;
return|return
name|node
operator|.
name|getInt
argument_list|(
literal|"DIV"
argument_list|,
name|screenSize
operator|.
name|width
operator|/
literal|8
argument_list|)
return|;
block|}
specifier|public
name|void
name|setExtendedState
parameter_list|(
name|int
name|extendedState
parameter_list|)
block|{
name|Preferences
name|node
init|=
name|pref
operator|.
name|node
argument_list|(
name|KEY
argument_list|)
decl_stmt|;
name|node
operator|.
name|putInt
argument_list|(
literal|"EXTSTATE"
argument_list|,
name|extendedState
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getExtendedState
parameter_list|()
block|{
name|Preferences
name|node
init|=
name|pref
operator|.
name|node
argument_list|(
name|KEY
argument_list|)
decl_stmt|;
return|return
name|node
operator|.
name|getInt
argument_list|(
literal|"EXTSTATE"
argument_list|,
name|Frame
operator|.
name|NORMAL
argument_list|)
return|;
block|}
block|}
end_class

end_unit

