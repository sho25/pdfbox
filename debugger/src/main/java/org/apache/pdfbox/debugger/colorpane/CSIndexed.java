begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|debugger
operator|.
name|colorpane
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Font
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Box
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSNumber
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDIndexed
import|;
end_import

begin_comment
comment|/**  * @author Khyrul Bashar.  */
end_comment

begin_comment
comment|/**  * A class that provides the necessary UI and functionalities to show the Indexed colorspace.  */
end_comment

begin_class
specifier|public
class|class
name|CSIndexed
block|{
specifier|private
name|PDIndexed
name|indexed
decl_stmt|;
specifier|private
name|JPanel
name|panel
decl_stmt|;
specifier|private
name|int
name|colorCount
decl_stmt|;
comment|/**      * Constructor.      * @param array COSArray instance for Indexed Colorspace.      */
specifier|public
name|CSIndexed
parameter_list|(
name|COSArray
name|array
parameter_list|)
block|{
try|try
block|{
name|indexed
operator|=
operator|new
name|PDIndexed
argument_list|(
name|array
argument_list|)
expr_stmt|;
name|colorCount
operator|=
name|getHival
argument_list|(
name|array
argument_list|)
operator|+
literal|1
expr_stmt|;
name|initUI
argument_list|(
name|getColorantData
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/**      * Parses the colorant data from the array and return.      *      * @return      */
specifier|private
name|IndexedColorant
index|[]
name|getColorantData
parameter_list|()
block|{
name|IndexedColorant
index|[]
name|colorants
init|=
operator|new
name|IndexedColorant
index|[
name|colorCount
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|colorCount
condition|;
name|i
operator|++
control|)
block|{
name|IndexedColorant
name|colorant
init|=
operator|new
name|IndexedColorant
argument_list|()
decl_stmt|;
name|colorant
operator|.
name|setIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|float
index|[]
name|rgbValues
init|=
name|indexed
operator|.
name|toRGB
argument_list|(
operator|new
name|float
index|[]
block|{
name|i
block|}
argument_list|)
decl_stmt|;
name|colorant
operator|.
name|setRgbValues
argument_list|(
name|rgbValues
argument_list|)
expr_stmt|;
name|colorants
index|[
name|i
index|]
operator|=
name|colorant
expr_stmt|;
block|}
return|return
name|colorants
return|;
block|}
specifier|private
name|void
name|initUI
parameter_list|(
name|IndexedColorant
index|[]
name|colorants
parameter_list|)
block|{
name|panel
operator|=
operator|new
name|JPanel
argument_list|()
expr_stmt|;
name|panel
operator|.
name|setLayout
argument_list|(
operator|new
name|GridBagLayout
argument_list|()
argument_list|)
expr_stmt|;
name|panel
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|300
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
name|JLabel
name|colorSpaceLabel
init|=
operator|new
name|JLabel
argument_list|(
literal|"Indexed colorspace"
argument_list|)
decl_stmt|;
name|colorSpaceLabel
operator|.
name|setAlignmentX
argument_list|(
name|Component
operator|.
name|CENTER_ALIGNMENT
argument_list|)
expr_stmt|;
name|colorSpaceLabel
operator|.
name|setFont
argument_list|(
operator|new
name|Font
argument_list|(
name|Font
operator|.
name|MONOSPACED
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|JPanel
name|colorspaceLabelPanel
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|colorspaceLabelPanel
operator|.
name|setAlignmentX
argument_list|(
name|Component
operator|.
name|LEFT_ALIGNMENT
argument_list|)
expr_stmt|;
name|colorspaceLabelPanel
operator|.
name|add
argument_list|(
name|colorSpaceLabel
argument_list|)
expr_stmt|;
name|JLabel
name|colorCountLabel
init|=
operator|new
name|JLabel
argument_list|(
literal|" Total Color Count: "
operator|+
name|colorCount
argument_list|)
decl_stmt|;
name|colorCountLabel
operator|.
name|setAlignmentX
argument_list|(
name|Component
operator|.
name|LEFT_ALIGNMENT
argument_list|)
expr_stmt|;
name|colorCountLabel
operator|.
name|setFont
argument_list|(
operator|new
name|Font
argument_list|(
name|Font
operator|.
name|MONOSPACED
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|IndexedTableModel
name|tableModel
init|=
operator|new
name|IndexedTableModel
argument_list|(
name|colorants
argument_list|)
decl_stmt|;
name|JTable
name|table
init|=
operator|new
name|JTable
argument_list|(
name|tableModel
argument_list|)
decl_stmt|;
name|table
operator|.
name|setDefaultRenderer
argument_list|(
name|Color
operator|.
name|class
argument_list|,
operator|new
name|ColorBarCellRenderer
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|setRowHeight
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|table
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
literal|0
argument_list|)
operator|.
name|setMinWidth
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|table
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
literal|0
argument_list|)
operator|.
name|setMaxWidth
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|table
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setMinWidth
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|table
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setMaxWidth
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|JScrollPane
name|scrollPane
init|=
operator|new
name|JScrollPane
argument_list|()
decl_stmt|;
name|scrollPane
operator|.
name|setViewportView
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|scrollPane
operator|.
name|setAlignmentX
argument_list|(
name|Component
operator|.
name|LEFT_ALIGNMENT
argument_list|)
expr_stmt|;
name|Box
name|box
init|=
name|Box
operator|.
name|createVerticalBox
argument_list|()
decl_stmt|;
name|box
operator|.
name|add
argument_list|(
name|colorCountLabel
argument_list|)
expr_stmt|;
name|box
operator|.
name|add
argument_list|(
name|scrollPane
argument_list|)
expr_stmt|;
name|box
operator|.
name|setAlignmentX
argument_list|(
name|Component
operator|.
name|LEFT_ALIGNMENT
argument_list|)
expr_stmt|;
name|GridBagConstraints
name|gbc
init|=
operator|new
name|GridBagConstraints
argument_list|()
decl_stmt|;
name|gbc
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|gbc
operator|.
name|gridy
operator|=
literal|0
expr_stmt|;
name|gbc
operator|.
name|weighty
operator|=
literal|0.05
expr_stmt|;
name|gbc
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|gbc
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|PAGE_START
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|colorspaceLabelPanel
argument_list|,
name|gbc
argument_list|)
expr_stmt|;
name|gbc
operator|.
name|gridy
operator|=
literal|2
expr_stmt|;
name|gbc
operator|.
name|weighty
operator|=
literal|0.9
expr_stmt|;
name|gbc
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|gbc
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|BOTH
expr_stmt|;
name|gbc
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|BELOW_BASELINE
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|box
argument_list|,
name|gbc
argument_list|)
expr_stmt|;
block|}
comment|/**      * return the main panel that hold all the UI elements.      *      * @return JPanel instance      */
specifier|public
name|Component
name|getPanel
parameter_list|()
block|{
return|return
name|panel
return|;
block|}
specifier|private
name|int
name|getHival
parameter_list|(
name|COSArray
name|array
parameter_list|)
block|{
name|int
name|hival
init|=
operator|(
operator|(
name|COSNumber
operator|)
name|array
operator|.
name|getObject
argument_list|(
literal|2
argument_list|)
operator|.
name|getCOSObject
argument_list|()
operator|)
operator|.
name|intValue
argument_list|()
decl_stmt|;
return|return
name|Math
operator|.
name|min
argument_list|(
name|hival
argument_list|,
literal|255
argument_list|)
return|;
block|}
block|}
end_class

end_unit

