begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2015 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|debugger
operator|.
name|fontencodingpane
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Font
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SwingConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|TableCellRenderer
import|;
end_import

begin_comment
comment|/**  * @author Khyrul Bashar  * A class that creates the UI for font encoding pane.  */
end_comment

begin_class
class|class
name|FontEncodingView
block|{
specifier|private
name|JPanel
name|panel
decl_stmt|;
comment|/**      * Constructor.      * @param tableData Object[][] instance as table data.      * @param headerAttributes Map<String, String> instance which contains info for showing in header      *                         panel. Here keys will be info type.      * @param columnNames String array containing the columns name.      */
name|FontEncodingView
parameter_list|(
name|Object
index|[]
index|[]
name|tableData
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headerAttributes
parameter_list|,
name|String
index|[]
name|columnNames
parameter_list|)
block|{
name|createView
argument_list|(
name|getHeaderPanel
argument_list|(
name|headerAttributes
argument_list|)
argument_list|,
name|getTable
argument_list|(
name|tableData
argument_list|,
name|columnNames
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createView
parameter_list|(
name|JPanel
name|headerPanel
parameter_list|,
name|JTable
name|table
parameter_list|)
block|{
name|panel
operator|=
operator|new
name|JPanel
argument_list|(
operator|new
name|GridBagLayout
argument_list|()
argument_list|)
expr_stmt|;
name|panel
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|300
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
name|JScrollPane
name|scrollPane
init|=
operator|new
name|JScrollPane
argument_list|(
name|table
argument_list|)
decl_stmt|;
name|table
operator|.
name|setFillsViewportHeight
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|scrollPane
operator|.
name|setAlignmentX
argument_list|(
name|Component
operator|.
name|LEFT_ALIGNMENT
argument_list|)
expr_stmt|;
name|GridBagConstraints
name|gbc
init|=
operator|new
name|GridBagConstraints
argument_list|()
decl_stmt|;
name|gbc
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|gbc
operator|.
name|gridy
operator|=
literal|0
expr_stmt|;
name|gbc
operator|.
name|weighty
operator|=
literal|0.05
expr_stmt|;
name|gbc
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|gbc
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|PAGE_START
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|headerPanel
argument_list|,
name|gbc
argument_list|)
expr_stmt|;
name|gbc
operator|.
name|gridy
operator|=
literal|2
expr_stmt|;
name|gbc
operator|.
name|weighty
operator|=
literal|0.9
expr_stmt|;
name|gbc
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|gbc
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|BOTH
expr_stmt|;
name|gbc
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|BELOW_BASELINE
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|scrollPane
argument_list|,
name|gbc
argument_list|)
expr_stmt|;
block|}
specifier|private
name|JTable
name|getTable
parameter_list|(
name|Object
index|[]
index|[]
name|tableData
parameter_list|,
name|String
index|[]
name|columnNames
parameter_list|)
block|{
name|JTable
name|table
init|=
operator|new
name|JTable
argument_list|(
name|tableData
argument_list|,
name|columnNames
argument_list|)
decl_stmt|;
name|table
operator|.
name|setRowHeight
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|table
operator|.
name|setDefaultRenderer
argument_list|(
name|Object
operator|.
name|class
argument_list|,
operator|new
name|GlyphCellRenderer
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|table
return|;
block|}
specifier|private
name|JPanel
name|getHeaderPanel
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|attributes
parameter_list|)
block|{
name|JPanel
name|headerPanel
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|GridBagLayout
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|attributes
operator|!=
literal|null
condition|)
block|{
name|Iterator
argument_list|<
name|String
argument_list|>
name|keys
init|=
name|attributes
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|int
name|row
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|keys
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|String
name|key
init|=
name|keys
operator|.
name|next
argument_list|()
decl_stmt|;
name|JLabel
name|encodingNameLabel
init|=
operator|new
name|JLabel
argument_list|(
name|key
operator|+
literal|": "
operator|+
name|attributes
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
decl_stmt|;
name|encodingNameLabel
operator|.
name|setFont
argument_list|(
operator|new
name|Font
argument_list|(
name|Font
operator|.
name|MONOSPACED
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
literal|17
argument_list|)
argument_list|)
expr_stmt|;
name|GridBagConstraints
name|gbc
init|=
operator|new
name|GridBagConstraints
argument_list|()
decl_stmt|;
name|gbc
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|gbc
operator|.
name|gridy
operator|=
name|row
operator|++
expr_stmt|;
name|gbc
operator|.
name|weighty
operator|=
literal|0.1
expr_stmt|;
name|gbc
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|LINE_START
expr_stmt|;
name|headerPanel
operator|.
name|add
argument_list|(
name|encodingNameLabel
argument_list|,
name|gbc
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|headerPanel
return|;
block|}
name|JPanel
name|getPanel
parameter_list|()
block|{
return|return
name|panel
return|;
block|}
specifier|private
specifier|static
specifier|final
class|class
name|GlyphCellRenderer
implements|implements
name|TableCellRenderer
block|{
annotation|@
name|Override
specifier|public
name|Component
name|getTableCellRendererComponent
parameter_list|(
name|JTable
name|jTable
parameter_list|,
name|Object
name|o
parameter_list|,
name|boolean
name|b
parameter_list|,
name|boolean
name|b1
parameter_list|,
name|int
name|i
parameter_list|,
name|int
name|i1
parameter_list|)
block|{
if|if
condition|(
name|o
operator|!=
literal|null
condition|)
block|{
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|o
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|label
operator|.
name|setHorizontalAlignment
argument_list|(
name|SwingConstants
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|label
operator|.
name|setFont
argument_list|(
operator|new
name|Font
argument_list|(
name|Font
operator|.
name|SANS_SERIF
argument_list|,
name|Font
operator|.
name|PLAIN
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|SimpleFont
operator|.
name|NO_GLYPH
operator|.
name|equals
argument_list|(
name|o
argument_list|)
operator|||
literal|".notdef"
operator|.
name|equals
argument_list|(
name|o
argument_list|)
condition|)
block|{
name|label
operator|.
name|setText
argument_list|(
name|o
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|label
operator|.
name|setForeground
argument_list|(
name|Color
operator|.
name|RED
argument_list|)
expr_stmt|;
block|}
return|return
name|label
return|;
block|}
return|return
operator|new
name|JLabel
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

