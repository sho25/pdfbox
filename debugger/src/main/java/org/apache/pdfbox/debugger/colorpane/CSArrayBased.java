begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2015 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|debugger
operator|.
name|colorpane
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Font
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|color
operator|.
name|ColorSpace
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BoxLayout
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDColorSpace
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDICCBased
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDPattern
import|;
end_import

begin_comment
comment|/**  *  * @author Tilman Hausherr  *  * Simple pane to show a title and detail on the color spaces that have no visual "magic".  */
end_comment

begin_class
specifier|public
class|class
name|CSArrayBased
block|{
specifier|private
name|JPanel
name|panel
decl_stmt|;
specifier|private
name|PDColorSpace
name|colorSpace
init|=
literal|null
decl_stmt|;
specifier|private
name|int
name|numberOfComponents
init|=
literal|0
decl_stmt|;
specifier|private
name|String
name|errmsg
init|=
literal|""
decl_stmt|;
specifier|public
name|CSArrayBased
parameter_list|(
name|COSArray
name|array
parameter_list|)
block|{
try|try
block|{
name|colorSpace
operator|=
name|PDColorSpace
operator|.
name|create
argument_list|(
name|array
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|colorSpace
operator|instanceof
name|PDPattern
operator|)
condition|)
block|{
name|numberOfComponents
operator|=
name|colorSpace
operator|.
name|getNumberOfComponents
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|errmsg
operator|=
name|ex
operator|.
name|getMessage
argument_list|()
expr_stmt|;
block|}
name|initUI
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|initUI
parameter_list|()
block|{
name|panel
operator|=
operator|new
name|JPanel
argument_list|()
expr_stmt|;
name|panel
operator|.
name|setLayout
argument_list|(
operator|new
name|BoxLayout
argument_list|(
name|panel
argument_list|,
name|BoxLayout
operator|.
name|Y_AXIS
argument_list|)
argument_list|)
expr_stmt|;
name|panel
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|300
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|colorSpace
operator|==
literal|null
condition|)
block|{
name|JLabel
name|error
init|=
operator|new
name|JLabel
argument_list|(
name|errmsg
argument_list|)
decl_stmt|;
name|error
operator|.
name|setAlignmentX
argument_list|(
name|Component
operator|.
name|CENTER_ALIGNMENT
argument_list|)
expr_stmt|;
name|error
operator|.
name|setFont
argument_list|(
operator|new
name|Font
argument_list|(
name|Font
operator|.
name|MONOSPACED
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|error
argument_list|)
expr_stmt|;
return|return;
block|}
name|JLabel
name|colorSpaceLabel
init|=
operator|new
name|JLabel
argument_list|(
name|colorSpace
operator|.
name|getName
argument_list|()
operator|+
literal|" colorspace"
argument_list|)
decl_stmt|;
name|colorSpaceLabel
operator|.
name|setAlignmentX
argument_list|(
name|Component
operator|.
name|CENTER_ALIGNMENT
argument_list|)
expr_stmt|;
name|colorSpaceLabel
operator|.
name|setFont
argument_list|(
operator|new
name|Font
argument_list|(
name|Font
operator|.
name|MONOSPACED
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|colorSpaceLabel
argument_list|)
expr_stmt|;
if|if
condition|(
name|numberOfComponents
operator|>
literal|0
condition|)
block|{
name|JLabel
name|colorCountLabel
init|=
operator|new
name|JLabel
argument_list|(
literal|"Component Count: "
operator|+
name|numberOfComponents
argument_list|)
decl_stmt|;
name|colorCountLabel
operator|.
name|setAlignmentX
argument_list|(
name|Component
operator|.
name|CENTER_ALIGNMENT
argument_list|)
expr_stmt|;
name|colorCountLabel
operator|.
name|setFont
argument_list|(
operator|new
name|Font
argument_list|(
name|Font
operator|.
name|MONOSPACED
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|colorCountLabel
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|colorSpace
operator|instanceof
name|PDICCBased
condition|)
block|{
name|PDICCBased
name|icc
init|=
operator|(
name|PDICCBased
operator|)
name|colorSpace
decl_stmt|;
name|int
name|colorSpaceType
init|=
name|icc
operator|.
name|getColorSpaceType
argument_list|()
decl_stmt|;
name|String
name|cs
decl_stmt|;
switch|switch
condition|(
name|colorSpaceType
condition|)
block|{
case|case
name|ColorSpace
operator|.
name|CS_LINEAR_RGB
case|:
name|cs
operator|=
literal|"linear RGB"
expr_stmt|;
break|break;
case|case
name|ColorSpace
operator|.
name|CS_CIEXYZ
case|:
name|cs
operator|=
literal|"CIEXYZ"
expr_stmt|;
break|break;
case|case
name|ColorSpace
operator|.
name|CS_GRAY
case|:
name|cs
operator|=
literal|"linear gray"
expr_stmt|;
break|break;
case|case
name|ColorSpace
operator|.
name|CS_sRGB
case|:
name|cs
operator|=
literal|"sRGB"
expr_stmt|;
break|break;
case|case
name|ColorSpace
operator|.
name|TYPE_GRAY
case|:
name|cs
operator|=
literal|"gray"
expr_stmt|;
break|break;
case|case
name|ColorSpace
operator|.
name|TYPE_CMYK
case|:
name|cs
operator|=
literal|"CMYK"
expr_stmt|;
break|break;
default|default:
name|cs
operator|=
literal|"type "
operator|+
name|colorSpaceType
expr_stmt|;
break|break;
block|}
name|JLabel
name|otherLabel
init|=
operator|new
name|JLabel
argument_list|(
literal|"Colorspace type: "
operator|+
name|cs
argument_list|)
decl_stmt|;
name|otherLabel
operator|.
name|setAlignmentX
argument_list|(
name|Component
operator|.
name|CENTER_ALIGNMENT
argument_list|)
expr_stmt|;
name|otherLabel
operator|.
name|setFont
argument_list|(
operator|new
name|Font
argument_list|(
name|Font
operator|.
name|MONOSPACED
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|otherLabel
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * return the main panel that hold all the UI elements.      *      * @return JPanel instance      */
specifier|public
name|Component
name|getPanel
parameter_list|()
block|{
return|return
name|panel
return|;
block|}
block|}
end_class

end_unit

