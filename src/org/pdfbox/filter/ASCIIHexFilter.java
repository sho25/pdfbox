begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright (c) 2003, www.pdfbox.org  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * 1. Redistributions of source code must retain the above copyright notice,  *    this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright notice,  *    this list of conditions and the following disclaimer in the documentation  *    and/or other materials provided with the distribution.  * 3. Neither the name of pdfbox; nor the names of its  *    contributors may be used to endorse or promote products derived from this  *    software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * http://www.pdfbox.org  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|pdfbox
operator|.
name|filter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|persistence
operator|.
name|util
operator|.
name|COSHEXTable
import|;
end_import

begin_comment
comment|/**  * This is the used for the ASCIIHexDecode filter.  *  * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.9 $  */
end_comment

begin_class
specifier|public
class|class
name|ASCIIHexFilter
implements|implements
name|Filter
block|{
comment|/**      * {@inheritDoc}      */
specifier|public
name|void
name|decode
parameter_list|(
name|InputStream
name|compressedData
parameter_list|,
name|OutputStream
name|result
parameter_list|,
name|COSDictionary
name|options
parameter_list|,
name|int
name|filterIndex
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|value
init|=
literal|0
decl_stmt|;
name|int
name|firstByte
init|=
literal|0
decl_stmt|;
name|int
name|secondByte
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|(
name|firstByte
operator|=
name|compressedData
operator|.
name|read
argument_list|()
operator|)
operator|!=
operator|-
literal|1
condition|)
block|{
name|value
operator|=
name|REVERSE_HEX
index|[
name|firstByte
index|]
operator|*
literal|16
expr_stmt|;
name|secondByte
operator|=
name|compressedData
operator|.
name|read
argument_list|()
expr_stmt|;
if|if
condition|(
name|secondByte
operator|>=
literal|0
condition|)
block|{
name|value
operator|+=
name|REVERSE_HEX
index|[
name|secondByte
index|]
expr_stmt|;
block|}
name|result
operator|.
name|write
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|result
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|int
index|[]
name|REVERSE_HEX
init|=
block|{
operator|-
literal|1
block|,
comment|//0
operator|-
literal|1
block|,
comment|//1
operator|-
literal|1
block|,
comment|//2
operator|-
literal|1
block|,
comment|//3
operator|-
literal|1
block|,
comment|//4
operator|-
literal|1
block|,
comment|//5
operator|-
literal|1
block|,
comment|//6
operator|-
literal|1
block|,
comment|//7
operator|-
literal|1
block|,
comment|//8
operator|-
literal|1
block|,
comment|//9
operator|-
literal|1
block|,
comment|//10
operator|-
literal|1
block|,
comment|//11
operator|-
literal|1
block|,
comment|//12
operator|-
literal|1
block|,
comment|//13
operator|-
literal|1
block|,
comment|//14
operator|-
literal|1
block|,
comment|//15
operator|-
literal|1
block|,
comment|//16
operator|-
literal|1
block|,
comment|//17
operator|-
literal|1
block|,
comment|//18
operator|-
literal|1
block|,
comment|//19
operator|-
literal|1
block|,
comment|//20
operator|-
literal|1
block|,
comment|//21
operator|-
literal|1
block|,
comment|//22
operator|-
literal|1
block|,
comment|//23
operator|-
literal|1
block|,
comment|//24
operator|-
literal|1
block|,
comment|//25
operator|-
literal|1
block|,
comment|//26
operator|-
literal|1
block|,
comment|//27
operator|-
literal|1
block|,
comment|//28
operator|-
literal|1
block|,
comment|//29
operator|-
literal|1
block|,
comment|//30
operator|-
literal|1
block|,
comment|//31
operator|-
literal|1
block|,
comment|//32
operator|-
literal|1
block|,
comment|//33
operator|-
literal|1
block|,
comment|//34
operator|-
literal|1
block|,
comment|//35
operator|-
literal|1
block|,
comment|//36
operator|-
literal|1
block|,
comment|//37
operator|-
literal|1
block|,
comment|//38
operator|-
literal|1
block|,
comment|//39
operator|-
literal|1
block|,
comment|//40
operator|-
literal|1
block|,
comment|//41
operator|-
literal|1
block|,
comment|//42
operator|-
literal|1
block|,
comment|//43
operator|-
literal|1
block|,
comment|//44
operator|-
literal|1
block|,
comment|//45
operator|-
literal|1
block|,
comment|//46
operator|-
literal|1
block|,
comment|//47
literal|0
block|,
comment|//48
literal|1
block|,
comment|//49
literal|2
block|,
comment|//50
literal|3
block|,
comment|//51
literal|4
block|,
comment|//52
literal|5
block|,
comment|//53
literal|6
block|,
comment|//54
literal|7
block|,
comment|//55
literal|8
block|,
comment|//56
literal|9
block|,
comment|//57
operator|-
literal|1
block|,
comment|//58
operator|-
literal|1
block|,
comment|//59
operator|-
literal|1
block|,
comment|//60
operator|-
literal|1
block|,
comment|//61
operator|-
literal|1
block|,
comment|//62
operator|-
literal|1
block|,
comment|//63
operator|-
literal|1
block|,
comment|//64
literal|10
block|,
comment|//65
literal|11
block|,
comment|//66
literal|12
block|,
comment|//67
literal|13
block|,
comment|//68
literal|14
block|,
comment|//69
literal|15
block|,
comment|//70
operator|-
literal|1
block|,
comment|//71
operator|-
literal|1
block|,
comment|//72
operator|-
literal|1
block|,
comment|//73
operator|-
literal|1
block|,
comment|//74
operator|-
literal|1
block|,
comment|//75
operator|-
literal|1
block|,
comment|//76
operator|-
literal|1
block|,
comment|//77
operator|-
literal|1
block|,
comment|//78
operator|-
literal|1
block|,
comment|//79
operator|-
literal|1
block|,
comment|//80
operator|-
literal|1
block|,
comment|//81
operator|-
literal|1
block|,
comment|//82
operator|-
literal|1
block|,
comment|//83
operator|-
literal|1
block|,
comment|//84
operator|-
literal|1
block|,
comment|//85
operator|-
literal|1
block|,
comment|//86
operator|-
literal|1
block|,
comment|//87
operator|-
literal|1
block|,
comment|//88
operator|-
literal|1
block|,
comment|//89
operator|-
literal|1
block|,
comment|//90
operator|-
literal|1
block|,
comment|//91
operator|-
literal|1
block|,
comment|//92
operator|-
literal|1
block|,
comment|//93
operator|-
literal|1
block|,
comment|//94
operator|-
literal|1
block|,
comment|//95
operator|-
literal|1
block|,
comment|//96
literal|10
block|,
comment|//97
literal|11
block|,
comment|//98
literal|12
block|,
comment|//99
literal|13
block|,
comment|//100
literal|14
block|,
comment|//101
literal|15
block|,
comment|//102
block|}
decl_stmt|;
comment|/**      * {@inheritDoc}      */
specifier|public
name|void
name|encode
parameter_list|(
name|InputStream
name|rawData
parameter_list|,
name|OutputStream
name|result
parameter_list|,
name|COSDictionary
name|options
parameter_list|,
name|int
name|filterIndex
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|byteRead
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|(
name|byteRead
operator|=
name|rawData
operator|.
name|read
argument_list|()
operator|)
operator|!=
operator|-
literal|1
condition|)
block|{
name|int
name|value
init|=
operator|(
name|byteRead
operator|+
literal|256
operator|)
operator|%
literal|256
decl_stmt|;
name|result
operator|.
name|write
argument_list|(
name|COSHEXTable
operator|.
name|TABLE
index|[
name|value
index|]
argument_list|)
expr_stmt|;
block|}
name|result
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

