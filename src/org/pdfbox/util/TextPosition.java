begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|pdfbox
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|font
operator|.
name|PDFont
import|;
end_import

begin_comment
comment|/**  * This represents a character and a position on the screen of those characters.  *  * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.12 $  */
end_comment

begin_class
specifier|public
class|class
name|TextPosition
block|{
specifier|private
name|float
name|x
decl_stmt|;
specifier|private
name|float
name|y
decl_stmt|;
specifier|private
name|float
name|xScale
decl_stmt|;
specifier|private
name|float
name|yScale
decl_stmt|;
specifier|private
name|float
name|totalWidth
decl_stmt|;
specifier|private
name|float
index|[]
name|widths
decl_stmt|;
specifier|private
name|float
name|height
decl_stmt|;
specifier|private
name|float
name|widthOfSpace
decl_stmt|;
specifier|private
name|String
name|c
decl_stmt|;
specifier|private
name|PDFont
name|font
decl_stmt|;
specifier|private
name|float
name|fontSize
decl_stmt|;
specifier|private
name|float
name|wordSpacing
decl_stmt|;
specifier|protected
name|TextPosition
parameter_list|()
block|{      }
comment|/**      * Constructor.      *      * @param xPos The x coordinate of the character.      * @param yPos The y coordinate of the character.      * @param xScl The x scaling of the character.      * @param yScl The y scaling of the character.      * @param totalWidthValue The width of all the characters.      * @param individualWidths The width of each individual character.      * @param heightValue The height of the character.      * @param spaceWidth The width of the space character.      * @param string The character to be displayed.      * @param currentFont The current for for this text position.      * @param fontSizeValue The new font size.      * @param ws The word spacing parameter      */
specifier|public
name|TextPosition
parameter_list|(
name|float
name|xPos
parameter_list|,
name|float
name|yPos
parameter_list|,
name|float
name|xScl
parameter_list|,
name|float
name|yScl
parameter_list|,
name|float
name|totalWidthValue
parameter_list|,
name|float
index|[]
name|individualWidths
parameter_list|,
name|float
name|heightValue
parameter_list|,
name|float
name|spaceWidth
parameter_list|,
name|String
name|string
parameter_list|,
name|PDFont
name|currentFont
parameter_list|,
name|float
name|fontSizeValue
parameter_list|,
name|float
name|ws
parameter_list|)
block|{
name|this
operator|.
name|x
operator|=
name|xPos
expr_stmt|;
name|this
operator|.
name|y
operator|=
name|yPos
expr_stmt|;
name|this
operator|.
name|xScale
operator|=
name|xScl
expr_stmt|;
name|this
operator|.
name|yScale
operator|=
name|yScl
expr_stmt|;
name|this
operator|.
name|totalWidth
operator|=
name|totalWidthValue
expr_stmt|;
name|this
operator|.
name|widths
operator|=
name|individualWidths
expr_stmt|;
name|this
operator|.
name|height
operator|=
name|heightValue
expr_stmt|;
name|this
operator|.
name|widthOfSpace
operator|=
name|spaceWidth
expr_stmt|;
name|this
operator|.
name|c
operator|=
name|string
expr_stmt|;
name|this
operator|.
name|font
operator|=
name|currentFont
expr_stmt|;
name|this
operator|.
name|fontSize
operator|=
name|fontSizeValue
expr_stmt|;
name|this
operator|.
name|wordSpacing
operator|=
name|ws
expr_stmt|;
block|}
comment|/**      * This will the character that will be displayed on the screen.      *      * @return The character on the screen.      */
specifier|public
name|String
name|getCharacter
parameter_list|()
block|{
return|return
name|c
return|;
block|}
comment|/**      * This will get the x position of the character.      *      * @return The x coordinate of the character.      */
specifier|public
name|float
name|getX
parameter_list|()
block|{
return|return
name|x
return|;
block|}
comment|/**      * This will get the y position of the character.      *      * @return The y coordinate of the character.      */
specifier|public
name|float
name|getY
parameter_list|()
block|{
return|return
name|y
return|;
block|}
comment|/**      * This will get the width of this character.      *      * @return The width of this character.      */
specifier|public
name|float
name|getWidth
parameter_list|()
block|{
return|return
name|totalWidth
return|;
block|}
comment|/**      * This will get the maximum height of all characters in this string.      *      * @return The maximum height of all characters in this string.      */
specifier|public
name|float
name|getHeight
parameter_list|()
block|{
return|return
name|height
return|;
block|}
comment|/**      * This will get the font size that this object is      * suppose to be drawn at.      *      * @return The font size.      */
specifier|public
name|float
name|getFontSize
parameter_list|()
block|{
return|return
name|fontSize
return|;
block|}
comment|/**      * This will get the font for the text being drawn.      *      * @return The font size.      */
specifier|public
name|PDFont
name|getFont
parameter_list|()
block|{
return|return
name|font
return|;
block|}
comment|/**      * This will get the current word spacing.      *      * @return The current word spacing.      */
specifier|public
name|float
name|getWordSpacing
parameter_list|()
block|{
return|return
name|wordSpacing
return|;
block|}
comment|/**      * This will get the width of a space character.  This is useful for some      * algorithms such as the text stripper, that need to know the width of a      * space character.      *      * @return The width of a space character.      */
specifier|public
name|float
name|getWidthOfSpace
parameter_list|()
block|{
return|return
name|widthOfSpace
return|;
block|}
comment|/**      * @return Returns the xScale.      */
specifier|public
name|float
name|getXScale
parameter_list|()
block|{
return|return
name|xScale
return|;
block|}
comment|/**      * @param scale The xScale to set.      */
specifier|public
name|void
name|setXScale
parameter_list|(
name|float
name|scale
parameter_list|)
block|{
name|xScale
operator|=
name|scale
expr_stmt|;
block|}
comment|/**      * @return Returns the yScale.      */
specifier|public
name|float
name|getYScale
parameter_list|()
block|{
return|return
name|yScale
return|;
block|}
comment|/**      * @param scale The yScale to set.      */
specifier|public
name|void
name|setYScale
parameter_list|(
name|float
name|scale
parameter_list|)
block|{
name|yScale
operator|=
name|scale
expr_stmt|;
block|}
comment|/**      * Get the widths of each individual character.      *      * @return An array that is the same length as the length of the string.      */
specifier|public
name|float
index|[]
name|getIndividualWidths
parameter_list|()
block|{
return|return
name|widths
return|;
block|}
comment|/**      * Set the individual widths of every character.      *      * @param individualWidths The individual widths of characters.      */
specifier|public
name|void
name|setIndividualWidths
parameter_list|(
name|float
index|[]
name|individualWidths
parameter_list|)
block|{
name|widths
operator|=
name|individualWidths
expr_stmt|;
block|}
comment|/**      * Show the string data for this text position.      *      * @return A human readable form of this object.      */
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getCharacter
argument_list|()
return|;
block|}
block|}
end_class

end_unit

