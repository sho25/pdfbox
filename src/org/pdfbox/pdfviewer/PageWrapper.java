begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright (c) 2003-2006, www.pdfbox.org  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * 1. Redistributions of source code must retain the above copyright notice,  *    this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright notice,  *    this list of conditions and the following disclaimer in the documentation  *    and/or other materials provided with the distribution.  * 3. Neither the name of pdfbox; nor the names of its  *    contributors may be used to endorse or promote products derived from this  *    software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * http://www.pdfbox.org  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|pdfbox
operator|.
name|pdfviewer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseMotionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|PDFReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDPage
import|;
end_import

begin_comment
comment|/**  * A class to handle some prettyness around a single PDF page.  *  * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.5 $  */
end_comment

begin_class
specifier|public
class|class
name|PageWrapper
implements|implements
name|MouseMotionListener
block|{
specifier|private
name|JPanel
name|pageWrapper
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
specifier|private
name|PDFPagePanel
name|pagePanel
init|=
literal|null
decl_stmt|;
specifier|private
name|PDFReader
name|reader
init|=
literal|null
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|SPACE_AROUND_DOCUMENT
init|=
literal|20
decl_stmt|;
comment|/**      * Constructor.      *       * @param aReader The reader application that holds this page.      *       * @throws IOException If there is an error creating the page drawing objects.      */
specifier|public
name|PageWrapper
parameter_list|(
name|PDFReader
name|aReader
parameter_list|)
throws|throws
name|IOException
block|{
name|reader
operator|=
name|aReader
expr_stmt|;
name|pagePanel
operator|=
operator|new
name|PDFPagePanel
argument_list|()
expr_stmt|;
name|pageWrapper
operator|.
name|setLayout
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|pageWrapper
operator|.
name|add
argument_list|(
name|pagePanel
argument_list|)
expr_stmt|;
name|pagePanel
operator|.
name|setLocation
argument_list|(
name|SPACE_AROUND_DOCUMENT
argument_list|,
name|SPACE_AROUND_DOCUMENT
argument_list|)
expr_stmt|;
name|pageWrapper
operator|.
name|setBorder
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|border
operator|.
name|LineBorder
operator|.
name|createBlackLineBorder
argument_list|()
argument_list|)
expr_stmt|;
name|pagePanel
operator|.
name|addMouseMotionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
comment|/**      * This will display the PDF page in this component.      *      * @param page The PDF page to display.      */
specifier|public
name|void
name|displayPage
parameter_list|(
name|PDPage
name|page
parameter_list|)
block|{
name|pagePanel
operator|.
name|setPage
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|pagePanel
operator|.
name|setPreferredSize
argument_list|(
name|pagePanel
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|Dimension
name|d
init|=
name|pagePanel
operator|.
name|getSize
argument_list|()
decl_stmt|;
name|d
operator|.
name|width
operator|+=
operator|(
name|SPACE_AROUND_DOCUMENT
operator|*
literal|2
operator|)
expr_stmt|;
name|d
operator|.
name|height
operator|+=
operator|(
name|SPACE_AROUND_DOCUMENT
operator|*
literal|2
operator|)
expr_stmt|;
name|pageWrapper
operator|.
name|setPreferredSize
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|pageWrapper
operator|.
name|validate
argument_list|()
expr_stmt|;
block|}
comment|/**      * This will get the JPanel that can be displayed.      *      * @return The panel with the displayed PDF page.      */
specifier|public
name|JPanel
name|getPanel
parameter_list|()
block|{
return|return
name|pageWrapper
return|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|void
name|mouseDragged
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
comment|//do nothing when mouse moves.
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|void
name|mouseMoved
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
comment|//reader.getBottomStatusPanel().getStatusLabel().setText( e.getX() + "," + (pagePanel.getHeight() - e.getY()) );
name|reader
operator|.
name|getBottomStatusPanel
argument_list|()
operator|.
name|getStatusLabel
argument_list|()
operator|.
name|setText
argument_list|(
name|e
operator|.
name|getX
argument_list|()
operator|+
literal|","
operator|+
name|e
operator|.
name|getY
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

