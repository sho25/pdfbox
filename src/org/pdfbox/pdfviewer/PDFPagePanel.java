begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright (c) 2004-2006, www.pdfbox.org  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * 1. Redistributions of source code must retain the above copyright notice,  *    this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright notice,  *    this list of conditions and the following disclaimer in the documentation  *    and/or other materials provided with the distribution.  * 3. Neither the name of pdfbox; nor the names of its  *    contributors may be used to endorse or promote products derived from this  *    software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * http://www.pdfbox.org  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|pdfbox
operator|.
name|pdfviewer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDPage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|PDRectangle
import|;
end_import

begin_comment
comment|/**  * This is a simple JPanel that can be used to display a PDF page.  *  * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.4 $  */
end_comment

begin_class
specifier|public
class|class
name|PDFPagePanel
extends|extends
name|JPanel
block|{
specifier|private
name|PDPage
name|page
decl_stmt|;
specifier|private
name|PageDrawer
name|drawer
init|=
literal|null
decl_stmt|;
specifier|private
name|Dimension
name|pageDimension
init|=
literal|null
decl_stmt|;
comment|/**      * Constructor.      *       * @throws IOException If there is an error creating the Page drawing objects.      */
specifier|public
name|PDFPagePanel
parameter_list|()
throws|throws
name|IOException
block|{
name|drawer
operator|=
operator|new
name|PageDrawer
argument_list|()
expr_stmt|;
block|}
comment|/**      * This will set the page that should be displayed in this panel.      *      * @param pdfPage The page to draw.      */
specifier|public
name|void
name|setPage
parameter_list|(
name|PDPage
name|pdfPage
parameter_list|)
block|{
name|page
operator|=
name|pdfPage
expr_stmt|;
name|PDRectangle
name|pageSize
init|=
name|page
operator|.
name|findMediaBox
argument_list|()
decl_stmt|;
name|int
name|rotation
init|=
name|page
operator|.
name|findRotation
argument_list|()
decl_stmt|;
name|pageDimension
operator|=
name|pageSize
operator|.
name|createDimension
argument_list|()
expr_stmt|;
if|if
condition|(
name|rotation
operator|==
literal|90
operator|||
name|rotation
operator|==
literal|270
condition|)
block|{
name|pageDimension
operator|=
operator|new
name|Dimension
argument_list|(
name|pageDimension
operator|.
name|height
argument_list|,
name|pageDimension
operator|.
name|width
argument_list|)
expr_stmt|;
block|}
name|setSize
argument_list|(
name|pageDimension
argument_list|)
expr_stmt|;
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|white
argument_list|)
expr_stmt|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|void
name|paint
parameter_list|(
name|Graphics
name|g
parameter_list|)
block|{
try|try
block|{
name|g
operator|.
name|setColor
argument_list|(
name|getBackground
argument_list|()
argument_list|)
expr_stmt|;
name|g
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|getWidth
argument_list|()
argument_list|,
name|getHeight
argument_list|()
argument_list|)
expr_stmt|;
name|drawer
operator|.
name|drawPage
argument_list|(
name|g
argument_list|,
name|page
argument_list|,
name|pageDimension
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

