begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright (c) 2004, www.pdfbox.org  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * 1. Redistributions of source code must retain the above copyright notice,  *    this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright notice,  *    this list of conditions and the following disclaimer in the documentation  *    and/or other materials provided with the distribution.  * 3. Neither the name of pdfbox; nor the names of its  *    contributors may be used to endorse or promote products derived from this  *    software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * http://www.pdfbox.org  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|action
operator|.
name|type
package|;
end_package

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|PDTextStream
import|;
end_import

begin_comment
comment|/**  * This represents a JavaScript action.  *  * @author Michael Schwarzenberger (mi2kee@gmail.com)  * @version $Revision: 1.1 $  */
end_comment

begin_class
specifier|public
class|class
name|PDActionJavaScript
extends|extends
name|PDAction
block|{
comment|/**      * This type of action this object represents.      */
specifier|public
specifier|static
specifier|final
name|String
name|SUB_TYPE
init|=
literal|"JavaScript"
decl_stmt|;
comment|/**      * Constructor #1.      */
specifier|public
name|PDActionJavaScript
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|setSubType
argument_list|(
name|SUB_TYPE
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructor.      *       * @param js Some javascript code.      */
specifier|public
name|PDActionJavaScript
parameter_list|(
name|String
name|js
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|setAction
argument_list|(
name|js
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructor #2.      *       *  @param a The action dictionary.      */
specifier|public
name|PDActionJavaScript
parameter_list|(
name|COSDictionary
name|a
parameter_list|)
block|{
name|super
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param sAction The JavaScript.      */
specifier|public
name|void
name|setAction
parameter_list|(
name|PDTextStream
name|sAction
parameter_list|)
block|{
name|action
operator|.
name|setItem
argument_list|(
literal|"JS"
argument_list|,
name|sAction
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param sAction The JavaScript.      */
specifier|public
name|void
name|setAction
parameter_list|(
name|String
name|sAction
parameter_list|)
block|{
name|action
operator|.
name|setString
argument_list|(
literal|"JS"
argument_list|,
name|sAction
argument_list|)
expr_stmt|;
block|}
comment|/**      * @return The Javascript Code.      */
specifier|public
name|PDTextStream
name|getAction
parameter_list|()
block|{
return|return
name|PDTextStream
operator|.
name|createTextStream
argument_list|(
name|action
operator|.
name|getDictionaryObject
argument_list|(
literal|"JS"
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

