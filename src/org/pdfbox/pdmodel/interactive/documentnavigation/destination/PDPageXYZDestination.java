begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright (c) 2005, www.pdfbox.org  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * 1. Redistributions of source code must retain the above copyright notice,  *    this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright notice,  *    this list of conditions and the following disclaimer in the documentation  *    and/or other materials provided with the distribution.  * 3. Neither the name of pdfbox; nor the names of its  *    contributors may be used to endorse or promote products derived from this  *    software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * http://www.pdfbox.org  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|documentnavigation
operator|.
name|destination
package|;
end_package

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSBase
import|;
end_import

begin_comment
comment|/**  * This represents a destination to a page at an x,y coordinate with a zoom setting.  * The default x,y,z will be whatever is the current value in the viewer application and  * are not required.  *  * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.2 $  */
end_comment

begin_class
specifier|public
class|class
name|PDPageXYZDestination
extends|extends
name|PDPageDestination
block|{
comment|/**      * The type of this destination.      */
specifier|protected
specifier|static
specifier|final
name|String
name|TYPE
init|=
literal|"XYZ"
decl_stmt|;
comment|/**      * Default constructor.      *      */
specifier|public
name|PDPageXYZDestination
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|array
operator|.
name|growToSize
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|array
operator|.
name|setName
argument_list|(
literal|1
argument_list|,
name|TYPE
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructor from an existing destination array.      *       * @param arr The destination array.      */
specifier|public
name|PDPageXYZDestination
parameter_list|(
name|COSArray
name|arr
parameter_list|)
block|{
name|super
argument_list|(
name|arr
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the left x coordinate.  A return value of -1 implies that the current x-coordinate      * will be used.      *       * @return The left x coordinate.      */
specifier|public
name|int
name|getLeft
parameter_list|()
block|{
return|return
name|array
operator|.
name|getInt
argument_list|(
literal|2
argument_list|)
return|;
block|}
comment|/**      * Set the left x-coordinate, a value of -1 implies that the current x-coordinate      * will be used.       * @param x The left x coordinate.      */
specifier|public
name|void
name|setLeft
parameter_list|(
name|int
name|x
parameter_list|)
block|{
name|array
operator|.
name|growToSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
if|if
condition|(
name|x
operator|==
operator|-
literal|1
condition|)
block|{
name|array
operator|.
name|set
argument_list|(
literal|2
argument_list|,
operator|(
name|COSBase
operator|)
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|array
operator|.
name|setInt
argument_list|(
literal|2
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Get the top y coordinate.  A return value of -1 implies that the current y-coordinate      * will be used.      *       * @return The top y coordinate.      */
specifier|public
name|int
name|getTop
parameter_list|()
block|{
return|return
name|array
operator|.
name|getInt
argument_list|(
literal|3
argument_list|)
return|;
block|}
comment|/**      * Set the top y-coordinate, a value of -1 implies that the current y-coordinate      * will be used.       * @param y The top ycoordinate.      */
specifier|public
name|void
name|setTop
parameter_list|(
name|int
name|y
parameter_list|)
block|{
name|array
operator|.
name|growToSize
argument_list|(
literal|4
argument_list|)
expr_stmt|;
if|if
condition|(
name|y
operator|==
operator|-
literal|1
condition|)
block|{
name|array
operator|.
name|set
argument_list|(
literal|3
argument_list|,
operator|(
name|COSBase
operator|)
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|array
operator|.
name|setInt
argument_list|(
literal|3
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Get the zoom value.  A return value of -1 implies that the current zoom      * will be used.      *       * @return The zoom value for the page.      */
specifier|public
name|int
name|getZoom
parameter_list|()
block|{
return|return
name|array
operator|.
name|getInt
argument_list|(
literal|4
argument_list|)
return|;
block|}
comment|/**      * Set the zoom value for the page, a value of -1 implies that the current zoom      * will be used.       * @param zoom The zoom value.      */
specifier|public
name|void
name|setZoom
parameter_list|(
name|int
name|zoom
parameter_list|)
block|{
name|array
operator|.
name|growToSize
argument_list|(
literal|5
argument_list|)
expr_stmt|;
if|if
condition|(
name|zoom
operator|==
operator|-
literal|1
condition|)
block|{
name|array
operator|.
name|set
argument_list|(
literal|4
argument_list|,
operator|(
name|COSBase
operator|)
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|array
operator|.
name|setInt
argument_list|(
literal|4
argument_list|,
name|zoom
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

