begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *   *      http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|encryption
package|;
end_package

begin_comment
comment|/**  * This class represents the protection policy to add to a document  * for password-based protection.  *   * The following example shows how to protect a PDF document with password.   * In this example, the document will be protected so that someone opening  * the document with the user password<code>user_pwd</code> will not be  * able to modify the document.  *   *<pre>  * AccessPermission ap = new AccessPermission();  * ap.setCanModify(false);  * StandardProtectionPolicy policy = new StandardProtectionPolicy(owner_pwd, user_pwd, ap);  * doc.protect(policy);      *</pre>  *   * @author Benoit Guillon (benoit.guillon@snv.jussieu.fr)  * @version $Revision: 1.3 $  */
end_comment

begin_class
specifier|public
class|class
name|StandardProtectionPolicy
extends|extends
name|ProtectionPolicy
block|{
specifier|private
name|AccessPermission
name|permissions
decl_stmt|;
specifier|private
name|String
name|ownerPassword
init|=
literal|""
decl_stmt|;
specifier|private
name|String
name|userPassword
init|=
literal|""
decl_stmt|;
comment|/**      * Creates an new instance of the standard protection policy       * in order to protect a PDF document with passwords.      *       * @param ownerPass The owner's password.      * @param userPass The users's password.      * @param perms The access permissions given to the user.       */
specifier|public
name|StandardProtectionPolicy
parameter_list|(
name|String
name|ownerPass
parameter_list|,
name|String
name|userPass
parameter_list|,
name|AccessPermission
name|perms
parameter_list|)
block|{
name|this
operator|.
name|permissions
operator|=
name|perms
expr_stmt|;
name|this
operator|.
name|userPassword
operator|=
name|userPass
expr_stmt|;
name|this
operator|.
name|ownerPassword
operator|=
name|ownerPass
expr_stmt|;
block|}
comment|/**      * Getter of the property<tt>permissions</tt>.      *       * @return Returns the permissions.      */
specifier|public
name|AccessPermission
name|getPermissions
parameter_list|()
block|{
return|return
name|permissions
return|;
block|}
comment|/**      * Setter of the property<tt>permissions</tt>.      *       * @param perms The permissions to set.      */
specifier|public
name|void
name|setPermissions
parameter_list|(
name|AccessPermission
name|perms
parameter_list|)
block|{
name|this
operator|.
name|permissions
operator|=
name|perms
expr_stmt|;
block|}
comment|/**      * Getter of the property<tt>ownerPassword</tt>.      *       * @return Returns the ownerPassword.      */
specifier|public
name|String
name|getOwnerPassword
parameter_list|()
block|{
return|return
name|ownerPassword
return|;
block|}
comment|/**      * Setter of the property<tt>ownerPassword</tt>.      *       * @param ownerPass The ownerPassword to set.      */
specifier|public
name|void
name|setOwnerPassword
parameter_list|(
name|String
name|ownerPass
parameter_list|)
block|{
name|this
operator|.
name|ownerPassword
operator|=
name|ownerPass
expr_stmt|;
block|}
comment|/**      * Getter of the property<tt>userPassword</tt>.      *       * @return Returns the userPassword.      */
specifier|public
name|String
name|getUserPassword
parameter_list|()
block|{
return|return
name|userPassword
return|;
block|}
comment|/**      * Setter of the property<tt>userPassword</tt>.      *       * @param userPass The userPassword to set.      */
specifier|public
name|void
name|setUserPassword
parameter_list|(
name|String
name|userPass
parameter_list|)
block|{
name|this
operator|.
name|userPassword
operator|=
name|userPass
expr_stmt|;
block|}
block|}
end_class

end_unit

