begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright (c) 2003, www.pdfbox.org  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:  *  * 1. Redistributions of source code must retain the above copyright notice,  *    this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright notice,  *    this list of conditions and the following disclaimer in the documentation  *    and/or other materials provided with the distribution.  * 3. Neither the name of pdfbox; nor the names of its  *    contributors may be used to endorse or promote products derived from this  *    software without specific prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * http://www.pdfbox.org  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|pdfbox
operator|.
name|encoding
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSNumber
import|;
end_import

begin_comment
comment|/**  * This will perform the encoding from a dictionary.  *  * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.13 $  */
end_comment

begin_class
specifier|public
class|class
name|DictionaryEncoding
extends|extends
name|Encoding
block|{
specifier|private
name|COSDictionary
name|encoding
init|=
literal|null
decl_stmt|;
comment|/**      * Constructor.      *      * @param fontEncoding The encoding dictionary.      *      * @throws IOException If there is a problem getting the base font.      */
specifier|public
name|DictionaryEncoding
parameter_list|(
name|COSDictionary
name|fontEncoding
parameter_list|)
throws|throws
name|IOException
block|{
name|encoding
operator|=
name|fontEncoding
expr_stmt|;
comment|//first set up the base encoding
comment|//The previious value WinAnsiEncoding() has been changed to StandardEnding
comment|//see p 389 of the PDF 1.5 reférence table 5.11 entries in a dictionary encoding
comment|//"If this entry is absent, the Differences entry describes differences from an implicit
comment|//base encoding. For a font program that is embedded in the PDF file, the
comment|//implicit base encoding is the font program’s built-in encoding, as described
comment|//above and further elaborated in the sections on specific font types below. Otherwise,
comment|//for a nonsymbolic font, it is StandardEncoding, and for a symbolic font, it
comment|//is the font’s built-in encoding."
comment|//so the default base encoding is standardEncoding
name|Encoding
name|baseEncoding
init|=
operator|new
name|StandardEncoding
argument_list|()
decl_stmt|;
name|COSName
name|baseEncodingName
init|=
operator|(
name|COSName
operator|)
name|encoding
operator|.
name|getDictionaryObject
argument_list|(
name|COSName
operator|.
name|BASE_ENCODING
argument_list|)
decl_stmt|;
if|if
condition|(
name|baseEncodingName
operator|!=
literal|null
condition|)
block|{
name|EncodingManager
name|manager
init|=
operator|new
name|EncodingManager
argument_list|()
decl_stmt|;
name|baseEncoding
operator|=
name|manager
operator|.
name|getEncoding
argument_list|(
name|baseEncodingName
argument_list|)
expr_stmt|;
block|}
name|nameToCode
operator|.
name|putAll
argument_list|(
name|baseEncoding
operator|.
name|nameToCode
argument_list|)
expr_stmt|;
name|codeToName
operator|.
name|putAll
argument_list|(
name|baseEncoding
operator|.
name|codeToName
argument_list|)
expr_stmt|;
comment|//now replace with the differences.
name|COSArray
name|differences
init|=
operator|(
name|COSArray
operator|)
name|encoding
operator|.
name|getDictionaryObject
argument_list|(
name|COSName
operator|.
name|DIFFERENCES
argument_list|)
decl_stmt|;
name|int
name|currentIndex
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|differences
operator|!=
literal|null
operator|&&
name|i
operator|<
name|differences
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|COSBase
name|next
init|=
name|differences
operator|.
name|getObject
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|next
operator|instanceof
name|COSNumber
condition|)
block|{
name|currentIndex
operator|=
operator|(
operator|(
name|COSNumber
operator|)
name|next
operator|)
operator|.
name|intValue
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|next
operator|instanceof
name|COSName
condition|)
block|{
name|COSName
name|name
init|=
operator|(
name|COSName
operator|)
name|next
decl_stmt|;
name|addCharacterEncoding
argument_list|(
name|currentIndex
operator|++
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**      * Convert this standard java object to a COS object.      *      * @return The cos object that matches this Java object.      */
specifier|public
name|COSBase
name|getCOSObject
parameter_list|()
block|{
return|return
name|encoding
return|;
block|}
block|}
end_class

end_unit

