begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|operator
operator|.
name|pagedrawer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|geom
operator|.
name|GeneralPath
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|geom
operator|.
name|Point2D
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSNumber
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|pdfviewer
operator|.
name|PageDrawer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|PDFOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|operator
operator|.
name|OperatorProcessor
import|;
end_import

begin_comment
comment|/**  * Implementation of content stream operator for page drawer.  *  * @author<a href="mailto:ben@benlitchfield.com">Ben Litchfield</a>  * @version $Revision: 1.2 $  */
end_comment

begin_class
specifier|public
class|class
name|MoveTo
extends|extends
name|OperatorProcessor
block|{
comment|/**      * process : m : Begin new subpath.      * @param operator The operator that is being executed.      * @param arguments List      */
specifier|public
name|void
name|process
parameter_list|(
name|PDFOperator
name|operator
parameter_list|,
name|List
name|arguments
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|PageDrawer
name|drawer
init|=
operator|(
name|PageDrawer
operator|)
name|context
decl_stmt|;
name|COSNumber
name|x
init|=
operator|(
name|COSNumber
operator|)
name|arguments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|COSNumber
name|y
init|=
operator|(
name|COSNumber
operator|)
name|arguments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|drawer
operator|.
name|getLineSubPaths
argument_list|()
operator|.
name|add
argument_list|(
name|drawer
operator|.
name|getLinePath
argument_list|()
argument_list|)
expr_stmt|;
name|GeneralPath
name|newPath
init|=
operator|new
name|GeneralPath
argument_list|()
decl_stmt|;
name|Point2D
name|Ppos
init|=
name|drawer
operator|.
name|TransformedPoint
argument_list|(
name|x
operator|.
name|doubleValue
argument_list|()
argument_list|,
name|y
operator|.
name|doubleValue
argument_list|()
argument_list|)
decl_stmt|;
comment|//newPath.moveTo( x.floatValue(), (float)drawer.fixY( x.doubleValue(), y.doubleValue()) );
comment|//logger().info("Ready to move to " + Ppos.getX() + ", " + Ppos.getY());
name|newPath
operator|.
name|moveTo
argument_list|(
operator|(
name|float
operator|)
name|Ppos
operator|.
name|getX
argument_list|()
argument_list|,
operator|(
name|float
operator|)
name|Ppos
operator|.
name|getY
argument_list|()
argument_list|)
expr_stmt|;
name|drawer
operator|.
name|setLinePath
argument_list|(
name|newPath
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|E
parameter_list|)
block|{
name|logger
argument_list|()
operator|.
name|warning
argument_list|(
name|E
operator|.
name|toString
argument_list|()
operator|+
literal|"/n at/n"
operator|+
name|FullStackTrace
argument_list|(
name|E
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

