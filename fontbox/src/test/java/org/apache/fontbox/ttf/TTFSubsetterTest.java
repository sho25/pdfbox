begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2015 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|ttf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *  * @author Tilman Hausherr  */
end_comment

begin_class
specifier|public
class|class
name|TTFSubsetterTest
block|{
comment|/**      * Test of PDFBOX-2854.      */
annotation|@
name|Test
specifier|public
name|void
name|testEmptySubset
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|File
name|testFile
init|=
operator|new
name|File
argument_list|(
literal|"src/test/resources/ttf/LiberationSans-Regular.ttf"
argument_list|)
decl_stmt|;
name|TrueTypeFont
name|x
init|=
operator|new
name|TTFParser
argument_list|()
operator|.
name|parse
argument_list|(
name|testFile
argument_list|)
decl_stmt|;
name|TTFSubsetter
name|ttfSubsetter
init|=
operator|new
name|TTFSubsetter
argument_list|(
name|x
argument_list|)
decl_stmt|;
try|try
block|{
name|ttfSubsetter
operator|.
name|writeToStream
argument_list|(
operator|new
name|ByteArrayOutputStream
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"IllegalStateException should be thrown"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
comment|// ok
block|}
block|}
comment|/**      * Test of PDFBOX-2854.      */
comment|//@Test
comment|// enable when fixed
specifier|public
name|void
name|testNonEmptySubset
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|File
name|testFile
init|=
operator|new
name|File
argument_list|(
literal|"src/test/resources/ttf/LiberationSans-Regular.ttf"
argument_list|)
decl_stmt|;
name|TrueTypeFont
name|x
init|=
operator|new
name|TTFParser
argument_list|()
operator|.
name|parse
argument_list|(
name|testFile
argument_list|)
decl_stmt|;
name|TTFSubsetter
name|ttfSubsetter
init|=
operator|new
name|TTFSubsetter
argument_list|(
name|x
argument_list|)
decl_stmt|;
name|ttfSubsetter
operator|.
name|add
argument_list|(
literal|'a'
argument_list|)
expr_stmt|;
name|ttfSubsetter
operator|.
name|writeToStream
argument_list|(
operator|new
name|ByteArrayOutputStream
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

