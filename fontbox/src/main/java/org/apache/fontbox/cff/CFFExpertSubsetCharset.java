begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|cff
package|;
end_package

begin_comment
comment|/**  * This is specialized CFFCharset. It's used if the CharsetId of a font is set to 2.  *   * @author Villu Ruusmann  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|CFFExpertSubsetCharset
extends|extends
name|CFFCharset
block|{
specifier|private
specifier|static
specifier|final
name|int
name|CHAR_CODE
init|=
literal|0
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|CHAR_NAME
init|=
literal|1
decl_stmt|;
comment|/**      * Table of character codes and their corresponding names.      */
specifier|public
specifier|static
specifier|final
name|Object
index|[]
index|[]
name|CFF_EXPERT_SUBSET_CHARSET_TABLE
init|=
block|{
block|{
literal|0
block|,
literal|".notdef"
block|}
block|,
block|{
literal|1
block|,
literal|"space"
block|}
block|,
block|{
literal|231
block|,
literal|"dollaroldstyle"
block|}
block|,
block|{
literal|232
block|,
literal|"dollarsuperior"
block|}
block|,
block|{
literal|235
block|,
literal|"parenleftsuperior"
block|}
block|,
block|{
literal|236
block|,
literal|"parenrightsuperior"
block|}
block|,
block|{
literal|237
block|,
literal|"twodotenleader"
block|}
block|,
block|{
literal|238
block|,
literal|"onedotenleader"
block|}
block|,
block|{
literal|13
block|,
literal|"comma"
block|}
block|,
block|{
literal|14
block|,
literal|"hyphen"
block|}
block|,
block|{
literal|15
block|,
literal|"period"
block|}
block|,
block|{
literal|99
block|,
literal|"fraction"
block|}
block|,
block|{
literal|239
block|,
literal|"zerooldstyle"
block|}
block|,
block|{
literal|240
block|,
literal|"oneoldstyle"
block|}
block|,
block|{
literal|241
block|,
literal|"twooldstyle"
block|}
block|,
block|{
literal|242
block|,
literal|"threeoldstyle"
block|}
block|,
block|{
literal|243
block|,
literal|"fouroldstyle"
block|}
block|,
block|{
literal|244
block|,
literal|"fiveoldstyle"
block|}
block|,
block|{
literal|245
block|,
literal|"sixoldstyle"
block|}
block|,
block|{
literal|246
block|,
literal|"sevenoldstyle"
block|}
block|,
block|{
literal|247
block|,
literal|"eightoldstyle"
block|}
block|,
block|{
literal|248
block|,
literal|"nineoldstyle"
block|}
block|,
block|{
literal|27
block|,
literal|"colon"
block|}
block|,
block|{
literal|28
block|,
literal|"semicolon"
block|}
block|,
block|{
literal|249
block|,
literal|"commasuperior"
block|}
block|,
block|{
literal|250
block|,
literal|"threequartersemdash"
block|}
block|,
block|{
literal|251
block|,
literal|"periodsuperior"
block|}
block|,
block|{
literal|253
block|,
literal|"asuperior"
block|}
block|,
block|{
literal|254
block|,
literal|"bsuperior"
block|}
block|,
block|{
literal|255
block|,
literal|"centsuperior"
block|}
block|,
block|{
literal|256
block|,
literal|"dsuperior"
block|}
block|,
block|{
literal|257
block|,
literal|"esuperior"
block|}
block|,
block|{
literal|258
block|,
literal|"isuperior"
block|}
block|,
block|{
literal|259
block|,
literal|"lsuperior"
block|}
block|,
block|{
literal|260
block|,
literal|"msuperior"
block|}
block|,
block|{
literal|261
block|,
literal|"nsuperior"
block|}
block|,
block|{
literal|262
block|,
literal|"osuperior"
block|}
block|,
block|{
literal|263
block|,
literal|"rsuperior"
block|}
block|,
block|{
literal|264
block|,
literal|"ssuperior"
block|}
block|,
block|{
literal|265
block|,
literal|"tsuperior"
block|}
block|,
block|{
literal|266
block|,
literal|"ff"
block|}
block|,
block|{
literal|109
block|,
literal|"fi"
block|}
block|,
block|{
literal|110
block|,
literal|"fl"
block|}
block|,
block|{
literal|267
block|,
literal|"ffi"
block|}
block|,
block|{
literal|268
block|,
literal|"ffl"
block|}
block|,
block|{
literal|269
block|,
literal|"parenleftinferior"
block|}
block|,
block|{
literal|270
block|,
literal|"parenrightinferior"
block|}
block|,
block|{
literal|272
block|,
literal|"hyphensuperior"
block|}
block|,
block|{
literal|300
block|,
literal|"colonmonetary"
block|}
block|,
block|{
literal|301
block|,
literal|"onefitted"
block|}
block|,
block|{
literal|302
block|,
literal|"rupiah"
block|}
block|,
block|{
literal|305
block|,
literal|"centoldstyle"
block|}
block|,
block|{
literal|314
block|,
literal|"figuredash"
block|}
block|,
block|{
literal|315
block|,
literal|"hypheninferior"
block|}
block|,
block|{
literal|158
block|,
literal|"onequarter"
block|}
block|,
block|{
literal|155
block|,
literal|"onehalf"
block|}
block|,
block|{
literal|163
block|,
literal|"threequarters"
block|}
block|,
block|{
literal|320
block|,
literal|"oneeighth"
block|}
block|,
block|{
literal|321
block|,
literal|"threeeighths"
block|}
block|,
block|{
literal|322
block|,
literal|"fiveeighths"
block|}
block|,
block|{
literal|323
block|,
literal|"seveneighths"
block|}
block|,
block|{
literal|324
block|,
literal|"onethird"
block|}
block|,
block|{
literal|325
block|,
literal|"twothirds"
block|}
block|,
block|{
literal|326
block|,
literal|"zerosuperior"
block|}
block|,
block|{
literal|150
block|,
literal|"onesuperior"
block|}
block|,
block|{
literal|164
block|,
literal|"twosuperior"
block|}
block|,
block|{
literal|169
block|,
literal|"threesuperior"
block|}
block|,
block|{
literal|327
block|,
literal|"foursuperior"
block|}
block|,
block|{
literal|328
block|,
literal|"fivesuperior"
block|}
block|,
block|{
literal|329
block|,
literal|"sixsuperior"
block|}
block|,
block|{
literal|330
block|,
literal|"sevensuperior"
block|}
block|,
block|{
literal|331
block|,
literal|"eightsuperior"
block|}
block|,
block|{
literal|332
block|,
literal|"ninesuperior"
block|}
block|,
block|{
literal|333
block|,
literal|"zeroinferior"
block|}
block|,
block|{
literal|334
block|,
literal|"oneinferior"
block|}
block|,
block|{
literal|335
block|,
literal|"twoinferior"
block|}
block|,
block|{
literal|336
block|,
literal|"threeinferior"
block|}
block|,
block|{
literal|337
block|,
literal|"fourinferior"
block|}
block|,
block|{
literal|338
block|,
literal|"fiveinferior"
block|}
block|,
block|{
literal|339
block|,
literal|"sixinferior"
block|}
block|,
block|{
literal|340
block|,
literal|"seveninferior"
block|}
block|,
block|{
literal|341
block|,
literal|"eightinferior"
block|}
block|,
block|{
literal|342
block|,
literal|"nineinferior"
block|}
block|,
block|{
literal|343
block|,
literal|"centinferior"
block|}
block|,
block|{
literal|344
block|,
literal|"dollarinferior"
block|}
block|,
block|{
literal|345
block|,
literal|"periodinferior"
block|}
block|,
block|{
literal|346
block|,
literal|"commainferior"
block|}
block|}
decl_stmt|;
specifier|private
name|CFFExpertSubsetCharset
parameter_list|()
block|{
name|super
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns an instance of the CFFExpertSubsetCharset class.      * @return an instance of CFFExpertSubsetCharset      */
specifier|public
specifier|static
name|CFFExpertSubsetCharset
name|getInstance
parameter_list|()
block|{
return|return
name|CFFExpertSubsetCharset
operator|.
name|INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|CFFExpertSubsetCharset
name|INSTANCE
init|=
operator|new
name|CFFExpertSubsetCharset
argument_list|()
decl_stmt|;
static|static
block|{
name|int
name|gid
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Object
index|[]
name|charsetEntry
range|:
name|CFF_EXPERT_SUBSET_CHARSET_TABLE
control|)
block|{
name|INSTANCE
operator|.
name|addSID
argument_list|(
name|gid
operator|++
argument_list|,
operator|(
name|Integer
operator|)
name|charsetEntry
index|[
name|CHAR_CODE
index|]
argument_list|,
name|charsetEntry
index|[
name|CHAR_NAME
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

