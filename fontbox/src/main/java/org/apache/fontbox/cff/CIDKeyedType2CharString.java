begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|cff
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|type1
operator|.
name|Type1CharStringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_comment
comment|/**  * A CID-Keyed Type 2 CharString.  *  * @author John Hewson  */
end_comment

begin_class
specifier|public
class|class
name|CIDKeyedType2CharString
extends|extends
name|Type2CharString
block|{
specifier|private
specifier|final
name|int
name|cid
decl_stmt|;
comment|/**      * Constructor.      *      * @param font Parent CFF font      * @param fontName font name      * @param cid CID      * @param gid GID      * @param sequence Type 2 char string sequence      * @param defaultWidthX default width      * @param nomWidthX nominal width      */
specifier|public
name|CIDKeyedType2CharString
parameter_list|(
name|Type1CharStringReader
name|font
parameter_list|,
name|String
name|fontName
parameter_list|,
name|int
name|cid
parameter_list|,
name|int
name|gid
parameter_list|,
name|List
argument_list|<
name|Object
argument_list|>
name|sequence
parameter_list|,
name|int
name|defaultWidthX
parameter_list|,
name|int
name|nomWidthX
parameter_list|)
block|{
comment|// glyph name is for debugging only
name|super
argument_list|(
name|font
argument_list|,
name|fontName
argument_list|,
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|US
argument_list|,
literal|"%04x"
argument_list|,
name|cid
argument_list|)
argument_list|,
name|gid
argument_list|,
name|sequence
argument_list|,
name|defaultWidthX
argument_list|,
name|nomWidthX
argument_list|)
expr_stmt|;
name|this
operator|.
name|cid
operator|=
name|cid
expr_stmt|;
block|}
comment|/**      * Returns the CID (character id) of this charstring.      */
specifier|public
name|int
name|getCID
parameter_list|()
block|{
return|return
name|cid
return|;
block|}
block|}
end_class

end_unit

