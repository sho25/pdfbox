begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|ttf
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * Model for data from the GSUB tables  *   * @author Palash Ray  *  */
end_comment

begin_interface
specifier|public
interface|interface
name|GsubData
block|{
comment|/**      * To be used when there is no GSUB data available      */
name|GsubData
name|NO_DATA_FOUND
init|=
operator|new
name|GsubData
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isFeatureSupported
parameter_list|(
name|String
name|featureName
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Language
name|getLanguage
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|ScriptFeature
name|getFeature
parameter_list|(
name|String
name|featureName
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getActiveScriptName
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getSupportedFeatures
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
block|}
decl_stmt|;
name|Language
name|getLanguage
parameter_list|()
function_decl|;
comment|/**      * A {@link Language} can have more than one script that is supported. However, at any given      * point, only one of the many scripts are active.      *      * @return The name of the script that is active.      */
name|String
name|getActiveScriptName
parameter_list|()
function_decl|;
name|boolean
name|isFeatureSupported
parameter_list|(
name|String
name|featureName
parameter_list|)
function_decl|;
name|ScriptFeature
name|getFeature
parameter_list|(
name|String
name|featureName
parameter_list|)
function_decl|;
name|Set
argument_list|<
name|String
argument_list|>
name|getSupportedFeatures
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

