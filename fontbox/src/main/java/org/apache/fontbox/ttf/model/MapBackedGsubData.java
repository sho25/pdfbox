begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|ttf
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  *   * A {@link Map} based simple implementation of the {@link GsubData}  *   * @author Palash Ray  *  */
end_comment

begin_class
specifier|public
class|class
name|MapBackedGsubData
implements|implements
name|GsubData
block|{
specifier|private
specifier|final
name|Language
name|language
decl_stmt|;
specifier|private
specifier|final
name|String
name|activeScriptName
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|List
argument_list|<
name|Integer
argument_list|>
argument_list|,
name|Integer
argument_list|>
argument_list|>
name|glyphSubstitutionMap
decl_stmt|;
specifier|public
name|MapBackedGsubData
parameter_list|(
name|Language
name|language
parameter_list|,
name|String
name|activeScriptName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|List
argument_list|<
name|Integer
argument_list|>
argument_list|,
name|Integer
argument_list|>
argument_list|>
name|glyphSubstitutionMap
parameter_list|)
block|{
name|this
operator|.
name|language
operator|=
name|language
expr_stmt|;
name|this
operator|.
name|activeScriptName
operator|=
name|activeScriptName
expr_stmt|;
name|this
operator|.
name|glyphSubstitutionMap
operator|=
name|glyphSubstitutionMap
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Language
name|getLanguage
parameter_list|()
block|{
return|return
name|language
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getActiveScriptName
parameter_list|()
block|{
return|return
name|activeScriptName
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isFeatureSupported
parameter_list|(
name|String
name|featureName
parameter_list|)
block|{
return|return
name|glyphSubstitutionMap
operator|.
name|containsKey
argument_list|(
name|featureName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ScriptFeature
name|getFeature
parameter_list|(
name|String
name|featureName
parameter_list|)
block|{
if|if
condition|(
operator|!
name|isFeatureSupported
argument_list|(
name|featureName
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"The feature "
operator|+
name|featureName
operator|+
literal|" is not supported!"
argument_list|)
throw|;
block|}
return|return
operator|new
name|MapBackedScriptFeature
argument_list|(
name|featureName
argument_list|,
name|glyphSubstitutionMap
operator|.
name|get
argument_list|(
name|featureName
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getSupportedFeatures
parameter_list|()
block|{
return|return
name|glyphSubstitutionMap
operator|.
name|keySet
argument_list|()
return|;
block|}
block|}
end_class

end_unit

