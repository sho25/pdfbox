begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|ttf
operator|.
name|table
operator|.
name|gsub
package|;
end_package

begin_comment
comment|/**  * This class is a part of the<a href="https://docs.microsoft.com/en-us/typography/opentype/spec/gsub">GSUB â€” Glyph  * Substitution Table</a> system of tables in the Open Type Font specs. This is a part of the<a href=  * "https://docs.microsoft.com/en-us/typography/opentype/spec/gsub#lookuptype-4-ligature-substitution-subtable">LookupType  * 4: Ligature Substitution Subtable</a>. It specifically models the<a href=  * "https://docs.microsoft.com/en-us/typography/opentype/spec/gsub#41-ligature-substitution-format-1">LigatureSet table:  * All ligatures beginning with the same glyph</a>.  *   * @author Palash Ray  *  */
end_comment

begin_class
specifier|public
class|class
name|LigatureSetTable
block|{
specifier|private
specifier|final
name|int
name|ligatureCount
decl_stmt|;
specifier|private
specifier|final
name|LigatureTable
index|[]
name|ligatureTables
decl_stmt|;
specifier|public
name|LigatureSetTable
parameter_list|(
name|int
name|ligatureCount
parameter_list|,
name|LigatureTable
index|[]
name|ligatureTables
parameter_list|)
block|{
name|this
operator|.
name|ligatureCount
operator|=
name|ligatureCount
expr_stmt|;
name|this
operator|.
name|ligatureTables
operator|=
name|ligatureTables
expr_stmt|;
block|}
specifier|public
name|int
name|getLigatureCount
parameter_list|()
block|{
return|return
name|ligatureCount
return|;
block|}
specifier|public
name|LigatureTable
index|[]
name|getLigatureTables
parameter_list|()
block|{
return|return
name|ligatureTables
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"%s[ligatureCount=%d]"
argument_list|,
name|LigatureSetTable
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|ligatureCount
argument_list|)
return|;
block|}
block|}
end_class

end_unit

