begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|ttf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * A cmap lookup that performs substitution via the 'GSUB' table.  *  * @author Aaron Madlon-Kay  */
end_comment

begin_class
specifier|public
class|class
name|SubstitutingCmapLookup
implements|implements
name|CmapLookup
block|{
specifier|private
specifier|final
name|CmapSubtable
name|cmap
decl_stmt|;
specifier|private
specifier|final
name|GlyphSubstitutionTable
name|gsub
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|enabledFeatures
decl_stmt|;
specifier|public
name|SubstitutingCmapLookup
parameter_list|(
name|CmapSubtable
name|cmap
parameter_list|,
name|GlyphSubstitutionTable
name|gsub
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|enabledFeatures
parameter_list|)
block|{
name|this
operator|.
name|cmap
operator|=
name|cmap
expr_stmt|;
name|this
operator|.
name|gsub
operator|=
name|gsub
expr_stmt|;
name|this
operator|.
name|enabledFeatures
operator|=
name|enabledFeatures
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getGlyphId
parameter_list|(
name|int
name|characterCode
parameter_list|)
block|{
name|int
name|gid
init|=
name|cmap
operator|.
name|getGlyphId
argument_list|(
name|characterCode
argument_list|)
decl_stmt|;
name|String
index|[]
name|scriptTags
init|=
name|OpenTypeScript
operator|.
name|getScriptTags
argument_list|(
name|characterCode
argument_list|)
decl_stmt|;
return|return
name|gsub
operator|.
name|getSubstitution
argument_list|(
name|gid
argument_list|,
name|scriptTags
argument_list|,
name|enabledFeatures
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|Integer
argument_list|>
name|getCharCodes
parameter_list|(
name|int
name|gid
parameter_list|)
block|{
return|return
name|cmap
operator|.
name|getCharCodes
argument_list|(
name|gsub
operator|.
name|getUnsubstitution
argument_list|(
name|gid
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

