begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Regression test to check the known bugs in {@link ScratchFileBuffer}.  *  * @author KÃ¼hn&amp; Weyh Software GmbH  */
end_comment

begin_class
specifier|public
class|class
name|ScratchFileBufferTest
block|{
specifier|private
specifier|static
specifier|final
name|int
name|PAGE_SIZE
init|=
literal|4096
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|NUM_ITERATIONS
init|=
literal|3
decl_stmt|;
comment|/**      * PDFBOX-4756: test positions are correct when seeking and that no EOFException is thrown in      * ScratchFileBuffer.seek() beyond last page.      *      * @throws IOException      */
annotation|@
name|Test
specifier|public
name|void
name|testEOFBugInSeek
parameter_list|()
throws|throws
name|IOException
block|{
try|try
init|(
name|ScratchFile
name|scratchFile
init|=
operator|new
name|ScratchFile
argument_list|(
name|MemoryUsageSetting
operator|.
name|setupTempFileOnly
argument_list|()
argument_list|)
init|)
block|{
name|ScratchFileBuffer
name|scratchFileBuffer
init|=
operator|new
name|ScratchFileBuffer
argument_list|(
name|scratchFile
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
operator|new
name|byte
index|[
name|PAGE_SIZE
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NUM_ITERATIONS
condition|;
name|i
operator|++
control|)
block|{
name|long
name|p0
init|=
name|scratchFileBuffer
operator|.
name|getPosition
argument_list|()
decl_stmt|;
name|scratchFileBuffer
operator|.
name|write
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
name|long
name|p1
init|=
name|scratchFileBuffer
operator|.
name|getPosition
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|PAGE_SIZE
argument_list|,
name|p1
operator|-
name|p0
argument_list|)
expr_stmt|;
name|scratchFileBuffer
operator|.
name|write
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
name|long
name|p2
init|=
name|scratchFileBuffer
operator|.
name|getPosition
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|PAGE_SIZE
argument_list|,
name|p2
operator|-
name|p1
argument_list|)
expr_stmt|;
name|scratchFileBuffer
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|scratchFileBuffer
operator|.
name|seek
argument_list|(
name|i
operator|*
literal|2
operator|*
name|PAGE_SIZE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

