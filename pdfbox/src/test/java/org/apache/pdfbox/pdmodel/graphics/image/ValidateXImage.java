begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2014 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|image
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|BufferedImage
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|TestCase
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|TestCase
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|TestCase
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|ImageIOUtil
import|;
end_import

begin_comment
comment|/**  * Helper class to do some validations for PDImageXObject.  *   * @author Tilman Hausherr  */
end_comment

begin_class
specifier|public
class|class
name|ValidateXImage
block|{
specifier|static
specifier|public
name|void
name|validate
parameter_list|(
name|PDImageXObject
name|ximage
parameter_list|,
name|int
name|bpc
parameter_list|,
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|,
name|String
name|format
parameter_list|,
name|String
name|colorSpaceName
parameter_list|)
throws|throws
name|IOException
block|{
comment|// check the dictionary
name|assertNotNull
argument_list|(
name|ximage
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ximage
operator|.
name|getCOSStream
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ximage
operator|.
name|getCOSStream
argument_list|()
operator|.
name|getFilteredLength
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bpc
argument_list|,
name|ximage
operator|.
name|getBitsPerComponent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|width
argument_list|,
name|ximage
operator|.
name|getWidth
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|height
argument_list|,
name|ximage
operator|.
name|getHeight
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|format
argument_list|,
name|ximage
operator|.
name|getSuffix
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|colorSpaceName
argument_list|,
name|ximage
operator|.
name|getColorSpace
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// check the image
name|assertNotNull
argument_list|(
name|ximage
operator|.
name|getImage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ximage
operator|.
name|getWidth
argument_list|()
argument_list|,
name|ximage
operator|.
name|getImage
argument_list|()
operator|.
name|getWidth
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ximage
operator|.
name|getHeight
argument_list|()
argument_list|,
name|ximage
operator|.
name|getImage
argument_list|()
operator|.
name|getHeight
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|writeOk
init|=
name|ImageIOUtil
operator|.
name|writeImage
argument_list|(
name|ximage
operator|.
name|getImage
argument_list|()
argument_list|,
name|format
argument_list|,
operator|new
name|NullOutputStream
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|writeOk
argument_list|)
expr_stmt|;
name|writeOk
operator|=
name|ImageIOUtil
operator|.
name|writeImage
argument_list|(
name|SampledImageReader
operator|.
name|getRGBImage
argument_list|(
name|ximage
argument_list|,
literal|null
argument_list|)
argument_list|,
name|format
argument_list|,
operator|new
name|NullOutputStream
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|writeOk
argument_list|)
expr_stmt|;
block|}
specifier|static
name|int
name|colorCount
parameter_list|(
name|BufferedImage
name|bim
parameter_list|)
block|{
name|Set
argument_list|<
name|Integer
argument_list|>
name|colors
init|=
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
name|int
name|w
init|=
name|bim
operator|.
name|getWidth
argument_list|()
decl_stmt|;
name|int
name|h
init|=
name|bim
operator|.
name|getHeight
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|h
condition|;
name|y
operator|++
control|)
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|w
condition|;
name|x
operator|++
control|)
block|{
name|colors
operator|.
name|add
argument_list|(
name|bim
operator|.
name|getRGB
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|colors
operator|.
name|size
argument_list|()
return|;
block|}
block|}
end_class

end_unit

