begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License")); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|blend
package|;
end_package

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|TestCase
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *  * @author Tilman Hausherr  */
end_comment

begin_class
specifier|public
class|class
name|BlendModeTest
block|{
specifier|public
name|BlendModeTest
parameter_list|()
block|{     }
comment|/**      * Check that BlendMode.* constant instances are not null. This could happen if the declaration      * sequence is changed.      */
annotation|@
name|Test
specifier|public
name|void
name|testInstances
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|NORMAL
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|NORMAL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|NORMAL
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|COMPATIBLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|MULTIPLY
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|MULTIPLY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|SCREEN
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|SCREEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|OVERLAY
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|OVERLAY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|DARKEN
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|DARKEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|LIGHTEN
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|LIGHTEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|COLOR_DODGE
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|COLOR_DODGE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|COLOR_BURN
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|COLOR_BURN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|HARD_LIGHT
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|HARD_LIGHT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|SOFT_LIGHT
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|SOFT_LIGHT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|DIFFERENCE
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|DIFFERENCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|EXCLUSION
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|EXCLUSION
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|HUE
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|HUE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|SATURATION
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|SATURATION
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|LUMINOSITY
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|LUMINOSITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlendMode
operator|.
name|COLOR
argument_list|,
name|BlendMode
operator|.
name|getInstance
argument_list|(
name|COSName
operator|.
name|COLOR
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Check that COSName constants returned for BlendMode.* instances are not null. This could      * happen if the declaration sequence is changed.      */
annotation|@
name|Test
specifier|public
name|void
name|testCOSNames
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|COSName
operator|.
name|NORMAL
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|NORMAL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|NORMAL
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|COMPATIBLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|MULTIPLY
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|MULTIPLY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|SCREEN
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|SCREEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|OVERLAY
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|OVERLAY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|DARKEN
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|DARKEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|LIGHTEN
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|LIGHTEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|COLOR_DODGE
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|COLOR_DODGE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|COLOR_BURN
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|COLOR_BURN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|HARD_LIGHT
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|HARD_LIGHT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|SOFT_LIGHT
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|SOFT_LIGHT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|DIFFERENCE
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|DIFFERENCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|EXCLUSION
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|EXCLUSION
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|HUE
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|HUE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|SATURATION
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|SATURATION
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|LUMINOSITY
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|LUMINOSITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COSName
operator|.
name|COLOR
argument_list|,
name|BlendMode
operator|.
name|getCOSName
argument_list|(
name|BlendMode
operator|.
name|COLOR
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

