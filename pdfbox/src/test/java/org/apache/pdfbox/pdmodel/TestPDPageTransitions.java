begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|Loader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|pagenavigation
operator|.
name|PDTransition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|pagenavigation
operator|.
name|PDTransitionDirection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|pagenavigation
operator|.
name|PDTransitionStyle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * @author Andrea Vacondio  *  */
end_comment

begin_class
specifier|public
class|class
name|TestPDPageTransitions
block|{
annotation|@
name|Test
specifier|public
name|void
name|readTransitions
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
try|try
init|(
name|PDDocument
name|doc
init|=
name|Loader
operator|.
name|loadPDF
argument_list|(
operator|new
name|File
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/org/apache/pdfbox/pdmodel/interactive/pagenavigation/transitions_test.pdf"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
argument_list|)
init|)
block|{
name|PDTransition
name|firstTransition
init|=
name|doc
operator|.
name|getPages
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTransition
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PDTransitionStyle
operator|.
name|Glitter
operator|.
name|name
argument_list|()
argument_list|,
name|firstTransition
operator|.
name|getStyle
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|firstTransition
operator|.
name|getDuration
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PDTransitionDirection
operator|.
name|TOP_LEFT_TO_BOTTOM_RIGHT
operator|.
name|getCOSBase
argument_list|()
argument_list|,
name|firstTransition
operator|.
name|getDirection
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|saveAndReadTransitions
parameter_list|()
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
comment|// save
try|try
init|(
name|PDDocument
name|document
init|=
operator|new
name|PDDocument
argument_list|()
init|)
block|{
name|PDPage
name|page
init|=
operator|new
name|PDPage
argument_list|()
decl_stmt|;
name|document
operator|.
name|addPage
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|PDTransition
name|transition
init|=
operator|new
name|PDTransition
argument_list|(
name|PDTransitionStyle
operator|.
name|Fly
argument_list|)
decl_stmt|;
name|transition
operator|.
name|setDirection
argument_list|(
name|PDTransitionDirection
operator|.
name|NONE
argument_list|)
expr_stmt|;
name|transition
operator|.
name|setFlyScale
argument_list|(
literal|0.5f
argument_list|)
expr_stmt|;
name|page
operator|.
name|setTransition
argument_list|(
name|transition
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|document
operator|.
name|save
argument_list|(
name|baos
argument_list|)
expr_stmt|;
block|}
comment|// read
try|try
init|(
name|PDDocument
name|doc
init|=
name|Loader
operator|.
name|loadPDF
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
init|)
block|{
name|PDPage
name|page
init|=
name|doc
operator|.
name|getPages
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|PDTransition
name|loadedTransition
init|=
name|page
operator|.
name|getTransition
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PDTransitionStyle
operator|.
name|Fly
operator|.
name|name
argument_list|()
argument_list|,
name|loadedTransition
operator|.
name|getStyle
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|page
operator|.
name|getCOSObject
argument_list|()
operator|.
name|getFloat
argument_list|(
name|COSName
operator|.
name|DUR
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PDTransitionDirection
operator|.
name|NONE
operator|.
name|getCOSBase
argument_list|()
argument_list|,
name|loadedTransition
operator|.
name|getDirection
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

