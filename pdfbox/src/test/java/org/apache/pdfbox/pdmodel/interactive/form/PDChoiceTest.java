begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|form
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test for the PDChoice class.  *  */
end_comment

begin_class
specifier|public
class|class
name|PDChoiceTest
block|{
specifier|private
name|PDDocument
name|document
decl_stmt|;
specifier|private
name|PDAcroForm
name|acroForm
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|document
operator|=
operator|new
name|PDDocument
argument_list|()
expr_stmt|;
name|acroForm
operator|=
operator|new
name|PDAcroForm
argument_list|(
name|document
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createListBox
parameter_list|()
block|{
name|PDChoice
name|choiceField
init|=
operator|new
name|PDListBox
argument_list|(
name|acroForm
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|choiceField
operator|.
name|getFieldType
argument_list|()
argument_list|,
name|choiceField
operator|.
name|getDictionary
argument_list|()
operator|.
name|getNameAsString
argument_list|(
name|COSName
operator|.
name|FT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|choiceField
operator|.
name|getFieldType
argument_list|()
argument_list|,
literal|"Ch"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|choiceField
operator|.
name|isCombo
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createComboBox
parameter_list|()
block|{
name|PDChoice
name|choiceField
init|=
operator|new
name|PDComboBox
argument_list|(
name|acroForm
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|choiceField
operator|.
name|getFieldType
argument_list|()
argument_list|,
name|choiceField
operator|.
name|getDictionary
argument_list|()
operator|.
name|getNameAsString
argument_list|(
name|COSName
operator|.
name|FT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|choiceField
operator|.
name|getFieldType
argument_list|()
argument_list|,
literal|"Ch"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|choiceField
operator|.
name|isCombo
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

