begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2015 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|filter
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|filter
operator|.
name|Predictor
operator|.
name|getBitSeq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|filter
operator|.
name|Predictor
operator|.
name|calcSetBitSeq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *  * @author Tilman Hausherr  */
end_comment

begin_class
specifier|public
class|class
name|PredictorTest
block|{
comment|/**      * Test of getBitSeq method, of class Predictor.      */
annotation|@
name|Test
specifier|public
name|void
name|testGetBitSeq
parameter_list|()
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"1"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"0"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"001"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00110001"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10101010"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10101010"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10101010"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"01"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10101010"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10101010"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"101"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10101010"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"1010101"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10101010"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"01"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10101010"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00110001"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00110001"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10001"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00110001"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"0011"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00110001"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"110"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00110001"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00110001"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"1111"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11110000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11110000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"0000"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|getBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11110000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test of calcSetBitSeq method, of class Predictor.      */
annotation|@
name|Test
specifier|public
name|void
name|testCalcSetBitSeq
parameter_list|()
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000001"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111101"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111001"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000001"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11110001"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11100011"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000010"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|7
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"01111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|7
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"10000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|7
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|7
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"01000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00110000"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"01100000"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|4
argument_list|,
literal|3
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|5
argument_list|,
literal|3
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|0xFF
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"11111111"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|0xFF
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0x7E
argument_list|,
name|calcSetBitSeq
argument_list|(
literal|0xA5
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|0xD9
operator|+
literal|0xA5
argument_list|)
argument_list|)
expr_stmt|;
comment|// check truncation
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000010"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|calcSetBitSeq
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
literal|"00000000"
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

