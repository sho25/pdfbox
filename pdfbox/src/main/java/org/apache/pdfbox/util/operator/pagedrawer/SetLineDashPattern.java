begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|operator
operator|.
name|pagedrawer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdfviewer
operator|.
name|PageDrawer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|PDLineDashPattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|PDFOperator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BasicStroke
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics2D
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Implementation of content stream operator for page drawer.  *  * @author Andreas Lehmk√ºhler  * @author John Hewson  */
end_comment

begin_class
specifier|public
class|class
name|SetLineDashPattern
extends|extends
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|operator
operator|.
name|SetLineDashPattern
block|{
comment|/**      * Set the line dash pattern.      * @param operator the operator that is being executed.      * @param arguments arguments      */
specifier|public
name|void
name|process
parameter_list|(
name|PDFOperator
name|operator
parameter_list|,
name|List
argument_list|<
name|COSBase
argument_list|>
name|arguments
parameter_list|)
block|{
name|super
operator|.
name|process
argument_list|(
name|operator
argument_list|,
name|arguments
argument_list|)
expr_stmt|;
name|PDLineDashPattern
name|lineDashPattern
init|=
name|context
operator|.
name|getGraphicsState
argument_list|()
operator|.
name|getLineDashPattern
argument_list|()
decl_stmt|;
name|PageDrawer
name|drawer
init|=
operator|(
name|PageDrawer
operator|)
name|context
decl_stmt|;
name|BasicStroke
name|stroke
init|=
name|drawer
operator|.
name|getStroke
argument_list|()
decl_stmt|;
specifier|final
name|int
name|endCap
decl_stmt|,
name|lineJoin
decl_stmt|;
specifier|final
name|float
name|lineWidth
decl_stmt|,
name|miterLimit
decl_stmt|;
if|if
condition|(
name|stroke
operator|!=
literal|null
condition|)
block|{
name|endCap
operator|=
name|stroke
operator|.
name|getEndCap
argument_list|()
expr_stmt|;
name|lineJoin
operator|=
name|stroke
operator|.
name|getLineJoin
argument_list|()
expr_stmt|;
name|miterLimit
operator|=
name|stroke
operator|.
name|getMiterLimit
argument_list|()
expr_stmt|;
name|lineWidth
operator|=
name|stroke
operator|.
name|getLineWidth
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|endCap
operator|=
name|BasicStroke
operator|.
name|CAP_SQUARE
expr_stmt|;
name|lineJoin
operator|=
name|BasicStroke
operator|.
name|JOIN_MITER
expr_stmt|;
name|miterLimit
operator|=
literal|10.0f
expr_stmt|;
name|lineWidth
operator|=
literal|1.0f
expr_stmt|;
block|}
if|if
condition|(
name|lineDashPattern
operator|.
name|isDashPatternEmpty
argument_list|()
condition|)
block|{
name|drawer
operator|.
name|setStroke
argument_list|(
operator|new
name|BasicStroke
argument_list|(
name|lineWidth
argument_list|,
name|endCap
argument_list|,
name|lineJoin
argument_list|,
name|miterLimit
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|float
index|[]
name|dash
init|=
name|lineDashPattern
operator|.
name|getCOSDashPattern
argument_list|()
operator|.
name|toFloatArray
argument_list|()
decl_stmt|;
name|float
name|phase
init|=
name|lineDashPattern
operator|.
name|getPhaseStart
argument_list|()
decl_stmt|;
name|drawer
operator|.
name|setStroke
argument_list|(
operator|new
name|BasicStroke
argument_list|(
name|lineWidth
argument_list|,
name|endCap
argument_list|,
name|lineJoin
argument_list|,
name|miterLimit
argument_list|,
name|dash
argument_list|,
name|phase
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

