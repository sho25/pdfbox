begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|operator
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|pattern
operator|.
name|PDPatternResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|PDFOperator
import|;
end_import

begin_comment
comment|/**  *<p>Set the stroking pattern.</p>  *  * @version $Revision: 1.0 $  */
end_comment

begin_class
specifier|public
class|class
name|SetStrokingPattern
extends|extends
name|OperatorProcessor
block|{
comment|/**      * Set pattern instead of a color space for stroking operations.      * @param operator The operator that is being executed.      * @param arguments List      * @throws IOException If an error occurs while processing the pattern.      */
specifier|public
name|void
name|process
parameter_list|(
name|PDFOperator
name|operator
parameter_list|,
name|List
argument_list|<
name|COSBase
argument_list|>
name|arguments
parameter_list|)
throws|throws
name|IOException
block|{
name|COSName
name|selectedPattern
decl_stmt|;
name|int
name|numberOfArguments
init|=
name|arguments
operator|.
name|size
argument_list|()
decl_stmt|;
name|COSArray
name|colorValues
decl_stmt|;
if|if
condition|(
name|numberOfArguments
operator|==
literal|1
condition|)
block|{
name|selectedPattern
operator|=
operator|(
name|COSName
operator|)
name|arguments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// uncolored tiling patterns shall have some additional color values
comment|// TODO: pass these values to the colorstate
name|colorValues
operator|=
operator|new
name|COSArray
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numberOfArguments
operator|-
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|colorValues
operator|.
name|add
argument_list|(
name|arguments
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|selectedPattern
operator|=
operator|(
name|COSName
operator|)
name|arguments
operator|.
name|get
argument_list|(
name|numberOfArguments
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|PDPatternResources
argument_list|>
name|patterns
init|=
name|getContext
argument_list|()
operator|.
name|getResources
argument_list|()
operator|.
name|getPatterns
argument_list|()
decl_stmt|;
name|PDPatternResources
name|pattern
init|=
name|patterns
operator|.
name|get
argument_list|(
name|selectedPattern
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|getContext
argument_list|()
operator|.
name|getGraphicsState
argument_list|()
operator|.
name|getStrokingColor
argument_list|()
operator|.
name|setPattern
argument_list|(
name|pattern
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

