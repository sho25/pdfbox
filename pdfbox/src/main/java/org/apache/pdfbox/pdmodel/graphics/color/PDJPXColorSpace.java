begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSBase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|color
operator|.
name|ColorSpace
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|BufferedImage
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|WritableRaster
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * A color space embedded in a JPX file.  * This wraps the AWT ColorSpace which is obtained after JAI Image I/O reads a JPX stream.  *  * @author John Hewson  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|PDJPXColorSpace
extends|extends
name|PDColorSpace
block|{
specifier|private
specifier|final
name|ColorSpace
name|awtColorSpace
decl_stmt|;
comment|/**      * Creates a new JPX color space from the given AWT color space.      * @param colorSpace AWT color space from a JPX image      */
specifier|public
name|PDJPXColorSpace
parameter_list|(
name|ColorSpace
name|colorSpace
parameter_list|)
block|{
name|this
operator|.
name|awtColorSpace
operator|=
name|colorSpace
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"JPX"
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getNumberOfComponents
parameter_list|()
block|{
return|return
name|awtColorSpace
operator|.
name|getNumComponents
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|float
index|[]
name|getDefaultDecode
parameter_list|()
block|{
name|int
name|n
init|=
name|getNumberOfComponents
argument_list|()
decl_stmt|;
name|float
index|[]
name|decode
init|=
operator|new
name|float
index|[
name|n
operator|*
literal|2
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
name|i
operator|++
control|)
block|{
name|decode
index|[
name|i
operator|*
literal|2
index|]
operator|=
name|awtColorSpace
operator|.
name|getMinValue
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|decode
index|[
name|i
operator|*
literal|2
operator|+
literal|1
index|]
operator|=
name|awtColorSpace
operator|.
name|getMaxValue
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
return|return
name|decode
return|;
block|}
annotation|@
name|Override
specifier|public
name|PDColor
name|getInitialColor
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"JPX color spaces don't support drawing"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|float
index|[]
name|toRGB
parameter_list|(
name|float
index|[]
name|value
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"JPX color spaces don't support drawing"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|BufferedImage
name|toRGBImage
parameter_list|(
name|WritableRaster
name|raster
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|toRGBImageAWT
argument_list|(
name|raster
argument_list|,
name|awtColorSpace
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|COSBase
name|getCOSObject
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"JPX color spaces don't have COS objects"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

