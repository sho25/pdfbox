begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|font
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * Represents a CIDSystemInfo for the FontMapper API.  *  * @author John Hewson  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|CIDSystemInfo
implements|implements
name|Serializable
block|{
specifier|private
specifier|final
name|String
name|registry
decl_stmt|;
specifier|private
specifier|final
name|String
name|ordering
decl_stmt|;
specifier|private
specifier|final
name|int
name|supplement
decl_stmt|;
name|CIDSystemInfo
parameter_list|(
name|String
name|registry
parameter_list|,
name|String
name|ordering
parameter_list|,
name|int
name|supplement
parameter_list|)
block|{
name|this
operator|.
name|registry
operator|=
name|registry
expr_stmt|;
name|this
operator|.
name|ordering
operator|=
name|ordering
expr_stmt|;
name|this
operator|.
name|supplement
operator|=
name|supplement
expr_stmt|;
block|}
specifier|public
name|String
name|getRegistry
parameter_list|()
block|{
return|return
name|registry
return|;
block|}
specifier|public
name|String
name|getOrdering
parameter_list|()
block|{
return|return
name|ordering
return|;
block|}
specifier|public
name|int
name|getSupplement
parameter_list|()
block|{
return|return
name|supplement
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getRegistry
argument_list|()
operator|+
literal|"-"
operator|+
name|getOrdering
argument_list|()
operator|+
literal|"-"
operator|+
name|getSupplement
argument_list|()
return|;
block|}
block|}
end_class

end_unit

