begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|font
operator|.
name|encoding
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSBase
import|;
end_import

begin_comment
comment|/**  * This is the Mac OS Roman encoding, which is similar to the  * MacRomanEncoding with the addition of 15 entries  */
end_comment

begin_class
specifier|public
class|class
name|MacOSRomanEncoding
extends|extends
name|MacRomanEncoding
block|{
specifier|private
specifier|static
specifier|final
name|int
name|CHAR_CODE
init|=
literal|0
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|CHAR_NAME
init|=
literal|1
decl_stmt|;
comment|/**      * Table of octal character codes and their corresponding names      * on top of {@link MacRomanEncoding}.      */
specifier|private
specifier|static
specifier|final
name|Object
index|[]
index|[]
name|MAC_OS_ROMAN_ENCODING_TABLE
init|=
block|{
block|{
literal|255
block|,
literal|"notequal"
block|}
block|,
block|{
literal|260
block|,
literal|"infinity"
block|}
block|,
block|{
literal|262
block|,
literal|"lessequal"
block|}
block|,
block|{
literal|263
block|,
literal|"greaterequal"
block|}
block|,
block|{
literal|266
block|,
literal|"partialdiff"
block|}
block|,
block|{
literal|267
block|,
literal|"summation"
block|}
block|,
block|{
literal|270
block|,
literal|"product"
block|}
block|,
block|{
literal|271
block|,
literal|"pi"
block|}
block|,
block|{
literal|272
block|,
literal|"integral"
block|}
block|,
block|{
literal|275
block|,
literal|"Omega"
block|}
block|,
block|{
literal|303
block|,
literal|"radical"
block|}
block|,
block|{
literal|305
block|,
literal|"approxequal"
block|}
block|,
block|{
literal|306
block|,
literal|"Delta"
block|}
block|,
block|{
literal|327
block|,
literal|"lozenge"
block|}
block|,
block|{
literal|333
block|,
literal|"Euro"
block|}
block|,
block|{
literal|360
block|,
literal|"apple"
block|}
block|}
decl_stmt|;
comment|/**      * Singleton instance of this class.      *      * @since Apache PDFBox 2.0.0      */
specifier|public
specifier|static
specifier|final
name|MacOSRomanEncoding
name|INSTANCE
init|=
operator|new
name|MacOSRomanEncoding
argument_list|()
decl_stmt|;
comment|/**      * Constructor.      */
specifier|public
name|MacOSRomanEncoding
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
comment|// differences and additions to MacRomanEncoding
for|for
control|(
name|Object
index|[]
name|encodingEntry
range|:
name|MAC_OS_ROMAN_ENCODING_TABLE
control|)
block|{
name|add
argument_list|(
operator|(
name|Integer
operator|)
name|encodingEntry
index|[
name|CHAR_CODE
index|]
argument_list|,
name|encodingEntry
index|[
name|CHAR_NAME
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Convert this standard java object to a COS object.      *      * @return The cos object that matches this Java object.      */
specifier|public
name|COSBase
name|getCOSObject
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

