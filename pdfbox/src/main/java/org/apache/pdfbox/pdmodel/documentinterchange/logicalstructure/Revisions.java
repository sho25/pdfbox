begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|documentinterchange
operator|.
name|logicalstructure
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  *   * @author Koch  * @version $Revision: $  *  * @param<T> the type of object to store the revision numbers with  */
end_comment

begin_class
specifier|public
class|class
name|Revisions
parameter_list|<
name|T
parameter_list|>
block|{
specifier|private
name|List
argument_list|<
name|T
argument_list|>
name|objects
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Integer
argument_list|>
name|revisionNumbers
decl_stmt|;
specifier|private
name|List
argument_list|<
name|T
argument_list|>
name|getObjects
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|objects
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|objects
operator|=
operator|new
name|ArrayList
argument_list|<
name|T
argument_list|>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|objects
return|;
block|}
specifier|private
name|List
argument_list|<
name|Integer
argument_list|>
name|getRevisionNumbers
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|revisionNumbers
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|revisionNumbers
operator|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|revisionNumbers
return|;
block|}
comment|/**      *       */
specifier|public
name|Revisions
parameter_list|()
block|{     }
comment|/**      * Returns the object at the specified position.      *       * @param index the position      * @return the object      * @throws IndexOutOfBoundsException if the index is out of range      */
specifier|public
name|T
name|getObject
parameter_list|(
name|int
name|index
parameter_list|)
throws|throws
name|IndexOutOfBoundsException
block|{
return|return
name|this
operator|.
name|getObjects
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      * Returns the revision number at the specified position.      *       * @param index the position      * @return the revision number      * @throws IndexOutOfBoundsException if the index is out of range      */
specifier|public
name|int
name|getRevisionNumber
parameter_list|(
name|int
name|index
parameter_list|)
throws|throws
name|IndexOutOfBoundsException
block|{
return|return
name|this
operator|.
name|getRevisionNumbers
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      * Adds an object with a specified revision number.      *       * @param object the object      * @param revisionNumber the revision number      */
specifier|protected
name|void
name|addObject
parameter_list|(
name|T
name|object
parameter_list|,
name|int
name|revisionNumber
parameter_list|)
block|{
name|this
operator|.
name|getObjects
argument_list|()
operator|.
name|add
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|this
operator|.
name|getRevisionNumbers
argument_list|()
operator|.
name|add
argument_list|(
name|revisionNumber
argument_list|)
expr_stmt|;
block|}
comment|/**      * Sets the revision number of a specified object.      *       * @param object the object      * @param revisionNumber the revision number      */
specifier|protected
name|void
name|setRevisionNumber
parameter_list|(
name|T
name|object
parameter_list|,
name|int
name|revisionNumber
parameter_list|)
block|{
name|int
name|index
init|=
name|this
operator|.
name|getObjects
argument_list|()
operator|.
name|indexOf
argument_list|(
name|object
argument_list|)
decl_stmt|;
if|if
condition|(
name|index
operator|>
operator|-
literal|1
condition|)
block|{
name|this
operator|.
name|getRevisionNumbers
argument_list|()
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|revisionNumber
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Returns the size.      *       * @return the size      */
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|this
operator|.
name|getObjects
argument_list|()
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|this
operator|.
name|getObjects
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|>
literal|0
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"; "
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
literal|"object="
argument_list|)
operator|.
name|append
argument_list|(
name|this
operator|.
name|getObjects
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
literal|", revisionNumber="
argument_list|)
operator|.
name|append
argument_list|(
name|this
operator|.
name|getRevisionNumber
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

