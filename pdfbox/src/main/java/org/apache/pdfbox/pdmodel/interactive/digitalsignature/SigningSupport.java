begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|digitalsignature
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdfwriter
operator|.
name|COSWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_comment
comment|/**  * Class to be used when creating PDF signatures externally. COSWriter is used to obtain data to be  * signed and set the resulted CMS signature.  *  */
end_comment

begin_class
specifier|public
class|class
name|SigningSupport
implements|implements
name|ExternalSigningSupport
implements|,
name|Closeable
block|{
specifier|private
name|COSWriter
name|cosWriter
decl_stmt|;
specifier|public
name|SigningSupport
parameter_list|(
name|COSWriter
name|cosWriter
parameter_list|)
block|{
name|this
operator|.
name|cosWriter
operator|=
name|cosWriter
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|getContent
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|cosWriter
operator|.
name|getDataToSign
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSignature
parameter_list|(
name|byte
index|[]
name|signature
parameter_list|)
throws|throws
name|IOException
block|{
name|cosWriter
operator|.
name|writeExternalSignature
argument_list|(
name|signature
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|cosWriter
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|cosWriter
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|cosWriter
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

