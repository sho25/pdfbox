begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|pagenavigation
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_comment
comment|/**  * The direction in which the specified transition effect shall moves, expressed in degrees counterclockwise starting  * from a left-to-right direction. Only for {@link PDTransitionStyle#Wipe}, {@link PDTransitionStyle#Glitter},  * {@link PDTransitionStyle#Fly}, {@link PDTransitionStyle#Cover}, {@link PDTransitionStyle#Uncover} and  * {@link PDTransitionStyle#Push}.  *   * @author Andrea Vacondio  *  */
end_comment

begin_enum
specifier|public
enum|enum
name|PDTransitionDirection
block|{
name|LEFT_TO_RIGHT
argument_list|(
literal|0
argument_list|)
block|,
comment|/**      * Relevant only for the Wipe transition      */
name|BOTTOM_TO_TOP
argument_list|(
literal|90
argument_list|)
block|,
comment|/**      * Relevant only for the Wipe transition      */
name|RIGHT_TO_LEFT
argument_list|(
literal|180
argument_list|)
block|,
name|TOP_TO_BOTTOM
argument_list|(
literal|270
argument_list|)
block|,
comment|/**      * Relevant only for the Glitter transition      */
name|TOP_LEFT_TO_BOTTOM_RIGHT
argument_list|(
literal|315
argument_list|)
block|,
comment|/**      * Relevant only for the Fly transition when the value of SS is not 1.0      */
name|NONE
argument_list|(
literal|0
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|COSBase
name|getCOSBase
parameter_list|()
block|{
return|return
name|COSName
operator|.
name|NONE
return|;
block|}
block|}
block|;
specifier|private
name|int
name|degrees
decl_stmt|;
specifier|private
name|PDTransitionDirection
parameter_list|(
name|int
name|degrees
parameter_list|)
block|{
name|this
operator|.
name|degrees
operator|=
name|degrees
expr_stmt|;
block|}
comment|/**      * @return the value for this direction      */
specifier|public
name|COSBase
name|getCOSBase
parameter_list|()
block|{
return|return
name|COSInteger
operator|.
name|get
argument_list|(
name|degrees
argument_list|)
return|;
block|}
block|}
end_enum

end_unit

