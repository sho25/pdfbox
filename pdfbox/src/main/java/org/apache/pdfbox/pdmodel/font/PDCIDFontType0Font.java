begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|font
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_comment
comment|/**  * A Type0 CIDFont (CFF).  *   * @author Ben Litchfield  */
end_comment

begin_class
specifier|public
class|class
name|PDCIDFontType0Font
extends|extends
name|PDCIDFont
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|PDCIDFontType0Font
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|PDType1CFont
name|type1CFont
decl_stmt|;
comment|/**      * Constructor.      *       * @param fontDictionary The font dictionary according to the PDF specification.      */
specifier|public
name|PDCIDFontType0Font
parameter_list|(
name|COSDictionary
name|fontDictionary
parameter_list|,
name|PDType0Font
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|fontDictionary
argument_list|,
name|parent
argument_list|)
expr_stmt|;
name|PDFontDescriptor
name|fd
init|=
name|getFontDescriptor
argument_list|()
decl_stmt|;
if|if
condition|(
name|fd
operator|instanceof
name|PDFontDescriptorDictionary
condition|)
block|{
name|PDFontDescriptorDictionary
name|fdd
init|=
operator|(
name|PDFontDescriptorDictionary
operator|)
name|fd
decl_stmt|;
if|if
condition|(
name|fdd
operator|.
name|getFontFile3
argument_list|()
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|type1CFont
operator|=
operator|new
name|PDType1CFont
argument_list|(
name|dict
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|exception
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Can't create the embedded CFF-font"
argument_list|,
name|exception
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
comment|/**      * Returns the embedded Type1CFont.      *       * @return the Type1C font      */
specifier|public
name|PDType1CFont
name|getType1CFont
parameter_list|()
block|{
return|return
name|type1CFont
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|type1CFont
operator|!=
literal|null
condition|)
block|{
name|type1CFont
operator|.
name|clear
argument_list|()
expr_stmt|;
name|type1CFont
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

