begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_comment
comment|/**  * A scrollable list box. Contains several text items, one or more of which shall be selected as the  * field value.  *   * @author John Hewson  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|PDListBox
extends|extends
name|PDChoice
block|{
comment|/**      * @see PDField#PDField(PDAcroForm)      *      * @param acroForm The acroform.      */
specifier|public
name|PDListBox
parameter_list|(
name|PDAcroForm
name|acroForm
parameter_list|)
block|{
name|super
argument_list|(
name|acroForm
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructor.      *       * @param acroForm The form that this field is part of.      * @param field the PDF object to represent as a field.      * @param parent the parent node of the node      */
name|PDListBox
parameter_list|(
name|PDAcroForm
name|acroForm
parameter_list|,
name|COSDictionary
name|field
parameter_list|,
name|PDNonTerminalField
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|acroForm
argument_list|,
name|field
argument_list|,
name|parent
argument_list|)
expr_stmt|;
block|}
comment|/**      * This will get the top index "TI" value.      *      * @return the top index, default value 0.      */
specifier|public
name|int
name|getTopIndex
parameter_list|()
block|{
return|return
name|dictionary
operator|.
name|getInt
argument_list|(
name|COSName
operator|.
name|TI
argument_list|,
literal|0
argument_list|)
return|;
block|}
comment|/**      * This will set top index "TI" value.      *      * @param topIndex the value for the top index, null will remove the value.      */
specifier|public
name|void
name|setTopIndex
parameter_list|(
name|Integer
name|topIndex
parameter_list|)
block|{
if|if
condition|(
name|topIndex
operator|!=
literal|null
condition|)
block|{
name|dictionary
operator|.
name|setInt
argument_list|(
name|COSName
operator|.
name|TI
argument_list|,
name|topIndex
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|dictionary
operator|.
name|removeItem
argument_list|(
name|COSName
operator|.
name|TI
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
name|void
name|constructAppearances
parameter_list|()
throws|throws
name|IOException
block|{
name|AppearanceGeneratorHelper
name|apHelper
decl_stmt|;
name|apHelper
operator|=
operator|new
name|AppearanceGeneratorHelper
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|apHelper
operator|.
name|setAppearanceValue
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

