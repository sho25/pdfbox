begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|documentinterchange
operator|.
name|markedcontent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|COSObjectable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|optionalcontent
operator|.
name|PDOptionalContentGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|optionalcontent
operator|.
name|PDOptionalContentMembershipDictionary
import|;
end_import

begin_comment
comment|/**  * A property list is a dictionary containing private information meaningful to the conforming  * writer creating the marked content.  */
end_comment

begin_class
specifier|public
class|class
name|PDPropertyList
implements|implements
name|COSObjectable
block|{
specifier|protected
specifier|final
name|COSDictionary
name|dict
decl_stmt|;
comment|/**      * Creates a property list from the given dictionary.      * @param dict COS dictionary      */
specifier|public
specifier|static
name|PDPropertyList
name|create
parameter_list|(
name|COSDictionary
name|dict
parameter_list|)
block|{
if|if
condition|(
name|COSName
operator|.
name|OCG
operator|.
name|equals
argument_list|(
name|dict
operator|.
name|getItem
argument_list|(
name|COSName
operator|.
name|TYPE
argument_list|)
argument_list|)
condition|)
block|{
return|return
operator|new
name|PDOptionalContentGroup
argument_list|(
name|dict
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|COSName
operator|.
name|OCMD
operator|.
name|equals
argument_list|(
name|dict
operator|.
name|getItem
argument_list|(
name|COSName
operator|.
name|TYPE
argument_list|)
argument_list|)
condition|)
block|{
return|return
operator|new
name|PDOptionalContentMembershipDictionary
argument_list|(
name|dict
argument_list|)
return|;
block|}
else|else
block|{
comment|// todo: more types
return|return
operator|new
name|PDPropertyList
argument_list|(
name|dict
argument_list|)
return|;
block|}
block|}
comment|/**      * Constructor for subclasses.      */
specifier|protected
name|PDPropertyList
parameter_list|()
block|{
name|this
operator|.
name|dict
operator|=
operator|new
name|COSDictionary
argument_list|()
expr_stmt|;
block|}
comment|/**      * Constructor for subclasses.      */
specifier|protected
name|PDPropertyList
parameter_list|(
name|COSDictionary
name|dict
parameter_list|)
block|{
name|this
operator|.
name|dict
operator|=
name|dict
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|COSDictionary
name|getCOSObject
parameter_list|()
block|{
return|return
name|dict
return|;
block|}
block|}
end_class

end_unit

