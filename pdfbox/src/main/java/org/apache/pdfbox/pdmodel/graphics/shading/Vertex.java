begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|shading
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|geom
operator|.
name|Point2D
import|;
end_import

begin_comment
comment|/**  * Vertex for Type 4 and Type 5 shadings.  * @author Tilman Hausherr  */
end_comment

begin_class
class|class
name|Vertex
block|{
specifier|public
name|byte
name|flag
decl_stmt|;
comment|// used only with type 4 shading
specifier|public
name|Point2D
name|point
decl_stmt|;
specifier|public
name|float
index|[]
name|color
decl_stmt|;
specifier|public
name|Vertex
parameter_list|(
name|byte
name|flag
parameter_list|,
name|Point2D
name|point
parameter_list|,
name|float
index|[]
name|color
parameter_list|)
block|{
name|this
operator|.
name|flag
operator|=
name|flag
expr_stmt|;
name|this
operator|.
name|point
operator|=
name|point
expr_stmt|;
name|this
operator|.
name|color
operator|=
name|color
operator|.
name|clone
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|String
name|colorStr
init|=
literal|""
decl_stmt|;
for|for
control|(
name|float
name|f
range|:
name|color
control|)
block|{
if|if
condition|(
operator|!
name|colorStr
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|colorStr
operator|+=
literal|" "
expr_stmt|;
block|}
name|colorStr
operator|+=
name|String
operator|.
name|format
argument_list|(
literal|"%3.2f"
argument_list|,
name|f
argument_list|)
expr_stmt|;
block|}
return|return
literal|"Vertex{"
operator|+
name|flag
operator|+
literal|": "
operator|+
name|point
operator|+
literal|", colors=["
operator|+
name|colorStr
operator|+
literal|"] }"
return|;
block|}
block|}
end_class

end_unit

