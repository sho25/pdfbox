begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|pattern
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics2D
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Paint
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|PaintContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Rectangle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|RenderingHints
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|TexturePaint
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Transparency
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|color
operator|.
name|ColorSpace
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|geom
operator|.
name|AffineTransform
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|geom
operator|.
name|Rectangle2D
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|BufferedImage
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|ColorModel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|ComponentColorModel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|DataBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|WritableRaster
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdfviewer
operator|.
name|PageDrawer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|PDRectangle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDColor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
operator|.
name|PDColorSpace
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|pattern
operator|.
name|PDTilingPattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|util
operator|.
name|Matrix
import|;
end_import

begin_comment
comment|/**  * AWT Paint for a tiling pattern, which consists of a small repeating graphical figure.  * @author Andreas Lehmkühler  * @author John Hewson  */
end_comment

begin_class
specifier|public
class|class
name|TilingPaint
implements|implements
name|Paint
block|{
specifier|private
specifier|static
name|Color
name|TRANSPARENT
init|=
operator|new
name|Color
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|PDTilingPattern
name|pattern
decl_stmt|;
specifier|private
specifier|final
name|PDColorSpace
name|colorSpace
decl_stmt|;
specifier|private
specifier|final
name|PDColor
name|color
decl_stmt|;
comment|/**      * Creates a new colored tiling Paint.      * @param pattern tiling pattern dictionary      */
specifier|public
name|TilingPaint
parameter_list|(
name|PDTilingPattern
name|pattern
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|pattern
operator|=
name|pattern
expr_stmt|;
name|this
operator|.
name|colorSpace
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|color
operator|=
literal|null
expr_stmt|;
block|}
comment|/**      * Creates a new uncolored tiling Paint.      * @param pattern tiling pattern dictionary      * @param colorSpace color space for this tiling      * @param color color for this tiling      */
specifier|public
name|TilingPaint
parameter_list|(
name|PDTilingPattern
name|pattern
parameter_list|,
name|PDColorSpace
name|colorSpace
parameter_list|,
name|PDColor
name|color
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|pattern
operator|=
name|pattern
expr_stmt|;
name|this
operator|.
name|colorSpace
operator|=
name|colorSpace
expr_stmt|;
name|this
operator|.
name|color
operator|=
name|color
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|PaintContext
name|createContext
parameter_list|(
name|ColorModel
name|cm
parameter_list|,
name|Rectangle
name|deviceBounds
parameter_list|,
name|Rectangle2D
name|userBounds
parameter_list|,
name|AffineTransform
name|xform
parameter_list|,
name|RenderingHints
name|hints
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"TilingPaint#createContext"
operator|+
literal|" rectangle: "
operator|+
name|deviceBounds
operator|+
literal|" affineTransform: "
operator|+
name|xform
argument_list|)
expr_stmt|;
try|try
block|{
name|ColorSpace
name|outputCS
init|=
name|ColorSpace
operator|.
name|getInstance
argument_list|(
name|ColorSpace
operator|.
name|CS_sRGB
argument_list|)
decl_stmt|;
name|ColorModel
name|cm2
init|=
operator|new
name|ComponentColorModel
argument_list|(
name|outputCS
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|Transparency
operator|.
name|TRANSLUCENT
argument_list|,
name|DataBuffer
operator|.
name|TYPE_BYTE
argument_list|)
decl_stmt|;
comment|// DISABLED
comment|//return new TilingPaintContext(cm2 /*HACK*/, deviceBounds, xform, getTilingImage(cm, xform));
name|hints
operator|.
name|put
argument_list|(
name|RenderingHints
operator|.
name|KEY_TEXT_ANTIALIASING
argument_list|,
name|RenderingHints
operator|.
name|VALUE_TEXT_ANTIALIAS_ON
argument_list|)
expr_stmt|;
comment|// EXPERIMENT
comment|// ... CRAZY HACK:
name|TexturePaint
name|paint
init|=
operator|new
name|TexturePaint
argument_list|(
name|getTilingImage
argument_list|(
name|cm
argument_list|,
name|xform
argument_list|)
argument_list|,
name|getTransformedRect
argument_list|(
name|xform
argument_list|,
literal|false
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|paint
operator|.
name|createContext
argument_list|(
name|cm
argument_list|,
name|deviceBounds
argument_list|,
name|userBounds
argument_list|,
name|xform
argument_list|,
name|hints
argument_list|)
return|;
comment|// ^^^^^ USE SPACE RECT, NO XFORM.
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
comment|// TODO !!!!!!
comment|// TODO: log
return|return
name|TRANSPARENT
operator|.
name|createContext
argument_list|(
name|cm
argument_list|,
name|deviceBounds
argument_list|,
name|userBounds
argument_list|,
name|xform
argument_list|,
name|hints
argument_list|)
return|;
block|}
block|}
comment|//  gets rect in parent content stream coordinates
specifier|private
name|Rectangle
name|getTransformedRect
parameter_list|(
name|AffineTransform
name|transform
parameter_list|,
name|boolean
name|applyCTM
parameter_list|)
block|{
comment|// pattern matrix
name|Rectangle
name|rect
decl_stmt|;
if|if
condition|(
name|pattern
operator|.
name|getMatrix
argument_list|()
operator|==
literal|null
condition|)
block|{
name|rect
operator|=
operator|new
name|Rectangle
argument_list|(
name|pattern
operator|.
name|getBBox
argument_list|()
operator|.
name|createDimension
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|AffineTransform
name|at
init|=
name|pattern
operator|.
name|getMatrix
argument_list|()
operator|.
name|createAffineTransform
argument_list|()
decl_stmt|;
name|rect
operator|=
operator|new
name|Rectangle
argument_list|(
name|pattern
operator|.
name|getBBox
argument_list|()
operator|.
name|createDimension
argument_list|()
argument_list|)
expr_stmt|;
name|rect
operator|=
name|at
operator|.
name|createTransformedShape
argument_list|(
name|rect
argument_list|)
operator|.
name|getBounds
argument_list|()
expr_stmt|;
block|}
comment|// x/y step
if|if
condition|(
name|pattern
operator|.
name|getMatrix
argument_list|()
operator|!=
literal|null
condition|)
block|{
comment|// TODO can be -ve
name|rect
operator|.
name|width
operator|=
name|Math
operator|.
name|round
argument_list|(
name|pattern
operator|.
name|getXStep
argument_list|()
operator|*
name|Math
operator|.
name|abs
argument_list|(
name|pattern
operator|.
name|getMatrix
argument_list|()
operator|.
name|getXScale
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|height
operator|=
name|Math
operator|.
name|round
argument_list|(
name|pattern
operator|.
name|getYStep
argument_list|()
operator|*
name|Math
operator|.
name|abs
argument_list|(
name|pattern
operator|.
name|getMatrix
argument_list|()
operator|.
name|getYScale
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|width
operator|=
name|pattern
operator|.
name|getXStep
argument_list|()
expr_stmt|;
name|rect
operator|.
name|height
operator|=
name|pattern
operator|.
name|getYStep
argument_list|()
expr_stmt|;
block|}
comment|// ctm
if|if
condition|(
name|applyCTM
condition|)
block|{
name|rect
operator|=
name|transform
operator|.
name|createTransformedShape
argument_list|(
name|rect
argument_list|)
operator|.
name|getBounds
argument_list|()
expr_stmt|;
block|}
return|return
name|rect
return|;
block|}
comment|// gets image in parent stream coordinates
specifier|private
name|BufferedImage
name|getTilingImage
parameter_list|(
name|ColorModel
name|colorModel
parameter_list|,
name|AffineTransform
name|transform
parameter_list|)
throws|throws
name|IOException
block|{
comment|// TODO use colorModel parameter
name|ColorSpace
name|outputCS
init|=
name|ColorSpace
operator|.
name|getInstance
argument_list|(
name|ColorSpace
operator|.
name|CS_sRGB
argument_list|)
decl_stmt|;
name|ColorModel
name|cm
init|=
operator|new
name|ComponentColorModel
argument_list|(
name|outputCS
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|Transparency
operator|.
name|TRANSLUCENT
argument_list|,
name|DataBuffer
operator|.
name|TYPE_BYTE
argument_list|)
decl_stmt|;
name|Rectangle
name|rect
init|=
name|getTransformedRect
argument_list|(
name|transform
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|int
name|width
init|=
literal|1000
decl_stmt|;
name|int
name|height
init|=
literal|1000
decl_stmt|;
comment|// create raster
name|WritableRaster
name|raster
init|=
name|cm
operator|.
name|createCompatibleWritableRaster
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
decl_stmt|;
name|BufferedImage
name|image
init|=
operator|new
name|BufferedImage
argument_list|(
name|cm
argument_list|,
name|raster
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// matrix
name|AffineTransform
name|patternMatrix
decl_stmt|;
if|if
condition|(
name|pattern
operator|.
name|getMatrix
argument_list|()
operator|==
literal|null
condition|)
block|{
comment|// identity
name|patternMatrix
operator|=
operator|new
name|AffineTransform
argument_list|()
expr_stmt|;
block|}
else|else
block|{
comment|// pattern matrix
name|patternMatrix
operator|=
name|pattern
operator|.
name|getMatrix
argument_list|()
operator|.
name|createAffineTransform
argument_list|()
expr_stmt|;
comment|// flip -ve x-scale
if|if
condition|(
name|patternMatrix
operator|.
name|getScaleX
argument_list|()
operator|<
operator|-
literal|0
condition|)
block|{
name|patternMatrix
operator|.
name|scale
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
comment|// ************************************************************************************************************
comment|// I've figured this out: the pattern is drawn only once over the page background and then sampled. PDFBOX-1094
comment|// ************************************************************************************************************
comment|// ****TODO****  This code works for tiling_pattern1 but not for PDFBOX-1094 (instrument the fill commands to find out why)
comment|// NEW HACK: ASSUME STREAM TRANSFORM IS IDENTITY
name|transform
operator|=
name|AffineTransform
operator|.
name|getScaleInstance
argument_list|(
name|transform
operator|.
name|getScaleX
argument_list|()
argument_list|,
operator|-
name|transform
operator|.
name|getScaleY
argument_list|()
argument_list|)
expr_stmt|;
comment|//<--- HACK SCALING TAKEN FROM CTM (but should be from stream start)
comment|// TODO supposed to be relative to the parent stream's initial CTM, not its current CTM
comment|//patternMatrix.scale(transform.getScaleX(), -transform.getScaleY());
name|transform
operator|.
name|preConcatenate
argument_list|(
name|patternMatrix
argument_list|)
expr_stmt|;
name|Matrix
name|matrix
init|=
operator|new
name|Matrix
argument_list|()
decl_stmt|;
name|matrix
operator|.
name|setFromAffineTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
comment|// !!
name|Graphics2D
name|graphics
init|=
name|image
operator|.
name|createGraphics
argument_list|()
decl_stmt|;
name|PageDrawer
name|drawer
init|=
operator|new
name|PageDrawer
argument_list|()
decl_stmt|;
name|PDRectangle
name|pdRect
init|=
operator|new
name|PDRectangle
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
decl_stmt|;
comment|// NEW HACK: this is usually done in drawPage
name|graphics
operator|.
name|scale
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|graphics
operator|.
name|translate
argument_list|(
literal|0
argument_list|,
operator|-
name|height
argument_list|)
expr_stmt|;
name|drawer
operator|.
name|drawTilingPattern
argument_list|(
name|graphics
argument_list|,
name|pattern
argument_list|,
name|pdRect
argument_list|,
name|matrix
argument_list|,
name|colorSpace
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|drawer
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|graphics
operator|.
name|dispose
argument_list|()
expr_stmt|;
return|return
name|image
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getTransparency
parameter_list|()
block|{
return|return
name|Transparency
operator|.
name|TRANSLUCENT
return|;
block|}
block|}
end_class

end_unit

