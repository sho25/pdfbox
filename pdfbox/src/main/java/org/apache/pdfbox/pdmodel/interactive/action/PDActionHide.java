begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|action
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSBoolean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_comment
comment|/**  * This represents a thread action that can be executed in a PDF document.  *  * @author Evgeniy Muravitskiy  */
end_comment

begin_class
specifier|public
class|class
name|PDActionHide
extends|extends
name|PDAction
block|{
comment|/**      * This type of action this object represents.      */
specifier|public
specifier|static
specifier|final
name|String
name|SUB_TYPE
init|=
literal|"Hide"
decl_stmt|;
comment|/**      * Default Constructor      */
specifier|public
name|PDActionHide
parameter_list|()
block|{
name|setSubType
argument_list|(
name|SUB_TYPE
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructor      *      * @param a the action dictionary      */
specifier|public
name|PDActionHide
parameter_list|(
name|COSDictionary
name|a
parameter_list|)
block|{
name|super
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
comment|/**      * The annotation or annotations to be hidden or shown      *      * @return The T entry of the specific thread action dictionary.      */
specifier|public
name|COSBase
name|getT
parameter_list|()
block|{
comment|// Dictionary, String or Array
return|return
name|this
operator|.
name|action
operator|.
name|getDictionaryObject
argument_list|(
name|COSName
operator|.
name|T
argument_list|)
return|;
block|}
comment|/**      * @param t annotation or annotations      */
specifier|public
name|void
name|setT
parameter_list|(
name|COSBase
name|t
parameter_list|)
block|{
name|this
operator|.
name|action
operator|.
name|setItem
argument_list|(
name|COSName
operator|.
name|T
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
comment|/**      * A flag indicating whether to hide the annotation or show it      *      * @return true if annotation is hidden      */
specifier|public
name|boolean
name|getH
parameter_list|()
block|{
return|return
name|this
operator|.
name|action
operator|.
name|getBoolean
argument_list|(
name|COSName
operator|.
name|H
argument_list|,
literal|true
argument_list|)
return|;
block|}
comment|/**      * @param h hide flag      */
specifier|public
name|void
name|setH
parameter_list|(
name|boolean
name|h
parameter_list|)
block|{
name|this
operator|.
name|action
operator|.
name|setItem
argument_list|(
name|COSName
operator|.
name|H
argument_list|,
name|COSBoolean
operator|.
name|getBoolean
argument_list|(
name|h
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

