begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|documentinterchange
operator|.
name|logicalstructure
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSName
import|;
end_import

begin_comment
comment|/**  * A User attribute object.  *   * @author Johannes Koch  */
end_comment

begin_class
specifier|public
class|class
name|PDUserAttributeObject
extends|extends
name|PDAttributeObject
block|{
comment|/**      * Attribute owner for user properties      */
specifier|public
specifier|static
specifier|final
name|String
name|OWNER_USER_PROPERTIES
init|=
literal|"UserProperties"
decl_stmt|;
comment|/**      * Default constructor      */
specifier|public
name|PDUserAttributeObject
parameter_list|()
block|{
name|this
operator|.
name|setOwner
argument_list|(
name|OWNER_USER_PROPERTIES
argument_list|)
expr_stmt|;
block|}
comment|/**      *       * @param dictionary the dictionary      */
specifier|public
name|PDUserAttributeObject
parameter_list|(
name|COSDictionary
name|dictionary
parameter_list|)
block|{
name|super
argument_list|(
name|dictionary
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns the user properties.      *       * @return the user properties      */
specifier|public
name|List
argument_list|<
name|PDUserProperty
argument_list|>
name|getOwnerUserProperties
parameter_list|()
block|{
name|COSArray
name|p
init|=
operator|(
name|COSArray
operator|)
name|this
operator|.
name|getCOSDictionary
argument_list|()
operator|.
name|getDictionaryObject
argument_list|(
name|COSName
operator|.
name|P
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|PDUserProperty
argument_list|>
name|properties
init|=
operator|new
name|ArrayList
argument_list|<
name|PDUserProperty
argument_list|>
argument_list|(
name|p
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|p
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|properties
operator|.
name|add
argument_list|(
operator|new
name|PDUserProperty
argument_list|(
operator|(
name|COSDictionary
operator|)
name|p
operator|.
name|getObject
argument_list|(
name|i
argument_list|)
argument_list|,
name|this
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|properties
return|;
block|}
comment|/**      * Sets the user properties.      *       * @param userProperties the user properties      */
specifier|public
name|void
name|setUserProperties
parameter_list|(
name|List
argument_list|<
name|PDUserProperty
argument_list|>
name|userProperties
parameter_list|)
block|{
name|COSArray
name|p
init|=
operator|new
name|COSArray
argument_list|()
decl_stmt|;
for|for
control|(
name|PDUserProperty
name|userProperty
range|:
name|userProperties
control|)
block|{
name|p
operator|.
name|add
argument_list|(
name|userProperty
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|getCOSDictionary
argument_list|()
operator|.
name|setItem
argument_list|(
name|COSName
operator|.
name|P
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
comment|/**      * Adds a user property.      *       * @param userProperty the user property      */
specifier|public
name|void
name|addUserProperty
parameter_list|(
name|PDUserProperty
name|userProperty
parameter_list|)
block|{
name|COSArray
name|p
init|=
operator|(
name|COSArray
operator|)
name|this
operator|.
name|getCOSDictionary
argument_list|()
operator|.
name|getDictionaryObject
argument_list|(
name|COSName
operator|.
name|P
argument_list|)
decl_stmt|;
name|p
operator|.
name|add
argument_list|(
name|userProperty
argument_list|)
expr_stmt|;
name|this
operator|.
name|notifyChanged
argument_list|()
expr_stmt|;
block|}
comment|/**      * Removes a user property.      *       * @param userProperty the user property      */
specifier|public
name|void
name|removeUserProperty
parameter_list|(
name|PDUserProperty
name|userProperty
parameter_list|)
block|{
if|if
condition|(
name|userProperty
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|COSArray
name|p
init|=
operator|(
name|COSArray
operator|)
name|this
operator|.
name|getCOSDictionary
argument_list|()
operator|.
name|getDictionaryObject
argument_list|(
name|COSName
operator|.
name|P
argument_list|)
decl_stmt|;
name|p
operator|.
name|remove
argument_list|(
name|userProperty
operator|.
name|getCOSObject
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|notifyChanged
argument_list|()
expr_stmt|;
block|}
comment|/**      * @param userProperty        */
specifier|public
name|void
name|userPropertyChanged
parameter_list|(
name|PDUserProperty
name|userProperty
parameter_list|)
block|{              }
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
operator|new
name|StringBuilder
argument_list|()
operator|.
name|append
argument_list|(
name|super
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", userProperties="
argument_list|)
operator|.
name|append
argument_list|(
name|this
operator|.
name|getOwnerUserProperties
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

