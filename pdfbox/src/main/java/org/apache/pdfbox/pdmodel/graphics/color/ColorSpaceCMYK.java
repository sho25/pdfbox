begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|graphics
operator|.
name|color
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|color
operator|.
name|ColorSpace
import|;
end_import

begin_comment
comment|/**  * This class represents a CMYK color space.  *  * @author<a href="mailto:andreas@lehmi.de">Andreas Lehmk√ºhler</a>  * @version $Revision: 1.0 $  */
end_comment

begin_class
specifier|public
class|class
name|ColorSpaceCMYK
extends|extends
name|ColorSpace
block|{
comment|/**      * IDfor serialization.      */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|6362864473145799405L
decl_stmt|;
comment|/**      * Constructor.      */
specifier|public
name|ColorSpaceCMYK
parameter_list|()
block|{
name|super
argument_list|(
name|ColorSpace
operator|.
name|TYPE_CMYK
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
comment|/**      *  Converts colorvalues from RGB-colorspace to CIEXYZ-colorspace.      *  @param rgbvalue RGB colorvalues to be converted.      *  @return Returns converted colorvalues.      */
specifier|private
name|float
index|[]
name|fromRGBtoCIEXYZ
parameter_list|(
name|float
index|[]
name|rgbvalue
parameter_list|)
block|{
name|ColorSpace
name|colorspaceRGB
init|=
name|ColorSpace
operator|.
name|getInstance
argument_list|(
name|CS_sRGB
argument_list|)
decl_stmt|;
return|return
name|colorspaceRGB
operator|.
name|toCIEXYZ
argument_list|(
name|rgbvalue
argument_list|)
return|;
block|}
comment|/**      *  Converts colorvalues from CIEXYZ-colorspace to RGB-colorspace.      *  @param rgbvalue CIEXYZ colorvalues to be converted.      *  @return Returns converted colorvalues.      */
specifier|private
name|float
index|[]
name|fromCIEXYZtoRGB
parameter_list|(
name|float
index|[]
name|xyzvalue
parameter_list|)
block|{
name|ColorSpace
name|colorspaceXYZ
init|=
name|ColorSpace
operator|.
name|getInstance
argument_list|(
name|CS_CIEXYZ
argument_list|)
decl_stmt|;
return|return
name|colorspaceXYZ
operator|.
name|toRGB
argument_list|(
name|xyzvalue
argument_list|)
return|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|float
index|[]
name|fromCIEXYZ
parameter_list|(
name|float
index|[]
name|colorvalue
parameter_list|)
block|{
if|if
condition|(
name|colorvalue
operator|!=
literal|null
operator|&&
name|colorvalue
operator|.
name|length
operator|==
literal|3
condition|)
block|{
comment|// We have to convert from XYV to RGB to CMYK
return|return
name|fromRGB
argument_list|(
name|fromCIEXYZtoRGB
argument_list|(
name|colorvalue
argument_list|)
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|float
index|[]
name|fromRGB
parameter_list|(
name|float
index|[]
name|rgbvalue
parameter_list|)
block|{
if|if
condition|(
name|rgbvalue
operator|!=
literal|null
operator|&&
name|rgbvalue
operator|.
name|length
operator|==
literal|3
condition|)
block|{
comment|// First of all we have to convert from RGB to CMY
name|float
name|c
init|=
literal|1
operator|-
name|rgbvalue
index|[
literal|0
index|]
decl_stmt|;
name|float
name|m
init|=
literal|1
operator|-
name|rgbvalue
index|[
literal|1
index|]
decl_stmt|;
name|float
name|y
init|=
literal|1
operator|-
name|rgbvalue
index|[
literal|2
index|]
decl_stmt|;
comment|// Now we have to convert from CMY to CMYK
name|float
name|varK
init|=
literal|1
decl_stmt|;
name|float
index|[]
name|cmyk
init|=
operator|new
name|float
index|[
literal|4
index|]
decl_stmt|;
if|if
condition|(
name|c
operator|<
name|varK
condition|)
block|{
name|varK
operator|=
name|c
expr_stmt|;
block|}
if|if
condition|(
name|m
operator|<
name|varK
condition|)
block|{
name|varK
operator|=
name|m
expr_stmt|;
block|}
if|if
condition|(
name|y
operator|<
name|varK
condition|)
block|{
name|varK
operator|=
name|y
expr_stmt|;
block|}
if|if
condition|(
name|varK
operator|==
literal|1
condition|)
block|{
name|cmyk
index|[
literal|0
index|]
operator|=
name|cmyk
index|[
literal|1
index|]
operator|=
name|cmyk
index|[
literal|2
index|]
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
name|cmyk
index|[
literal|0
index|]
operator|=
operator|(
name|c
operator|-
name|varK
operator|)
operator|/
operator|(
literal|1
operator|-
name|varK
operator|)
expr_stmt|;
name|cmyk
index|[
literal|1
index|]
operator|=
operator|(
name|m
operator|-
name|varK
operator|)
operator|/
operator|(
literal|1
operator|-
name|varK
operator|)
expr_stmt|;
name|cmyk
index|[
literal|2
index|]
operator|=
operator|(
name|y
operator|-
name|varK
operator|)
operator|/
operator|(
literal|1
operator|-
name|varK
operator|)
expr_stmt|;
block|}
name|cmyk
index|[
literal|3
index|]
operator|=
name|varK
expr_stmt|;
return|return
name|cmyk
return|;
block|}
return|return
literal|null
return|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|float
index|[]
name|toCIEXYZ
parameter_list|(
name|float
index|[]
name|colorvalue
parameter_list|)
block|{
if|if
condition|(
name|colorvalue
operator|!=
literal|null
operator|&&
name|colorvalue
operator|.
name|length
operator|==
literal|4
condition|)
block|{
comment|// We have to convert from CMYK to RGB to XYV
return|return
name|fromRGBtoCIEXYZ
argument_list|(
name|toRGB
argument_list|(
name|colorvalue
argument_list|)
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|float
index|[]
name|toRGB
parameter_list|(
name|float
index|[]
name|colorvalue
parameter_list|)
block|{
if|if
condition|(
name|colorvalue
operator|!=
literal|null
operator|&&
name|colorvalue
operator|.
name|length
operator|==
literal|4
condition|)
block|{
comment|// First of all we have to convert from CMYK to CMY
name|float
name|c
init|=
operator|(
name|colorvalue
index|[
literal|0
index|]
operator|*
operator|(
literal|1
operator|-
name|colorvalue
index|[
literal|3
index|]
operator|)
operator|+
name|colorvalue
index|[
literal|3
index|]
operator|)
decl_stmt|;
name|float
name|m
init|=
operator|(
name|colorvalue
index|[
literal|1
index|]
operator|*
operator|(
literal|1
operator|-
name|colorvalue
index|[
literal|3
index|]
operator|)
operator|+
name|colorvalue
index|[
literal|3
index|]
operator|)
decl_stmt|;
name|float
name|y
init|=
operator|(
name|colorvalue
index|[
literal|2
index|]
operator|*
operator|(
literal|1
operator|-
name|colorvalue
index|[
literal|3
index|]
operator|)
operator|+
name|colorvalue
index|[
literal|3
index|]
operator|)
decl_stmt|;
comment|// Now we have to convert from CMY to RGB
name|float
index|[]
name|rgbvalues
init|=
operator|new
name|float
index|[
literal|3
index|]
decl_stmt|;
name|rgbvalues
index|[
literal|0
index|]
operator|=
literal|1
operator|-
name|c
expr_stmt|;
name|rgbvalues
index|[
literal|1
index|]
operator|=
literal|1
operator|-
name|m
expr_stmt|;
name|rgbvalues
index|[
literal|2
index|]
operator|=
literal|1
operator|-
name|y
expr_stmt|;
return|return
name|rgbvalues
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

