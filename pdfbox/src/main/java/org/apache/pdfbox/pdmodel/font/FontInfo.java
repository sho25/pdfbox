begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|font
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|FontBoxFont
import|;
end_import

begin_comment
comment|/**  * Information about a font on the system.  *  * @author John Hewson  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|FontInfo
block|{
comment|/**      * Returns the PostScript name of the font.      */
specifier|public
specifier|abstract
name|String
name|getPostScriptName
parameter_list|()
function_decl|;
comment|/**      * Returns the font's format.      */
specifier|public
specifier|abstract
name|FontFormat
name|getFormat
parameter_list|()
function_decl|;
comment|/**      * Returns the CIDSystemInfo associated with the font, if any.      */
specifier|public
specifier|abstract
name|PDCIDSystemInfo
name|getCIDSystemInfo
parameter_list|()
function_decl|;
comment|/**      * Returns a new FontBox font instance for the font. Implementors of this method must not      * cache the return value of this method unless doing so via the current {@link FontCache}.      */
specifier|public
specifier|abstract
name|FontBoxFont
name|getFont
parameter_list|()
function_decl|;
comment|/**      * Returns the sFamilyClass field of the "OS/2" table, or -1.      */
specifier|public
specifier|abstract
name|int
name|getFamilyClass
parameter_list|()
function_decl|;
comment|/**      * Returns the usWeightClass field of the "OS/2" table, or -1.      */
specifier|public
specifier|abstract
name|int
name|getWeightClass
parameter_list|()
function_decl|;
comment|/**      * Returns the usWeightClass field as a Panose Weight.      */
specifier|final
name|int
name|getWeightClassAsPanose
parameter_list|()
block|{
name|int
name|usWeightClass
init|=
name|getWeightClass
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|usWeightClass
condition|)
block|{
case|case
operator|-
literal|1
case|:
return|return
literal|0
return|;
case|case
literal|0
case|:
return|return
literal|0
return|;
case|case
literal|100
case|:
return|return
literal|2
return|;
case|case
literal|200
case|:
return|return
literal|3
return|;
case|case
literal|300
case|:
return|return
literal|4
return|;
case|case
literal|400
case|:
return|return
literal|5
return|;
case|case
literal|500
case|:
return|return
literal|6
return|;
case|case
literal|600
case|:
return|return
literal|7
return|;
case|case
literal|700
case|:
return|return
literal|8
return|;
case|case
literal|800
case|:
return|return
literal|9
return|;
case|case
literal|900
case|:
return|return
literal|10
return|;
default|default:
return|return
literal|0
return|;
block|}
block|}
comment|/**      * Returns the ulCodePageRange1 field of the "OS/2" table, or 0.      */
specifier|public
specifier|abstract
name|int
name|getCodePageRange1
parameter_list|()
function_decl|;
comment|/**      * Returns the ulCodePageRange2 field of the "OS/2" table, or 0.      */
specifier|public
specifier|abstract
name|int
name|getCodePageRange2
parameter_list|()
function_decl|;
comment|/**      * Returns the ulCodePageRange1 and ulCodePageRange1 field of the "OS/2" table, or 0.      */
specifier|final
name|long
name|getCodePageRange
parameter_list|()
block|{
name|long
name|range1
init|=
name|getCodePageRange1
argument_list|()
operator|&
literal|0x00000000ffffffffL
decl_stmt|;
name|long
name|range2
init|=
name|getCodePageRange2
argument_list|()
operator|&
literal|0x00000000ffffffffL
decl_stmt|;
return|return
name|range2
operator|<<
literal|32
operator||
name|range1
return|;
block|}
comment|/**      * Returns the macStyle field of the "head" table, or -1.      */
specifier|public
specifier|abstract
name|int
name|getMacStyle
parameter_list|()
function_decl|;
comment|/**      * Returns the Panose classification of the font, if any.      */
specifier|public
specifier|abstract
name|PDPanoseClassification
name|getPanose
parameter_list|()
function_decl|;
comment|// todo: 'post' table for Italic. Also: OS/2 fsSelection for italic/bold.
comment|// todo: ulUnicodeRange too?
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getPostScriptName
argument_list|()
operator|+
literal|" ("
operator|+
name|getFormat
argument_list|()
operator|+
literal|", mac: 0x"
operator|+
name|Integer
operator|.
name|toHexString
argument_list|(
name|getMacStyle
argument_list|()
argument_list|)
operator|+
literal|", os/2: 0x"
operator|+
name|Integer
operator|.
name|toHexString
argument_list|(
name|getFamilyClass
argument_list|()
argument_list|)
operator|+
literal|", cid: "
operator|+
name|getCIDSystemInfo
argument_list|()
operator|+
literal|")"
return|;
block|}
block|}
end_class

end_unit

