begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|font
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|FontBoxFont
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|fontbox
operator|.
name|ttf
operator|.
name|OpenTypeFont
import|;
end_import

begin_comment
comment|/**  * A CIDFontMapping is a kind of FontMapping which allows for an additional TrueTypeFont substitute  * to be provided if a CID font is not available.  *  * @author John Hewson  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|CIDFontMapping
extends|extends
name|FontMapping
argument_list|<
name|OpenTypeFont
argument_list|>
block|{
specifier|private
specifier|final
name|FontBoxFont
name|ttf
decl_stmt|;
name|CIDFontMapping
parameter_list|(
name|OpenTypeFont
name|font
parameter_list|,
name|FontBoxFont
name|fontBoxFont
parameter_list|,
name|boolean
name|isFallback
parameter_list|)
block|{
name|super
argument_list|(
name|font
argument_list|,
name|isFallback
argument_list|)
expr_stmt|;
name|this
operator|.
name|ttf
operator|=
name|fontBoxFont
expr_stmt|;
block|}
comment|/**      * Returns a TrueType font when isCIDFont() is true, otherwise null.      */
specifier|public
name|FontBoxFont
name|getTrueTypeFont
parameter_list|()
block|{
return|return
name|ttf
return|;
block|}
comment|/**      * Returns true if this is a CID font.      */
specifier|public
name|boolean
name|isCIDFont
parameter_list|()
block|{
return|return
name|getFont
argument_list|()
operator|!=
literal|null
return|;
block|}
block|}
end_class

end_unit

