begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|interactive
operator|.
name|action
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSDictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|COSObjectable
import|;
end_import

begin_comment
comment|/**  * This is the implementation of an URI dictionary.  *  */
end_comment

begin_class
specifier|public
class|class
name|PDURIDictionary
implements|implements
name|COSObjectable
block|{
specifier|private
name|COSDictionary
name|uriDictionary
decl_stmt|;
comment|/**      * Constructor.      *       */
specifier|public
name|PDURIDictionary
parameter_list|()
block|{
name|this
operator|.
name|uriDictionary
operator|=
operator|new
name|COSDictionary
argument_list|()
expr_stmt|;
block|}
comment|/**      * Constructor.      *       * @param dictionary the corresponding dictionary      */
specifier|public
name|PDURIDictionary
parameter_list|(
name|COSDictionary
name|dictionary
parameter_list|)
block|{
name|this
operator|.
name|uriDictionary
operator|=
name|dictionary
expr_stmt|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|COSBase
name|getCOSObject
parameter_list|()
block|{
return|return
name|this
operator|.
name|uriDictionary
return|;
block|}
comment|/**      * Returns the corresponding dictionary.      * @return the dictionary      */
specifier|public
name|COSDictionary
name|getDictionary
parameter_list|()
block|{
return|return
name|this
operator|.
name|uriDictionary
return|;
block|}
comment|/**      * This will get the base URI to be used in resolving relative URI references.      * URI actions within the document may specify URIs in partial form, to be interpreted      * relative to this base address. If no base URI is specified, such partial URIs      * will be interpreted relative to the location of the document itself.      * The use of this entry is parallel to that of the body element&lt;BASE&gt;, as described      * in the HTML 4.01 Specification.      *      * @return The URI entry of the specific URI dictionary.      */
specifier|public
name|String
name|getBase
parameter_list|()
block|{
return|return
name|this
operator|.
name|getDictionary
argument_list|()
operator|.
name|getString
argument_list|(
literal|"Base"
argument_list|)
return|;
block|}
comment|/**      * This will set the base URI to be used in resolving relative URI references.      * URI actions within the document may specify URIs in partial form, to be interpreted      * relative to this base address. If no base URI is specified, such partial URIs      * will be interpreted relative to the location of the document itself.      * The use of this entry is parallel to that of the body element&lt;BASE&gt;, as described      * in the HTML 4.01 Specification.      *      * @param base The the base URI to be used.      */
specifier|public
name|void
name|setBase
parameter_list|(
name|String
name|base
parameter_list|)
block|{
name|this
operator|.
name|getDictionary
argument_list|()
operator|.
name|setString
argument_list|(
literal|"Base"
argument_list|,
name|base
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

