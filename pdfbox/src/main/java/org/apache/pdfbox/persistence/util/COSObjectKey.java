begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|persistence
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSObject
import|;
end_import

begin_comment
comment|/**  * Object representing the physical reference to an indirect pdf object.  *  * @author Michael Traut  * @version $Revision: 1.5 $  */
end_comment

begin_class
specifier|public
class|class
name|COSObjectKey
implements|implements
name|Comparable
argument_list|<
name|COSObjectKey
argument_list|>
block|{
specifier|private
name|long
name|number
decl_stmt|;
specifier|private
name|long
name|generation
decl_stmt|;
comment|/**      * PDFObjectKey constructor comment.      *      * @param object The object that this key will represent.      */
specifier|public
name|COSObjectKey
parameter_list|(
name|COSObject
name|object
parameter_list|)
block|{
name|this
argument_list|(
name|object
operator|.
name|getObjectNumber
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|,
name|object
operator|.
name|getGenerationNumber
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * PDFObjectKey constructor comment.      *      * @param num The object number.      * @param gen The object generation number.      */
specifier|public
name|COSObjectKey
parameter_list|(
name|long
name|num
parameter_list|,
name|long
name|gen
parameter_list|)
block|{
name|setNumber
argument_list|(
name|num
argument_list|)
expr_stmt|;
name|setGeneration
argument_list|(
name|gen
argument_list|)
expr_stmt|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
operator|(
name|obj
operator|instanceof
name|COSObjectKey
operator|)
operator|&&
operator|(
operator|(
name|COSObjectKey
operator|)
name|obj
operator|)
operator|.
name|getNumber
argument_list|()
operator|==
name|getNumber
argument_list|()
operator|&&
operator|(
operator|(
name|COSObjectKey
operator|)
name|obj
operator|)
operator|.
name|getGeneration
argument_list|()
operator|==
name|getGeneration
argument_list|()
return|;
block|}
comment|/**      * This will get the generation number.      *      * @return The objects generation number.      */
specifier|public
name|long
name|getGeneration
parameter_list|()
block|{
return|return
name|generation
return|;
block|}
comment|/**      * This will get the objects id.      *      * @return The object's id.      */
specifier|public
name|long
name|getNumber
parameter_list|()
block|{
return|return
name|number
return|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
call|(
name|int
call|)
argument_list|(
name|number
operator|+
name|generation
argument_list|)
return|;
block|}
comment|/**      * This will set the objects generation number.      *      * @param newGeneration The objects generation number.      */
specifier|public
name|void
name|setGeneration
parameter_list|(
name|long
name|newGeneration
parameter_list|)
block|{
name|generation
operator|=
name|newGeneration
expr_stmt|;
block|}
comment|/**      * This will set the objects id.      *      * @param newNumber The objects number.      */
specifier|public
name|void
name|setNumber
parameter_list|(
name|long
name|newNumber
parameter_list|)
block|{
name|number
operator|=
name|newNumber
expr_stmt|;
block|}
comment|/**      * {@inheritDoc}      */
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|""
operator|+
name|getNumber
argument_list|()
operator|+
literal|" "
operator|+
name|getGeneration
argument_list|()
operator|+
literal|" R"
return|;
block|}
comment|/** {@inheritDoc} */
specifier|public
name|int
name|compareTo
parameter_list|(
name|COSObjectKey
name|other
parameter_list|)
block|{
if|if
condition|(
name|getNumber
argument_list|()
operator|<
name|other
operator|.
name|getNumber
argument_list|()
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
elseif|else
if|if
condition|(
name|getNumber
argument_list|()
operator|>
name|other
operator|.
name|getNumber
argument_list|()
condition|)
block|{
return|return
literal|1
return|;
block|}
else|else
block|{
if|if
condition|(
name|getGeneration
argument_list|()
operator|<
name|other
operator|.
name|getGeneration
argument_list|()
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
elseif|else
if|if
condition|(
name|getGeneration
argument_list|()
operator|>
name|other
operator|.
name|getGeneration
argument_list|()
condition|)
block|{
return|return
literal|1
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
block|}
block|}
end_class

end_unit

