begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|encoding
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|spi
operator|.
name|CharsetProvider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * {@link CharsetProvider} implementation for publishing PDFBox's encodings.  * @version $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|PDFBoxCharsetProvider
extends|extends
name|CharsetProvider
block|{
specifier|private
specifier|final
name|Set
argument_list|<
name|Charset
argument_list|>
name|available
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|<
name|Charset
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Charset
argument_list|>
name|map
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|HashMap
argument_list|<
name|String
argument_list|,
name|Charset
argument_list|>
argument_list|()
decl_stmt|;
comment|/**      * Constructor.      */
specifier|public
name|PDFBoxCharsetProvider
parameter_list|()
block|{
name|available
operator|.
name|add
argument_list|(
name|PDFDocEncodingCharset
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
for|for
control|(
name|Charset
name|cs
range|:
name|available
control|)
block|{
name|map
operator|.
name|put
argument_list|(
name|cs
operator|.
name|name
argument_list|()
argument_list|,
name|cs
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|alias
range|:
name|cs
operator|.
name|aliases
argument_list|()
control|)
block|{
name|map
operator|.
name|put
argument_list|(
name|alias
argument_list|,
name|cs
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/** {@inheritDoc} */
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|Charset
argument_list|>
name|charsets
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|available
argument_list|)
operator|.
name|iterator
argument_list|()
return|;
block|}
comment|/** {@inheritDoc} */
annotation|@
name|Override
specifier|public
name|Charset
name|charsetForName
parameter_list|(
name|String
name|charsetName
parameter_list|)
block|{
return|return
name|map
operator|.
name|get
argument_list|(
name|charsetName
argument_list|)
return|;
block|}
block|}
end_class

end_unit

