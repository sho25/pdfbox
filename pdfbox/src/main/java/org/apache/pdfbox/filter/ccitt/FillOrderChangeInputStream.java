begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_comment
comment|/* $Id$ */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|filter
operator|.
name|ccitt
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FilterInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_comment
comment|/**  * This filtering input stream does a fill order change required for certain TIFF images.  * @version $Revision$  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|FillOrderChangeInputStream
extends|extends
name|FilterInputStream
block|{
comment|/**      * Main constructor.      * @param in the underlying input stream      */
specifier|public
name|FillOrderChangeInputStream
parameter_list|(
name|InputStream
name|in
parameter_list|)
block|{
name|super
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
comment|/** {@inheritDoc} */
specifier|public
name|int
name|read
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|result
init|=
name|super
operator|.
name|read
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|>
literal|0
condition|)
block|{
name|int
name|endpos
init|=
name|off
operator|+
name|result
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|off
init|;
name|i
operator|<
name|endpos
condition|;
name|i
operator|++
control|)
block|{
name|b
index|[
name|i
index|]
operator|=
name|FLIP_TABLE
index|[
name|b
index|[
name|i
index|]
operator|&
literal|0xff
index|]
expr_stmt|;
block|}
block|}
return|return
name|result
return|;
block|}
comment|/** {@inheritDoc} */
specifier|public
name|int
name|read
parameter_list|()
throws|throws
name|IOException
block|{
name|int
name|b
init|=
name|super
operator|.
name|read
argument_list|()
decl_stmt|;
if|if
condition|(
name|b
operator|<
literal|0
condition|)
block|{
return|return
name|b
return|;
block|}
else|else
block|{
return|return
name|FLIP_TABLE
index|[
name|b
index|]
operator|&
literal|0xff
return|;
block|}
block|}
comment|// Table to be used when fillOrder = 2, for flipping bytes.
comment|// Copied from the TIFFFaxDecoder class
specifier|private
specifier|static
specifier|final
name|byte
index|[]
name|FLIP_TABLE
init|=
block|{
literal|0
block|,
operator|-
literal|128
block|,
literal|64
block|,
operator|-
literal|64
block|,
literal|32
block|,
operator|-
literal|96
block|,
literal|96
block|,
operator|-
literal|32
block|,
literal|16
block|,
operator|-
literal|112
block|,
literal|80
block|,
operator|-
literal|48
block|,
literal|48
block|,
operator|-
literal|80
block|,
literal|112
block|,
operator|-
literal|16
block|,
literal|8
block|,
operator|-
literal|120
block|,
literal|72
block|,
operator|-
literal|56
block|,
literal|40
block|,
operator|-
literal|88
block|,
literal|104
block|,
operator|-
literal|24
block|,
literal|24
block|,
operator|-
literal|104
block|,
literal|88
block|,
operator|-
literal|40
block|,
literal|56
block|,
operator|-
literal|72
block|,
literal|120
block|,
operator|-
literal|8
block|,
literal|4
block|,
operator|-
literal|124
block|,
literal|68
block|,
operator|-
literal|60
block|,
literal|36
block|,
operator|-
literal|92
block|,
literal|100
block|,
operator|-
literal|28
block|,
literal|20
block|,
operator|-
literal|108
block|,
literal|84
block|,
operator|-
literal|44
block|,
literal|52
block|,
operator|-
literal|76
block|,
literal|116
block|,
operator|-
literal|12
block|,
literal|12
block|,
operator|-
literal|116
block|,
literal|76
block|,
operator|-
literal|52
block|,
literal|44
block|,
operator|-
literal|84
block|,
literal|108
block|,
operator|-
literal|20
block|,
literal|28
block|,
operator|-
literal|100
block|,
literal|92
block|,
operator|-
literal|36
block|,
literal|60
block|,
operator|-
literal|68
block|,
literal|124
block|,
operator|-
literal|4
block|,
literal|2
block|,
operator|-
literal|126
block|,
literal|66
block|,
operator|-
literal|62
block|,
literal|34
block|,
operator|-
literal|94
block|,
literal|98
block|,
operator|-
literal|30
block|,
literal|18
block|,
operator|-
literal|110
block|,
literal|82
block|,
operator|-
literal|46
block|,
literal|50
block|,
operator|-
literal|78
block|,
literal|114
block|,
operator|-
literal|14
block|,
literal|10
block|,
operator|-
literal|118
block|,
literal|74
block|,
operator|-
literal|54
block|,
literal|42
block|,
operator|-
literal|86
block|,
literal|106
block|,
operator|-
literal|22
block|,
literal|26
block|,
operator|-
literal|102
block|,
literal|90
block|,
operator|-
literal|38
block|,
literal|58
block|,
operator|-
literal|70
block|,
literal|122
block|,
operator|-
literal|6
block|,
literal|6
block|,
operator|-
literal|122
block|,
literal|70
block|,
operator|-
literal|58
block|,
literal|38
block|,
operator|-
literal|90
block|,
literal|102
block|,
operator|-
literal|26
block|,
literal|22
block|,
operator|-
literal|106
block|,
literal|86
block|,
operator|-
literal|42
block|,
literal|54
block|,
operator|-
literal|74
block|,
literal|118
block|,
operator|-
literal|10
block|,
literal|14
block|,
operator|-
literal|114
block|,
literal|78
block|,
operator|-
literal|50
block|,
literal|46
block|,
operator|-
literal|82
block|,
literal|110
block|,
operator|-
literal|18
block|,
literal|30
block|,
operator|-
literal|98
block|,
literal|94
block|,
operator|-
literal|34
block|,
literal|62
block|,
operator|-
literal|66
block|,
literal|126
block|,
operator|-
literal|2
block|,
literal|1
block|,
operator|-
literal|127
block|,
literal|65
block|,
operator|-
literal|63
block|,
literal|33
block|,
operator|-
literal|95
block|,
literal|97
block|,
operator|-
literal|31
block|,
literal|17
block|,
operator|-
literal|111
block|,
literal|81
block|,
operator|-
literal|47
block|,
literal|49
block|,
operator|-
literal|79
block|,
literal|113
block|,
operator|-
literal|15
block|,
literal|9
block|,
operator|-
literal|119
block|,
literal|73
block|,
operator|-
literal|55
block|,
literal|41
block|,
operator|-
literal|87
block|,
literal|105
block|,
operator|-
literal|23
block|,
literal|25
block|,
operator|-
literal|103
block|,
literal|89
block|,
operator|-
literal|39
block|,
literal|57
block|,
operator|-
literal|71
block|,
literal|121
block|,
operator|-
literal|7
block|,
literal|5
block|,
operator|-
literal|123
block|,
literal|69
block|,
operator|-
literal|59
block|,
literal|37
block|,
operator|-
literal|91
block|,
literal|101
block|,
operator|-
literal|27
block|,
literal|21
block|,
operator|-
literal|107
block|,
literal|85
block|,
operator|-
literal|43
block|,
literal|53
block|,
operator|-
literal|75
block|,
literal|117
block|,
operator|-
literal|11
block|,
literal|13
block|,
operator|-
literal|115
block|,
literal|77
block|,
operator|-
literal|51
block|,
literal|45
block|,
operator|-
literal|83
block|,
literal|109
block|,
operator|-
literal|19
block|,
literal|29
block|,
operator|-
literal|99
block|,
literal|93
block|,
operator|-
literal|35
block|,
literal|61
block|,
operator|-
literal|67
block|,
literal|125
block|,
operator|-
literal|3
block|,
literal|3
block|,
operator|-
literal|125
block|,
literal|67
block|,
operator|-
literal|61
block|,
literal|35
block|,
operator|-
literal|93
block|,
literal|99
block|,
operator|-
literal|29
block|,
literal|19
block|,
operator|-
literal|109
block|,
literal|83
block|,
operator|-
literal|45
block|,
literal|51
block|,
operator|-
literal|77
block|,
literal|115
block|,
operator|-
literal|13
block|,
literal|11
block|,
operator|-
literal|117
block|,
literal|75
block|,
operator|-
literal|53
block|,
literal|43
block|,
operator|-
literal|85
block|,
literal|107
block|,
operator|-
literal|21
block|,
literal|27
block|,
operator|-
literal|101
block|,
literal|91
block|,
operator|-
literal|37
block|,
literal|59
block|,
operator|-
literal|69
block|,
literal|123
block|,
operator|-
literal|5
block|,
literal|7
block|,
operator|-
literal|121
block|,
literal|71
block|,
operator|-
literal|57
block|,
literal|39
block|,
operator|-
literal|89
block|,
literal|103
block|,
operator|-
literal|25
block|,
literal|23
block|,
operator|-
literal|105
block|,
literal|87
block|,
operator|-
literal|41
block|,
literal|55
block|,
operator|-
literal|73
block|,
literal|119
block|,
operator|-
literal|9
block|,
literal|15
block|,
operator|-
literal|113
block|,
literal|79
block|,
operator|-
literal|49
block|,
literal|47
block|,
operator|-
literal|81
block|,
literal|111
block|,
operator|-
literal|17
block|,
literal|31
block|,
operator|-
literal|97
block|,
literal|95
block|,
operator|-
literal|33
block|,
literal|63
block|,
operator|-
literal|65
block|,
literal|127
block|,
operator|-
literal|1
block|,     }
decl_stmt|;
comment|// end
block|}
end_class

end_unit

